[{"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/actions/Actions.tsx":"1","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/actions/index.ts":"2","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/alert/Alert.tsx":"3","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/alert/index.ts":"4","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/alert-block/AlertBlock.tsx":"5","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/alert-block/index.ts":"6","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/block-accordion/BlockAccordion.tsx":"7","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/block-accordion/index.ts":"8","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/block-content/BlockContent.tsx":"9","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/block-content/index.ts":"10","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/block-tabs/BlockTabs.tsx":"11","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/block-tabs/index.ts":"12","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/breadcrumbs/Breadcrumbs.tsx":"13","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/breadcrumbs/index.ts":"14","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/button/Button.tsx":"15","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/button/index.ts":"16","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/checkbox/Checkbox.tsx":"17","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/checkbox/CheckboxProps.ts":"18","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/checkbox/index.ts":"19","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/checkbox-field/CheckboxField.tsx":"20","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/checkbox-field/CheckboxFieldOptionModel.ts":"21","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/checkbox-field/CheckboxFieldProps.ts":"22","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/checkbox-field/index.ts":"23","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/code-field/CodeField.tsx":"24","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/code-field/CodeFieldProps.ts":"25","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/code-field/index.ts":"26","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/content-suggest/ContentSuggest.tsx":"27","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/content-suggest/ContentSuggestOptionModel.ts":"28","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/content-suggest/ContentSuggestProps.ts":"29","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/content-suggest/index.ts":"30","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/details/Details.tsx":"31","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/details/index.ts":"32","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/drop-up/DropUp.tsx":"33","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/drop-up/index.ts":"34","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/extended-progress-bar/ExtendedProgressBar.tsx":"35","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/extended-progress-bar/index.ts":"36","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/footer-app/FooterApp.tsx":"37","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/footer-app/index.ts":"38","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/footer-nav/FooterNav.tsx":"39","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/footer-nav/index.ts":"40","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/footer-out/FooterOut.tsx":"41","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/footer-out/index.ts":"42","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/glossary/Glossary.tsx":"43","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/glossary/index.ts":"44","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/header/Header.tsx":"45","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/header/HeaderMenu.tsx":"46","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/header/index.ts":"47","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/hint/Hint.tsx":"48","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/hint/index.ts":"49","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/index.ts":"50","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/input-modal/InputModal.tsx":"51","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/input-modal/index.ts":"52","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/link/BlockLink.tsx":"53","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/link/FileLink.tsx":"54","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/link/Link.tsx":"55","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/link/SectionLink.tsx":"56","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/link/index.ts":"57","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/list/List.tsx":"58","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/list/index.ts":"59","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/logo-block-link/LogoBlockLink.tsx":"60","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/logo-block-link/index.ts":"61","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/logo-link/LogoLink.tsx":"62","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/logo-link/index.ts":"63","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/markdown/Markdown.tsx":"64","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/markdown/index.ts":"65","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/menu/MenuCaption.tsx":"66","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/menu/MenuContainer.tsx":"67","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/menu/MenuItem.tsx":"68","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/menu/MenuLink.tsx":"69","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/menu/index.ts":"70","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/modal/SimpleModal.tsx":"71","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/modal/index.ts":"72","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/nav-link/NavLink.tsx":"73","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/nav-link/index.ts":"74","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/notice/Notice.tsx":"75","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/notice/index.ts":"76","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/oops/Oops.tsx":"77","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/oops/index.ts":"78","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/pagination/Pagination.tsx":"79","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/pagination/PaginationLink.tsx":"80","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/pagination/index.ts":"81","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/password-field/PasswordField.tsx":"82","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/password-field/PasswordFieldProps.ts":"83","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/password-field/index.ts":"84","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/phone-field/PhoneField.tsx":"85","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/phone-field/PhoneFieldProps.ts":"86","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/phone-field/index.ts":"87","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/progress-bar/ProgressBar.tsx":"88","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/progress-bar/index.ts":"89","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/radio-field/RadioField.tsx":"90","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/radio-field/RadioFieldOptionModel.ts":"91","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/radio-field/RadioFieldProps.ts":"92","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/radio-field/index.ts":"93","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/rating/Rating.tsx":"94","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/rating/index.ts":"95","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/select-field/SelectField.tsx":"96","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/select-field/index.ts":"97","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/status/Status.tsx":"98","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/status/index.ts":"99","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/suggest-field/SuggestField.tsx":"100","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/suggest-field/SuggestFieldOptionModel.ts":"101","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/suggest-field/SuggestFieldProps.ts":"102","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/suggest-field/index.ts":"103","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/switch/Switch.tsx":"104","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/switch/SwitchProps.ts":"105","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/switch/index.ts":"106","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/switch-field/SwitchField.tsx":"107","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/switch-field/SwitchFieldOptionModel.ts":"108","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/switch-field/SwitchFieldProps.ts":"109","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/switch-field/index.ts":"110","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/tabs/Tabs.tsx":"111","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/tabs/index.ts":"112","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/text-area-field/TextAreaField.tsx":"113","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/text-area-field/index.tsx":"114","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/text-field/TextField.tsx":"115","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/text-field/TextFieldProps.ts":"116","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/text-field/index.ts":"117","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/typography/Caption.tsx":"118","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/typography/Heading.tsx":"119","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/typography/Paragraph.tsx":"120","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/typography/Text.tsx":"121","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/typography/Title.tsx":"122","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/typography/index.ts":"123","/home/runner/work/pijma/pijma/packages/mobile/src/main/webapp/components/ComponentsListRenderer.tsx":"124","/home/runner/work/pijma/pijma/packages/mobile/src/main/webapp/components/ExamplesRenderer.tsx":"125","/home/runner/work/pijma/pijma/packages/mobile/src/main/webapp/components/Heading.tsx":"126","/home/runner/work/pijma/pijma/packages/mobile/src/main/webapp/components/Link.tsx":"127","/home/runner/work/pijma/pijma/packages/mobile/src/main/webapp/components/Markdown/MarkdownHeading.tsx":"128","/home/runner/work/pijma/pijma/packages/mobile/src/main/webapp/components/Para.tsx":"129","/home/runner/work/pijma/pijma/packages/mobile/src/main/webapp/components/ReactComponentRenderer.tsx":"130","/home/runner/work/pijma/pijma/packages/mobile/src/main/webapp/components/SectionHeadingRenderer.tsx":"131","/home/runner/work/pijma/pijma/packages/mobile/src/main/webapp/components/SectionRenderer.tsx":"132","/home/runner/work/pijma/pijma/packages/mobile/src/main/webapp/components/StyleGuideRenderer.tsx":"133","/home/runner/work/pijma/pijma/packages/mobile/src/main/webapp/components/TableOfContentsRenderer.tsx":"134","/home/runner/work/pijma/pijma/packages/mobile/src/main/webapp/components/Wrapper.tsx":"135","/home/runner/work/pijma/pijma/packages/mobile/src/main/webapp/components/slots/IsolateButton.tsx":"136","/home/runner/work/pijma/pijma/packages/mobile/src/main/webapp/require.js":"137"},{"size":698,"mtime":1662092676686,"results":"138","hashOfConfig":"139"},{"size":26,"mtime":1662092676687,"results":"140","hashOfConfig":"139"},{"size":1952,"mtime":1662092676692,"results":"141","hashOfConfig":"139"},{"size":24,"mtime":1662092676692,"results":"142","hashOfConfig":"139"},{"size":3015,"mtime":1669353927837,"results":"143","hashOfConfig":"139"},{"size":29,"mtime":1662092676689,"results":"144","hashOfConfig":"139"},{"size":2334,"mtime":1662092676695,"results":"145","hashOfConfig":"139"},{"size":33,"mtime":1662092676695,"results":"146","hashOfConfig":"139"},{"size":530,"mtime":1662092676698,"results":"147","hashOfConfig":"139"},{"size":31,"mtime":1662092676698,"results":"148","hashOfConfig":"139"},{"size":5116,"mtime":1669353927837,"results":"149","hashOfConfig":"139"},{"size":28,"mtime":1662092676701,"results":"150","hashOfConfig":"139"},{"size":875,"mtime":1662092676702,"results":"151","hashOfConfig":"139"},{"size":30,"mtime":1662092676703,"results":"152","hashOfConfig":"139"},{"size":8926,"mtime":1669353927836,"results":"153","hashOfConfig":"139"},{"size":25,"mtime":1662092676706,"results":"154","hashOfConfig":"139"},{"size":1240,"mtime":1662092676712,"results":"155","hashOfConfig":"139"},{"size":231,"mtime":1662092676713,"results":"156","hashOfConfig":"139"},{"size":27,"mtime":1662092676713,"results":"157","hashOfConfig":"139"},{"size":2691,"mtime":1662092676708,"results":"158","hashOfConfig":"139"},{"size":199,"mtime":1662092676709,"results":"159","hashOfConfig":"139"},{"size":411,"mtime":1662092676709,"results":"160","hashOfConfig":"139"},{"size":32,"mtime":1662092676710,"results":"161","hashOfConfig":"139"},{"size":3010,"mtime":1662092676717,"results":"162","hashOfConfig":"139"},{"size":370,"mtime":1662092676718,"results":"163","hashOfConfig":"139"},{"size":61,"mtime":1662092676718,"results":"164","hashOfConfig":"139"},{"size":6277,"mtime":1669353927836,"results":"165","hashOfConfig":"139"},{"size":188,"mtime":1662092676721,"results":"166","hashOfConfig":"139"},{"size":960,"mtime":1662092676722,"results":"167","hashOfConfig":"139"},{"size":33,"mtime":1662092676722,"results":"168","hashOfConfig":"139"},{"size":4429,"mtime":1662092676724,"results":"169","hashOfConfig":"139"},{"size":26,"mtime":1662092676725,"results":"170","hashOfConfig":"139"},{"size":4476,"mtime":1662092676728,"results":"171","hashOfConfig":"139"},{"size":25,"mtime":1662092676729,"results":"172","hashOfConfig":"139"},{"size":3356,"mtime":1669353927837,"results":"173","hashOfConfig":"139"},{"size":38,"mtime":1669314187161,"results":"174","hashOfConfig":"139"},{"size":2136,"mtime":1669355503224,"results":"175","hashOfConfig":"139"},{"size":28,"mtime":1662092676730,"results":"176","hashOfConfig":"139"},{"size":878,"mtime":1662092676732,"results":"177","hashOfConfig":"139"},{"size":28,"mtime":1662092676732,"results":"178","hashOfConfig":"139"},{"size":2676,"mtime":1662092676734,"results":"179","hashOfConfig":"139"},{"size":28,"mtime":1662092676734,"results":"180","hashOfConfig":"139"},{"size":2072,"mtime":1662092676736,"results":"181","hashOfConfig":"139"},{"size":27,"mtime":1662092676736,"results":"182","hashOfConfig":"139"},{"size":794,"mtime":1669353927837,"results":"183","hashOfConfig":"139"},{"size":4379,"mtime":1662092676741,"results":"184","hashOfConfig":"139"},{"size":54,"mtime":1662092676742,"results":"185","hashOfConfig":"139"},{"size":968,"mtime":1662092676746,"results":"186","hashOfConfig":"139"},{"size":23,"mtime":1662092676746,"results":"187","hashOfConfig":"139"},{"size":1405,"mtime":1669314187163,"results":"188","hashOfConfig":"139"},{"size":3860,"mtime":1669353927837,"results":"189","hashOfConfig":"139"},{"size":29,"mtime":1662092676750,"results":"190","hashOfConfig":"139"},{"size":1764,"mtime":1662092676752,"results":"191","hashOfConfig":"139"},{"size":2041,"mtime":1662092676754,"results":"192","hashOfConfig":"139"},{"size":3308,"mtime":1669353927837,"results":"193","hashOfConfig":"139"},{"size":1861,"mtime":1662092676756,"results":"194","hashOfConfig":"139"},{"size":108,"mtime":1662092676757,"results":"195","hashOfConfig":"139"},{"size":4139,"mtime":1669353927837,"results":"196","hashOfConfig":"139"},{"size":23,"mtime":1662092676760,"results":"197","hashOfConfig":"139"},{"size":5362,"mtime":1669353927837,"results":"198","hashOfConfig":"139"},{"size":32,"mtime":1662092676762,"results":"199","hashOfConfig":"139"},{"size":2801,"mtime":1662092676763,"results":"200","hashOfConfig":"139"},{"size":27,"mtime":1662092676764,"results":"201","hashOfConfig":"139"},{"size":3577,"mtime":1669353927837,"results":"202","hashOfConfig":"139"},{"size":27,"mtime":1662092676769,"results":"203","hashOfConfig":"139"},{"size":331,"mtime":1662092676770,"results":"204","hashOfConfig":"139"},{"size":300,"mtime":1662092676772,"results":"205","hashOfConfig":"139"},{"size":3144,"mtime":1662092676773,"results":"206","hashOfConfig":"139"},{"size":2227,"mtime":1662092676774,"results":"207","hashOfConfig":"139"},{"size":116,"mtime":1662092676774,"results":"208","hashOfConfig":"139"},{"size":3274,"mtime":1669353927837,"results":"209","hashOfConfig":"139"},{"size":30,"mtime":1662092676778,"results":"210","hashOfConfig":"139"},{"size":1715,"mtime":1662092676780,"results":"211","hashOfConfig":"139"},{"size":26,"mtime":1662092676780,"results":"212","hashOfConfig":"139"},{"size":699,"mtime":1662092676783,"results":"213","hashOfConfig":"139"},{"size":25,"mtime":1662092676783,"results":"214","hashOfConfig":"139"},{"size":1608,"mtime":1662092676785,"results":"215","hashOfConfig":"139"},{"size":23,"mtime":1662092676785,"results":"216","hashOfConfig":"139"},{"size":2517,"mtime":1662092676788,"results":"217","hashOfConfig":"139"},{"size":2042,"mtime":1662092676789,"results":"218","hashOfConfig":"139"},{"size":62,"mtime":1662092676790,"results":"219","hashOfConfig":"139"},{"size":2194,"mtime":1669353927839,"results":"220","hashOfConfig":"139"},{"size":742,"mtime":1662092676792,"results":"221","hashOfConfig":"139"},{"size":69,"mtime":1662092676793,"results":"222","hashOfConfig":"139"},{"size":5071,"mtime":1669353927847,"results":"223","hashOfConfig":"139"},{"size":675,"mtime":1662092676797,"results":"224","hashOfConfig":"139"},{"size":63,"mtime":1662092676797,"results":"225","hashOfConfig":"139"},{"size":684,"mtime":1662092676799,"results":"226","hashOfConfig":"139"},{"size":30,"mtime":1662092676799,"results":"227","hashOfConfig":"139"},{"size":2739,"mtime":1662092676802,"results":"228","hashOfConfig":"139"},{"size":196,"mtime":1662092676802,"results":"229","hashOfConfig":"139"},{"size":413,"mtime":1662092676803,"results":"230","hashOfConfig":"139"},{"size":29,"mtime":1662092676803,"results":"231","hashOfConfig":"139"},{"size":1875,"mtime":1662092676805,"results":"232","hashOfConfig":"139"},{"size":25,"mtime":1662092676805,"results":"233","hashOfConfig":"139"},{"size":4510,"mtime":1662092676808,"results":"234","hashOfConfig":"139"},{"size":30,"mtime":1662092676809,"results":"235","hashOfConfig":"139"},{"size":1054,"mtime":1662092676811,"results":"236","hashOfConfig":"139"},{"size":25,"mtime":1662092676811,"results":"237","hashOfConfig":"139"},{"size":8132,"mtime":1669353927847,"results":"238","hashOfConfig":"139"},{"size":258,"mtime":1662092676815,"results":"239","hashOfConfig":"139"},{"size":1233,"mtime":1662092676816,"results":"240","hashOfConfig":"139"},{"size":31,"mtime":1662092676817,"results":"241","hashOfConfig":"139"},{"size":2293,"mtime":1662092676824,"results":"242","hashOfConfig":"139"},{"size":264,"mtime":1662092676825,"results":"243","hashOfConfig":"139"},{"size":25,"mtime":1662092676826,"results":"244","hashOfConfig":"139"},{"size":3177,"mtime":1662092676820,"results":"245","hashOfConfig":"139"},{"size":197,"mtime":1662092676821,"results":"246","hashOfConfig":"139"},{"size":429,"mtime":1662092676822,"results":"247","hashOfConfig":"139"},{"size":30,"mtime":1662092676822,"results":"248","hashOfConfig":"139"},{"size":3411,"mtime":1662092676828,"results":"249","hashOfConfig":"139"},{"size":23,"mtime":1662092676828,"results":"250","hashOfConfig":"139"},{"size":2472,"mtime":1669353927837,"results":"251","hashOfConfig":"139"},{"size":32,"mtime":1662092676832,"results":"252","hashOfConfig":"139"},{"size":1865,"mtime":1662092676834,"results":"253","hashOfConfig":"139"},{"size":814,"mtime":1662092676834,"results":"254","hashOfConfig":"139"},{"size":61,"mtime":1662092676835,"results":"255","hashOfConfig":"139"},{"size":1165,"mtime":1662092676837,"results":"256","hashOfConfig":"139"},{"size":2463,"mtime":1669353927837,"results":"257","hashOfConfig":"139"},{"size":2958,"mtime":1669353927837,"results":"258","hashOfConfig":"139"},{"size":2988,"mtime":1669353927837,"results":"259","hashOfConfig":"139"},{"size":1926,"mtime":1662092676844,"results":"260","hashOfConfig":"139"},{"size":127,"mtime":1662092676844,"results":"261","hashOfConfig":"139"},{"size":1130,"mtime":1669353927837,"results":"262","hashOfConfig":"139"},{"size":256,"mtime":1662092676847,"results":"263","hashOfConfig":"139"},{"size":525,"mtime":1662092676848,"results":"264","hashOfConfig":"139"},{"size":184,"mtime":1662092676848,"results":"265","hashOfConfig":"139"},{"size":1060,"mtime":1662092676850,"results":"266","hashOfConfig":"139"},{"size":617,"mtime":1662092676851,"results":"267","hashOfConfig":"139"},{"size":828,"mtime":1662092676851,"results":"268","hashOfConfig":"139"},{"size":409,"mtime":1662092676852,"results":"269","hashOfConfig":"139"},{"size":889,"mtime":1662092676853,"results":"270","hashOfConfig":"139"},{"size":1424,"mtime":1662092676854,"results":"271","hashOfConfig":"139"},{"size":581,"mtime":1662092676855,"results":"272","hashOfConfig":"139"},{"size":299,"mtime":1662092676855,"results":"273","hashOfConfig":"139"},{"size":932,"mtime":1662092676856,"results":"274","hashOfConfig":"139"},{"size":76,"mtime":1669314187165,"results":"275","hashOfConfig":"139"},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279"},"1hai58i",{"filePath":"280","messages":"281","suppressedMessages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","suppressedMessages":"285","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286"},{"filePath":"287","messages":"288","suppressedMessages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","suppressedMessages":"292","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293"},{"filePath":"294","messages":"295","suppressedMessages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","suppressedMessages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300"},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","suppressedMessages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307"},{"filePath":"308","messages":"309","suppressedMessages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","suppressedMessages":"313","errorCount":3,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314"},{"filePath":"315","messages":"316","suppressedMessages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","suppressedMessages":"320","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321"},{"filePath":"322","messages":"323","suppressedMessages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","suppressedMessages":"327","errorCount":5,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328"},{"filePath":"329","messages":"330","suppressedMessages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","suppressedMessages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335"},{"filePath":"336","messages":"337","suppressedMessages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","suppressedMessages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","suppressedMessages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345"},{"filePath":"346","messages":"347","suppressedMessages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","suppressedMessages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","suppressedMessages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","suppressedMessages":"357","errorCount":3,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358"},{"filePath":"359","messages":"360","suppressedMessages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","suppressedMessages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","suppressedMessages":"367","errorCount":6,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368"},{"filePath":"369","messages":"370","suppressedMessages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","suppressedMessages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","suppressedMessages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","suppressedMessages":"380","errorCount":4,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381"},{"filePath":"382","messages":"383","suppressedMessages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","suppressedMessages":"387","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388"},{"filePath":"389","messages":"390","suppressedMessages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","suppressedMessages":"394","errorCount":8,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395"},{"filePath":"396","messages":"397","suppressedMessages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","suppressedMessages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"402","messages":"403","suppressedMessages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"405","messages":"406","suppressedMessages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408"},{"filePath":"409","messages":"410","suppressedMessages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"412","messages":"413","suppressedMessages":"414","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415"},{"filePath":"416","messages":"417","suppressedMessages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","suppressedMessages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422"},{"filePath":"423","messages":"424","suppressedMessages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"426","messages":"427","suppressedMessages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429"},{"filePath":"430","messages":"431","suppressedMessages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433"},{"filePath":"434","messages":"435","suppressedMessages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"437","messages":"438","suppressedMessages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440"},{"filePath":"441","messages":"442","suppressedMessages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"444","messages":"445","suppressedMessages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"447","messages":"448","suppressedMessages":"449","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450"},{"filePath":"451","messages":"452","suppressedMessages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"454","messages":"455","suppressedMessages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457"},{"filePath":"458","messages":"459","suppressedMessages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461"},{"filePath":"462","messages":"463","suppressedMessages":"464","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465"},{"filePath":"466","messages":"467","suppressedMessages":"468","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469"},{"filePath":"470","messages":"471","suppressedMessages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"473","messages":"474","suppressedMessages":"475","errorCount":4,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476"},{"filePath":"477","messages":"478","suppressedMessages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"480","messages":"481","suppressedMessages":"482","errorCount":7,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483"},{"filePath":"484","messages":"485","suppressedMessages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"487","messages":"488","suppressedMessages":"489","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"490"},{"filePath":"491","messages":"492","suppressedMessages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"494","messages":"495","suppressedMessages":"496","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"497"},{"filePath":"498","messages":"499","suppressedMessages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"501","messages":"502","suppressedMessages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504"},{"filePath":"505","messages":"506","suppressedMessages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508"},{"filePath":"509","messages":"510","suppressedMessages":"511","errorCount":5,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512"},{"filePath":"513","messages":"514","suppressedMessages":"515","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516"},{"filePath":"517","messages":"518","suppressedMessages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"520","messages":"521","suppressedMessages":"522","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"523"},{"filePath":"524","messages":"525","suppressedMessages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"527","messages":"528","suppressedMessages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530"},{"filePath":"531","messages":"532","suppressedMessages":"533","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"534","messages":"535","suppressedMessages":"536","errorCount":3,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537"},{"filePath":"538","messages":"539","suppressedMessages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"541","messages":"542","suppressedMessages":"543","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544"},{"filePath":"545","messages":"546","suppressedMessages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"548","messages":"549","suppressedMessages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"551"},{"filePath":"552","messages":"553","suppressedMessages":"554","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555"},{"filePath":"556","messages":"557","suppressedMessages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"559","messages":"560","suppressedMessages":"561","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"562"},{"filePath":"563","messages":"564","suppressedMessages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"566","messages":"567","suppressedMessages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"569","messages":"570","suppressedMessages":"571","errorCount":1,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"572"},{"filePath":"573","messages":"574","suppressedMessages":"575","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"576","messages":"577","suppressedMessages":"578","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"579","messages":"580","suppressedMessages":"581","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"582"},{"filePath":"583","messages":"584","suppressedMessages":"585","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"586","messages":"587","suppressedMessages":"588","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589"},{"filePath":"590","messages":"591","suppressedMessages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"593","messages":"594","suppressedMessages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"596","messages":"597","suppressedMessages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"599","messages":"600","suppressedMessages":"601","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"602"},{"filePath":"603","messages":"604","suppressedMessages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"606","messages":"607","suppressedMessages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609"},{"filePath":"610","messages":"611","suppressedMessages":"612","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"613","messages":"614","suppressedMessages":"615","errorCount":5,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"616"},{"filePath":"617","messages":"618","suppressedMessages":"619","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"620","messages":"621","suppressedMessages":"622","errorCount":6,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"623"},{"filePath":"624","messages":"625","suppressedMessages":"626","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"627","messages":"628","suppressedMessages":"629","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"630","messages":"631","suppressedMessages":"632","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"633","messages":"634","suppressedMessages":"635","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"636"},{"filePath":"637","messages":"638","suppressedMessages":"639","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"640","messages":"641","suppressedMessages":"642","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"643","messages":"644","suppressedMessages":"645","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"646"},{"filePath":"647","messages":"648","suppressedMessages":"649","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"650","messages":"651","suppressedMessages":"652","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"653","messages":"654","suppressedMessages":"655","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"656","messages":"657","suppressedMessages":"658","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"659"},{"filePath":"660","messages":"661","suppressedMessages":"662","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"663","messages":"664","suppressedMessages":"665","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"666"},{"filePath":"667","messages":"668","suppressedMessages":"669","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"670","messages":"671","suppressedMessages":"672","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"673"},{"filePath":"674","messages":"675","suppressedMessages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"677","messages":"678","suppressedMessages":"679","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"680","messages":"681","suppressedMessages":"682","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"683"},{"filePath":"684","messages":"685","suppressedMessages":"686","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"687"},{"filePath":"688","messages":"689","suppressedMessages":"690","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"691"},{"filePath":"692","messages":"693","suppressedMessages":"694","errorCount":3,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"695"},{"filePath":"696","messages":"697","suppressedMessages":"698","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"699"},{"filePath":"700","messages":"701","suppressedMessages":"702","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"703","messages":"704","suppressedMessages":"705","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"706"},{"filePath":"707","messages":"708","suppressedMessages":"709","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"710"},{"filePath":"711","messages":"712","suppressedMessages":"713","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"714"},{"filePath":"715","messages":"716","suppressedMessages":"717","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"718"},{"filePath":"719","messages":"720","suppressedMessages":"721","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"722"},{"filePath":"723","messages":"724","suppressedMessages":"725","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"726"},{"filePath":"727","messages":"728","suppressedMessages":"729","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"730"},{"filePath":"731","messages":"732","suppressedMessages":"733","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"734"},{"filePath":"735","messages":"736","suppressedMessages":"737","errorCount":3,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"738"},{"filePath":"739","messages":"740","suppressedMessages":"741","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"742"},{"filePath":"743","messages":"744","suppressedMessages":"745","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"746"},{"filePath":"747","messages":"748","suppressedMessages":"749","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"750"},{"filePath":"751","messages":"752","suppressedMessages":"753","errorCount":3,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"754"},{"filePath":"755","messages":"756","suppressedMessages":"757","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/actions/Actions.tsx",["758","759"],[],"import { Box } from '@qiwi/pijma-core'\nimport React, { Children, FC, ReactNode } from 'react'\n\nexport interface ActionsProps {\n  size: 'accent' | 'normal' | 'minor'\n  children?: ReactNode\n}\n\nexport const Actions: FC<ActionsProps> = (props) => {\n  const elements = Children.toArray(props.children).filter((child) => !!child)\n  if (elements.length === 0) {\n    return null\n  }\n  return (\n    <Box\n      width={1}\n      children={Children.map(elements, (child: ReactNode, key: number) => (\n        <Box\n          key={key}\n          width={1}\n          maxWidth={1}\n          mt={key === 0 ? undefined : 4}\n          children={child}\n        />\n      ))}\n    />\n  )\n}\n\nActions.displayName = 'Actions'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/actions/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/alert/Alert.tsx",["760","761","762"],[],"import {\n  AlertControl,\n  Box,\n  Flex,\n  FlexItem,\n  Icon,\n  IconProps,\n} from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nimport { Link } from '../link'\nimport { Paragraph } from '../typography'\n\nexport interface AlertProps {\n  text: string\n  type: 'success' | 'warning' | 'failure' | 'general'\n  action?: string\n  onHide?: () => void\n  onClick?: () => void\n}\n\nconst AlertIconColor: Record<NonNullable<AlertProps['type']>, string> = {\n  success: '#4bbd5c',\n  warning: '#ff8c00',\n  failure: '#d0021b',\n  general: '#666666',\n}\n\nconst AlertIconName: Record<\n  NonNullable<AlertProps['type']>,\n  IconProps['name']\n> = {\n  success: 'success',\n  warning: 'warning',\n  failure: 'attention',\n  general: 'info',\n}\n\nexport const Alert: FC<AlertProps> = ({\n  type = 'general',\n  text,\n  action,\n  onHide,\n  onClick,\n}) => (\n  <AlertControl\n    onHide={onHide}\n    children={(renderProps) => (\n      <Flex minHeight={14} justify=\"flex-start\" p={4}>\n        <FlexItem mr={3}>\n          <Icon name={AlertIconName[type]} color={AlertIconColor[type]} />\n        </FlexItem>\n        <FlexItem mr={onHide ? 4 : 0} overflow=\"hidden\">\n          <Paragraph children={text} />\n          {action ? (\n            <Box mt={1}>\n              <Paragraph>\n                <Link bold onClick={onClick} children={action} />\n              </Paragraph>\n            </Box>\n          ) : null}\n        </FlexItem>\n        {onHide ? (\n          <FlexItem\n            ml=\"auto\"\n            cursor=\"pointer\"\n            opacity={renderProps.hover ? 0.7 : 1}\n            transition=\"all 300ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n            onClick={renderProps.onClick}\n            onMouseMove={renderProps.onMouseEnter}\n            onMouseOut={renderProps.onMouseLeave}\n          >\n            <Icon name=\"cross-small\" color=\"#666666\" />\n          </FlexItem>\n        ) : null}\n      </Flex>\n    )}\n  />\n)\n\nAlert.displayName = 'Alert'\n\nAlert.defaultProps = {\n  type: 'general',\n}\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/alert/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/alert-block/AlertBlock.tsx",["763","764","765"],[],"import {\n  AlertBlockControl,\n  Block,\n  Breaker,\n  Card,\n  FlexItem,\n  FlexPos,\n  Icon,\n  IconProps,\n  Pos,\n} from '@qiwi/pijma-core'\nimport React, { FC, isValidElement, ReactNode } from 'react'\n\nimport { Paragraph } from '../typography'\n\nexport interface AlertBlockProps {\n  type: 'success' | 'warning' | 'waiting' | 'failure' | 'info' | 'promo'\n  icon?: ReactNode\n  children?: ReactNode\n  onHide?: () => void\n}\n\nconst AlertBlockBackground: Record<\n  NonNullable<AlertBlockProps['type']>,\n  string\n> = {\n  success: '#EDF8EF',\n  waiting: '#FFF8E6',\n  warning: '#FF8C001A',\n  failure: '#FAE6E8',\n  info: '#F5F5F5',\n  promo: '#2D3540',\n}\n\nconst AlertBlockIcon: Record<\n  NonNullable<AlertBlockProps['type']>,\n  IconProps & { bg: string }\n> = {\n  success: { name: 'success', color: '#4BBD5C', bg: '#fff' },\n  waiting: { name: 'clock-solid', color: '#FFB800', bg: '#fff' },\n  warning: { name: 'attention', color: '#FF8C00', bg: '#fff' },\n  failure: { name: 'attention', color: '#D0021B', bg: '#fff' },\n  info: { name: 'info', color: '#E6E6E6', bg: '#666666' },\n  promo: { name: 'success', color: '#4BBD5C', bg: '#fff' },\n}\n\nexport const AlertBlock: FC<AlertBlockProps> = ({\n  children,\n  icon,\n  type,\n  onHide,\n}) => {\n  const iconComponent = isValidElement(icon) ? (\n    icon\n  ) : (icon === undefined ? (\n    <Pos type=\"relative\">\n      <Pos type=\"absolute\" top=\"4px\" left=\"4px\">\n        <Card bg={AlertBlockIcon[type].bg} width={4} height={4} r={8} />\n      </Pos>\n      <Pos type=\"relative\">\n        <Icon\n          name={AlertBlockIcon[type].name}\n          size={6}\n          color={AlertBlockIcon[type].color}\n        />\n      </Pos>\n    </Pos>\n  ) : null)\n  return (\n    <AlertBlockControl\n      onHide={onHide}\n      children={(renderProps) => (\n        <Block bg={AlertBlockBackground[type]}>\n          <FlexPos\n            display=\"flex\"\n            type=\"relative\"\n            py={4}\n            pl={4}\n            pr={onHide !== undefined ? 14 : 4}\n          >\n            <FlexItem mr={2}>{iconComponent}</FlexItem>\n            <FlexItem my=\"2px\">\n              <Paragraph\n                size=\"s\"\n                bold\n                color={type === 'promo' ? 'inverse' : 'default'}\n              >\n                <Breaker children={children} />\n              </Paragraph>\n            </FlexItem>\n            {onHide !== undefined ? (\n              <Pos\n                cursor=\"pointer\"\n                type=\"absolute\"\n                right={4}\n                top={4}\n                onClick={renderProps.onCloseClick}\n                onMouseEnter={renderProps.onCloseMouseEnter}\n                onMouseLeave={renderProps.onCloseMouseLeave}\n                children={\n                  <Icon\n                    color={type === 'promo' ? '#999' : '#666'}\n                    size={6}\n                    name=\"cross-small\"\n                  />\n                }\n              />\n            ) : null}\n          </FlexPos>\n        </Block>\n      )}\n    />\n  )\n}\n\nAlertBlock.displayName = 'AlertBlock'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/alert-block/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/block-accordion/BlockAccordion.tsx",["766"],[],"import {\n  AccordionControl,\n  Box,\n  Card,\n  Flex,\n  FlexItem,\n  Icon,\n} from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nimport { Paragraph } from '../typography'\n\nexport interface BlockAccordionProps<I> {\n  items: I[]\n  opened: number[]\n  tabIndex?: number\n  onChange: (opened: number[]) => void\n}\n\nexport interface BlockAccordionItemModel {\n  title: string\n  content: ReactNode\n}\n\nexport const BlockAccordion: FC<\n  BlockAccordionProps<BlockAccordionItemModel>\n> = ({ items, tabIndex = 0, opened, onChange }) => (\n  <AccordionControl<BlockAccordionItemModel>\n    items={items}\n    opened={opened}\n    onChange={onChange}\n    children={(renderProps) => (\n      <Box py={2}>\n        {renderProps.items.map((item, index) => (\n          <Card\n            key={index}\n            s={index > 0 ? '0 -1px 0 #e6e6e6' : undefined}\n            transition=\"box-shadow 100ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n            onMouseEnter={item.onMouseEnter}\n            onMouseLeave={item.onMouseLeave}\n          >\n            <Flex\n              tabIndex={tabIndex}\n              wrap=\"nowrap\"\n              justify=\"space-between\"\n              align=\"start\"\n              cursor=\"pointer\"\n              px={4}\n              pt={4}\n              pb={item.opened ? 1 : 4}\n              onClick={item.onClick}\n              onFocus={item.onFocus}\n              onBlur={item.onBlur}\n              onKeyDown={renderProps.onKeyDown}\n            >\n              <Paragraph bold size=\"s\">\n                {item.title}\n              </Paragraph>\n              <FlexItem\n                shrink={0}\n                width={6}\n                height={6}\n                ml={3}\n                transform={`rotate(${item.opened ? 180 : 0}deg)`}\n                transition=\"transform 0.3s ease-in-out\"\n              >\n                <Icon name=\"angle-small-down\" />\n              </FlexItem>\n            </Flex>\n            <Box px={4} pb={4} display={item.opened ? 'block' : 'none'}>\n              {typeof item.content === 'string' ? (\n                <Paragraph size=\"s\">{item.content}</Paragraph>\n              ) : (\n                item.content\n              )}\n            </Box>\n          </Card>\n        ))}\n      </Box>\n    )}\n  />\n)\n\nBlockAccordion.displayName = 'BlockAccordion'\n\nBlockAccordion.defaultProps = {\n  tabIndex: 0,\n}\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/block-accordion/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/block-content/BlockContent.tsx",["767"],[],"import { Box } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nexport interface BlockContentProps {\n  indent?: 'm' | 'l'\n  children?: ReactNode\n}\n\nconst BlockContentIdent: {\n  [indent in NonNullable<BlockContentProps['indent']>]: string | number\n} = {\n  m: 4,\n  l: 6,\n}\n\nexport const BlockContent: FC<BlockContentProps> = ({\n  indent = 'm',\n  children,\n}) => <Box p={BlockContentIdent[indent]} children={children} />\n\nBlockContent.displayName = 'BlockContent'\n\nBlockContent.defaultProps = {\n  indent: 'm',\n}\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/block-content/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/block-tabs/BlockTabs.tsx",["768","769","770","771"],[],"import {\n  Card,\n  Flex,\n  FlexItem,\n  IconProps,\n  Pos,\n  styled,\n  TabBorder,\n  TabHeader,\n  TabsControl,\n  Value,\n} from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nimport { Paragraph } from '../typography'\n\nexport interface BlockTabsProps {\n  items: {\n    title: string\n    icon?: IconProps['name']\n    content?: ReactNode\n  }[]\n  select?: number\n  tabIndex?: number\n  vertical?: boolean\n  centered?: boolean\n  hr?: boolean\n  indent?: 'm' | 'l'\n  pt?: Value\n  pb?: Value\n  stub?: boolean | boolean[]\n  onChange?: (selected: number) => void\n}\n\nconst BlockTabsIndent: Record<\n  NonNullable<BlockTabsProps['indent']>,\n  [Value, Value, Value, Value]\n> = {\n  m: [4, 4, 4, 4],\n  l: [6, 6, 6, 6],\n}\n\nconst FlexOverflow = styled(Flex)({\n  '&::-webkit-scrollbar': {\n    display: 'none',\n  },\n  scrollbarWidth: 'none',\n  msOverflowStyle: 'none',\n  position: 'relative',\n})\n\nFlexOverflow.displayName = 'FlexOverflow'\n\nconst TabContent = styled(FlexItem)()\n\nTabContent.displayName = 'TabContent'\n\nexport const BlockTabs: FC<BlockTabsProps> = ({\n  items,\n  select = 0,\n  tabIndex = 0,\n  vertical = false,\n  centered = false,\n  stub = false,\n  hr = true,\n  indent = 'm',\n  pt,\n  pb,\n  onChange,\n}) =>\n  stub ? (\n    <Pos type=\"relative\">\n      <Flex\n        direction=\"column\"\n        pt={pt !== undefined ? pt : BlockTabsIndent[indent][0]}\n        pr={BlockTabsIndent[indent][1]}\n        pb={pb !== undefined ? pb : BlockTabsIndent[indent][2]}\n        pl={BlockTabsIndent[indent][3]}\n      >\n        <FlexOverflow\n          direction=\"row\"\n          overflow=\"auto\"\n          justify={centered ? 'space-between' : 'flex-start'}\n        >\n          {(Array.isArray(stub) ? stub : [true, true, true]).map(\n            (icon, index, arr) => (\n              <TabHeader\n                key={index}\n                title=\"stub\"\n                indent={index === arr.length - 1 ? 0 : 5}\n                wrap={!centered}\n                tabIndex={-1}\n                icon={icon ? 'qiwi' : undefined}\n                vertical={vertical}\n                select={false}\n                width={centered ? 1 : undefined}\n                stub\n              />\n            ),\n          )}\n          <TabBorder\n            width={centered ? 'calc(33% - 20px)' : (vertical ? 13 : 21)}\n            left={0}\n            radius={hr}\n            stub\n          />\n        </FlexOverflow>\n        <FlexItem>\n          {hr ? (\n            <Pos type=\"absolute\" width={1} left={0} zIndex={0}>\n              <Card mt=\"-1px\" bg=\"#e6e6e6\" width={1} height=\"1px\" />\n            </Pos>\n          ) : null}\n        </FlexItem>\n        <FlexItem mt={4}>\n          <Paragraph stub />\n        </FlexItem>\n      </Flex>\n    </Pos>\n  ) : (\n    <TabsControl\n      select={select}\n      length={items.length}\n      onChange={onChange}\n      children={(renderProps) => (\n        <Pos type=\"relative\">\n          <Flex\n            direction=\"column\"\n            pt={pt !== undefined ? pt : BlockTabsIndent[indent][0]}\n            pr={BlockTabsIndent[indent][1]}\n            pb={pb !== undefined ? pb : BlockTabsIndent[indent][2]}\n            pl={BlockTabsIndent[indent][3]}\n          >\n            <FlexOverflow\n              direction=\"row\"\n              overflow=\"auto\"\n              justify={centered ? 'space-between' : 'flex-start'}\n            >\n              {renderProps.items.map((item, index) => (\n                <TabHeader\n                  key={index}\n                  title={items[index].title}\n                  indent={index === items.length - 1 ? 0 : 5}\n                  wrap={!centered}\n                  tabIndex={tabIndex}\n                  icon={items[index].icon}\n                  vertical={vertical}\n                  select={item.select}\n                  focus={item.focus}\n                  width={centered ? 1 : undefined}\n                  ref={item.ref}\n                  onFocus={item.onFocus}\n                  onBlur={item.onBlur}\n                  onMouseEnter={item.onMouseEnter}\n                  onMouseLeave={item.onMouseLeave}\n                  onKeyDown={renderProps.onKeyDown}\n                  onClick={item.onClick}\n                />\n              ))}\n              <TabBorder\n                width={`${renderProps.borderWidth}px`}\n                left={`${renderProps.borderLeft}px`}\n                radius={hr}\n              />\n            </FlexOverflow>\n            {hr ? (\n              <FlexItem>\n                <Pos type=\"absolute\" width={1} left={0} zIndex={0}>\n                  <Card mt=\"-1px\" bg=\"#e6e6e6\" width={1} height=\"1px\" />\n                </Pos>\n              </FlexItem>\n            ) : null}\n            {items.map(({ content }, index) => (\n              <TabContent\n                key={index}\n                display={select === index ? 'block' : 'none'}\n                pt={4}\n                children={content}\n              />\n            ))}\n          </Flex>\n        </Pos>\n      )}\n    />\n  )\n\nBlockTabs.displayName = 'BlockTabs'\n\nBlockTabs.defaultProps = {\n  select: 0,\n  tabIndex: 0,\n  vertical: false,\n  centered: false,\n  stub: false,\n  hr: true,\n  indent: 'm',\n}\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/block-tabs/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/breadcrumbs/Breadcrumbs.tsx",["772","773"],[],"import { Box } from '@qiwi/pijma-core'\nimport React, { FC, Fragment } from 'react'\n\nimport { NavLink, NavLinkProps } from '../nav-link'\nimport { Paragraph } from '../typography'\n\nexport interface BreadcrumbsProps {\n  children?: NavLinkProps[]\n  stub?: boolean\n}\n\nexport const Breadcrumbs: FC<BreadcrumbsProps> = ({\n  children = [],\n  stub = false,\n}) =>\n  stub ? (\n    <Box maxWidth={12} width={1}>\n      <NavLink stub />\n    </Box>\n  ) : (\n    <Paragraph size=\"s\" color=\"support\">\n      {children.map((item, i) => (\n        <Fragment key={i}>\n          {i > 0 ? (\n            <Fragment>\n              <Box as=\"span\" mx={2} display=\"inline\">\n                &#8226;\n              </Box>\n              &shy;\n            </Fragment>\n          ) : null}\n          <NavLink {...item} />\n        </Fragment>\n      ))}\n    </Paragraph>\n  )\n\nBreadcrumbs.displayName = 'Breadcrumbs'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/breadcrumbs/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/button/Button.tsx",["774","775","776","777","778","779"],[],"import {\n  Btn,\n  ButtonControl,\n  Card,\n  Flex,\n  FlexItem,\n  Pos,\n  Spinner,\n  Stub,\n  Typo,\n  useTheme,\n} from '@qiwi/pijma-core'\nimport React, { cloneElement, FC, Fragment, ReactElement } from 'react'\n\nexport interface ButtonProps {\n  onClick?: () => void\n  onFocus?: () => void\n  onBlur?: () => void\n  tabIndex?: number\n  disabled?: boolean\n  kind: 'brand' | 'simple'\n  size: 'accent' | 'normal' | 'minor'\n  type: 'button' | 'submit'\n  text?: string\n  icon?: ReactElement\n  loading?: boolean\n  stub?: boolean\n  radius?: number\n}\n\nconst buttonSize: { [size in ButtonProps['size']]: number } = {\n  accent: 12,\n  normal: 10,\n  minor: 8,\n}\n\nconst buttonRadius: { [size in ButtonProps['size']]: number } = {\n  accent: 24,\n  normal: 20,\n  minor: 16,\n}\n\nconst contextPaddingX: { [size in ButtonProps['size']]: number } = {\n  accent: 8,\n  normal: 6,\n  minor: 4,\n}\n\nconst iconSize: { [size in ButtonProps['size']]: number } = {\n  accent: 6,\n  normal: 6,\n  minor: 5,\n}\n\nconst iconMargin: { [size in ButtonProps['size']]: number } = {\n  accent: 3,\n  normal: 1.5,\n  minor: 1,\n}\n\nconst textSize: { [size in ButtonProps['size']]: number } = {\n  accent: 4,\n  normal: 3.5,\n  minor: 3.5,\n}\n\nconst textHeight: { [size in ButtonProps['size']]: number } = {\n  accent: 5,\n  normal: 4,\n  minor: 4,\n}\n\nconst stubHeight: { [size in ButtonProps['size']]: number } = {\n  accent: 3,\n  normal: 2,\n  minor: 2,\n}\n\nconst stubWidth: { [size in ButtonProps['size']]: number } = {\n  accent: 23,\n  normal: 21,\n  minor: 19,\n}\n\nexport const Button: FC<ButtonProps> = (props) => {\n  const theme = useTheme()\n\n  return props.stub ? (\n    <Card\n      width={!props.icon || props.text ? 1 : buttonSize[props.size]}\n      height={buttonSize[props.size]}\n      bg={theme.button.bg.kind.simple}\n      b={theme.button.border.kind.simple}\n      r={props.radius ?? buttonRadius[props.size]}\n    >\n      <Flex\n        align=\"center\"\n        justify=\"center\"\n        width={1}\n        height={1}\n        px={props.icon && !props.text ? 0 : contextPaddingX[props.size]}\n      >\n        <Fragment>\n          {props.icon ? (\n            <FlexItem\n              shrink={0}\n              mr={props.text ? iconMargin[props.size] : 0}\n              width={iconSize[props.size]}\n              height={iconSize[props.size]}\n            >\n              <Stub\n                top={0.5}\n                right={0.5}\n                bottom={0.5}\n                left={0.5}\n                width={iconSize[props.size] - 1}\n                height={iconSize[props.size] - 1}\n                r={(iconSize[props.size] - 1) * 2}\n              />\n            </FlexItem>\n          ) : null}\n          {props.text || !props.icon ? (\n            <Stub\n              width={stubWidth[props.size] - (props.icon ? 9 : 0)}\n              height={stubHeight[props.size]}\n            />\n          ) : null}\n        </Fragment>\n      </Flex>\n    </Card>\n  ) : (\n    <ButtonControl\n      onClick={props.onClick}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      children={(renderProps) => (\n        <Btn\n          disabled={props.disabled}\n          type={props.type}\n          width={!props.icon || props.text ? 1 : buttonSize[props.size]}\n          height={buttonSize[props.size]}\n          bg={\n            props.disabled\n              ? '#e6e6e6'\n              : (renderProps.hover || renderProps.focus\n              ? theme.button.bg.hover[props.kind]\n              : theme.button.bg.kind[props.kind])\n          }\n          b={\n            props.disabled\n              ? 'none'\n              : (renderProps.hover || renderProps.focus\n              ? theme.button.border.hover[props.kind]\n              : theme.button.border.kind[props.kind])\n          }\n          r={props.radius ?? buttonRadius[props.size]}\n          transition=\"all 300ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n          onClick={renderProps.onClick}\n          onFocus={renderProps.onFocus}\n          onBlur={renderProps.onBlur}\n          onMouseEnter={renderProps.onMouseEnter}\n          onMouseLeave={renderProps.onMouseLeave}\n          children={\n            <Pos\n              type=\"relative\"\n              width={1}\n              height={1}\n              cursor={props.disabled ? 'not-allowed' : 'pointer'}\n              children={\n                <Flex\n                  align=\"center\"\n                  justify=\"center\"\n                  width={1}\n                  height={1}\n                  px={\n                    props.icon && !props.text ? 0 : contextPaddingX[props.size]\n                  }\n                  transition=\"all 300ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n                  children={\n                    <Fragment>\n                      <Pos\n                        type=\"absolute\"\n                        top={0}\n                        right={0}\n                        bottom={0}\n                        left={0}\n                        opacity={\n                          props.loading\n                            ? (renderProps.hover ||\n                              renderProps.active ||\n                              renderProps.focus\n                              ? 0.9\n                              : 1)\n                            : 0\n                        }\n                        transition=\"all 300ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n                        children={\n                          <Flex\n                            align=\"center\"\n                            justify=\"center\"\n                            width={1}\n                            height={1}\n                            children={\n                              <Spinner\n                                paused={!props.loading}\n                                width={iconSize[props.size]}\n                                height={iconSize[props.size]}\n                                color={\n                                  props.disabled\n                                    ? '#666'\n                                    : theme.button.text.color[props.kind]\n                                }\n                              />\n                            }\n                          />\n                        }\n                      />\n                      {props.icon ? (\n                        <FlexItem\n                          shrink={0}\n                          opacity={\n                            props.loading\n                              ? 0\n                              : (renderProps.hover ||\n                                renderProps.active ||\n                                renderProps.focus\n                              ? 0.9\n                              : 1)\n                          }\n                          mr={props.text ? iconMargin[props.size] : 0}\n                          width={iconSize[props.size]}\n                          height={iconSize[props.size]}\n                          transition=\"all 300ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n                          transform=\"translateZ(0)\"\n                          children={cloneElement(props.icon, {\n                            color: props.disabled\n                              ? '#666'\n                              : (props.kind === 'brand'\n                              ? '#fff'\n                              : '#000'),\n                            size: 1,\n                          })}\n                        />\n                      ) : null}\n                      {props.text || !props.icon ? (\n                        <FlexItem\n                          opacity={\n                            props.loading\n                              ? 0\n                              : (renderProps.hover ||\n                                renderProps.active ||\n                                renderProps.focus\n                              ? 0.9\n                              : 1)\n                          }\n                          overflow=\"hidden\"\n                          transition=\"all 300ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n                          children={\n                            <Typo\n                              nowrap={true}\n                              display=\"block\"\n                              weight={500}\n                              color={\n                                props.disabled\n                                  ? '#666'\n                                  : theme.button.text.color[props.kind]\n                              }\n                              size={textSize[props.size]}\n                              height={textHeight[props.size]}\n                              transition=\"all 300ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n                              children={props.text}\n                            />\n                          }\n                        />\n                      ) : null}\n                    </Fragment>\n                  }\n                />\n              }\n            />\n          }\n        />\n      )}\n    />\n  )\n}\n\nButton.displayName = 'Button'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/button/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/checkbox/Checkbox.tsx",["780"],[],"import {\n  Box,\n  Check,\n  OptionField,\n  OptionFieldItem,\n  SwitchControl,\n} from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nimport { CheckboxProps } from './CheckboxProps'\n\nexport const Checkbox: FC<CheckboxProps> = (props) => (\n  <SwitchControl\n    disabled={props.disabled}\n    checked={props.checked}\n    onChange={props.onChange}\n    children={(renderProps) => (\n      <OptionField\n        tabIndex={props.tabIndex}\n        onFocus={renderProps.onFocus}\n        onBlur={renderProps.onBlur}\n        onKeyDown={renderProps.onKeyDown}\n        children={\n          <OptionFieldItem\n            disabled={props.disabled}\n            label={props.label}\n            description={props.description}\n            icon={\n              <Box width={6}>\n                <Check\n                  disabled={props.disabled}\n                  checked={props.checked}\n                  focused={renderProps.focused}\n                />\n              </Box>\n            }\n            onClick={renderProps.onClick}\n            onMouseEnter={renderProps.onMouseEnter}\n            onMouseLeave={renderProps.onMouseLeave}\n          />\n        }\n      />\n    )}\n  />\n)\n\nCheckbox.displayName = 'Checkbox'\n\nCheckbox.defaultProps = {\n  tabIndex: 0,\n}\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/checkbox/CheckboxProps.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/checkbox/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/checkbox-field/CheckboxField.tsx",["781","782","783","784","785","786"],[],"import {\n  Box,\n  Check,\n  CheckboxControl,\n  Flex,\n  OptionControl,\n  OptionField,\n  OptionFieldItem,\n  Spacer,\n  Stub,\n} from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nimport { CheckboxFieldOptionModel } from './CheckboxFieldOptionModel'\nimport { CheckboxFieldProps } from './CheckboxFieldProps'\n\nexport const CheckboxField: FC<\n  CheckboxFieldProps<CheckboxFieldOptionModel<any>, any>\n> = (props) =>\n  props.stub ? (\n    <Box maxWidth={1}>\n      <Stub width={24} height={3} top={2} bottom={4} />\n      <Spacer size=\"s\">\n        {[33, 38, 30].map((width: number, id: number) => (\n          <Flex key={id} align=\"center\">\n            <Stub width={5} height={5} right={3} left={0.5} />\n            <Box width={width} maxWidth={1}>\n              <Stub width={1} height={2} top={2} bottom={2} />\n            </Box>\n          </Flex>\n        ))}\n      </Spacer>\n    </Box>\n  ) : (\n    <CheckboxControl<CheckboxFieldOptionModel<any>, any>\n      tabIndex={props.tabIndex}\n      options={props.options}\n      values={props.values}\n      equals={props.equals}\n      onChange={props.onChange}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      children={(renderProps) => (\n        <OptionField\n          title={props.title}\n          hint={props.hint}\n          help={props.help}\n          tabIndex={renderProps.tabIndex}\n          autoFocus={props.autoFocus}\n          onFocus={renderProps.onFocus}\n          onBlur={renderProps.onBlur}\n          onKeyDown={renderProps.onKeyDown}\n          children={renderProps.options.map((option, index) => (\n            <OptionControl<any>\n              key={index}\n              disabled={option.disabled}\n              value={option.value}\n              onClick={option.onClick}\n              onMouseEnter={option.onMouseEnter}\n              onMouseLeave={renderProps.onMouseLeave}\n              children={(renderOptionProps) => (\n                <OptionFieldItem\n                  disabled={option.disabled}\n                  icon={\n                    <Box width={6}>\n                      <Check\n                        disabled={option.disabled}\n                        checked={option.checked}\n                        focused={option.focused}\n                      />\n                    </Box>\n                  }\n                  label={option.label}\n                  description={option.description}\n                  onClick={renderOptionProps.onClick}\n                  onMouseEnter={renderOptionProps.onMouseEnter}\n                  onMouseLeave={renderOptionProps.onMouseLeave}\n                />\n              )}\n            />\n          ))}\n        />\n      )}\n    />\n  )\n\nCheckboxField.displayName = 'CheckboxField'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/checkbox-field/CheckboxFieldOptionModel.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/checkbox-field/CheckboxFieldProps.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/checkbox-field/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/code-field/CodeField.tsx",["787","788","789","790"],[],"import {\n  Box,\n  CodeFieldControl,\n  Flex,\n  FlexItem,\n  Input,\n  keyframes,\n  Stub,\n  Typo,\n} from '@qiwi/pijma-core'\nimport React, { FC, Fragment } from 'react'\n\nimport { CodeFieldProps } from './CodeFieldProps'\n\nconst animation = (count: number) =>\n  keyframes({\n    '0%': {\n      height: '48px',\n    },\n    [`${(1 / count) * 50}%`]: {\n      height: '40px',\n    },\n    [`${(1 / count) * 100}%`]: {\n      height: '48px',\n    },\n  })\n\nexport const CodeField: FC<CodeFieldProps> = ({\n  length = 4,\n  autoFocus = false,\n  loading = false,\n  type = 'tel',\n  ...props\n}) =>\n  props.stub ? (\n    <Fragment>\n      {new Array(length).fill('').map((_, index) => (\n        <Box ml={index === 0 ? 0 : 3} display=\"inline-block\" key={index}>\n          <Stub width={8} height={12} r={8} />\n        </Box>\n      ))}\n    </Fragment>\n  ) : (\n    <CodeFieldControl\n      value={props.value}\n      type={type}\n      autoFocus={autoFocus}\n      loading={loading}\n      onChange={props.onChange}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      onReady={props.onReady}\n      children={(renderProps) => (\n        <Box width={1} minHeight={12}>\n          <Flex>\n            {renderProps.values.map((item, index) => (\n              <FlexItem ml={index === 0 ? 0 : 3} align=\"top\" key={index}>\n                <Input\n                  name={props.name}\n                  tabIndex={index === 0 ? 0 : -1}\n                  cursor={props.disabled ? 'not-allowed' : undefined}\n                  animation={\n                    loading\n                      ? `${animation(props.value.length)} ${\n                          450 * props.value.length\n                        }ms ease-in-out ${450 * index}ms infinite`\n                      : undefined\n                  }\n                  autoFocus={autoFocus && index === 0}\n                  css={{ textAlign: 'center' }}\n                  bg=\"#F2F2F2\"\n                  b={item.focused && !loading ? '1px solid #CCCCCC' : undefined}\n                  autoComplete=\"off\"\n                  valueSize={5}\n                  valueWeight={400}\n                  width={8}\n                  height={12}\n                  r={8}\n                  type={type}\n                  disabled={props.disabled || loading}\n                  ref={item.ref}\n                  value={loading ? '' : props.value[index]}\n                  onChange={item.onChange}\n                  onClick={item.onClick}\n                  onFocus={item.onFocus}\n                  onBlur={item.onBlur}\n                  onKeyDown={item.onKeyDown}\n                />\n              </FlexItem>\n            ))}\n          </Flex>\n          {props.error ? (\n            <Box mt={5}>\n              <Typo\n                display=\"block\"\n                color=\"#d0021b\"\n                weight={300}\n                size={3.5}\n                height={5}\n                children={props.error}\n              />\n            </Box>\n          ) : null}\n        </Box>\n      )}\n    />\n  )\n\nCodeField.displayName = 'CodeField'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/code-field/CodeFieldProps.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/code-field/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/content-suggest/ContentSuggest.tsx",["791","792","793","794","795","796","797","798","799"],[],"import {\n  Box,\n  Card,\n  ContentInput,\n  Icon,\n  Image,\n  MenuControl,\n  Pos,\n  Spacer,\n  styled,\n  SuggestControl,\n} from '@qiwi/pijma-core'\nimport React, { Fragment } from 'react'\n\nimport { InputModal } from '../input-modal'\nimport { Link } from '../link'\nimport { MenuItem } from '../menu'\nimport { Paragraph } from '../typography'\nimport { ContentSuggestOptionModel } from './ContentSuggestOptionModel'\nimport { ContentSuggestProps } from './ContentSuggestProps'\n\nconst CardMenuItem = styled(Card)().withComponent(MenuItem)\n\nCardMenuItem.displayName = 'CardMenuItem'\n\nexport const ContentSuggest = <V extends {}>({\n  equals = (a: V, b: V) => a === b,\n  ...props\n}: ContentSuggestProps<ContentSuggestOptionModel<V>, V>) => (\n  <SuggestControl<V, ContentSuggestOptionModel<V>>\n    value={props.value}\n    suggest={props.suggest}\n    items={props.items}\n    total={props.total}\n    empty={props.empty}\n    equals={equals}\n    onRequest={props.onRequest}\n    onChange={props.onChange}\n    onBlur={props.onBlur}\n    onFocus={props.onFocus}\n    onCancel={props.onCancel}\n    onSubmit={props.onSubmit}\n    children={(renderProps) => (\n      <Pos type=\"relative\">\n        <Box\n          width={1}\n          onMouseEnter={renderProps.onInputMouseEnter}\n          onMouseLeave={renderProps.onInputMouseLeave}\n        >\n          <ContentInput\n            value={props.suggest || ''}\n            type=\"search\"\n            error={false}\n            tabIndex={props.tabIndex}\n            autoComplete={props.autoComplete}\n            autoFocus={props.autoFocus}\n            placeholder={props.placeholder}\n            maxLength={props.maxLength}\n            pr={14}\n            focused={false}\n            hovered={renderProps.hovered}\n            onChange={renderProps.onRequest}\n            onFocus={renderProps.onShowFocus}\n          />\n          <Pos\n            type=\"absolute\"\n            right={4}\n            top={3}\n            onClick={renderProps.onShowClick}\n          >\n            <Icon name=\"search\" color=\"#666\" />\n          </Pos>\n        </Box>\n        <MenuControl\n          count={renderProps.items.length}\n          selected={renderProps.selected}\n          onSelect={renderProps.onItemSelect}\n          onKeyDown={renderProps.onModalItemKeyDown}\n          children={(menuRenderProps) => (\n            <InputModal\n              value={props.suggest || ''}\n              tabIndex={props.tabIndex}\n              autoComplete={props.autoComplete}\n              placeholder={props.placeholder}\n              maxLength={props.maxLength}\n              show={renderProps.show}\n              inputRef={renderProps.inputRef}\n              contentRef={menuRenderProps.containerRef}\n              error={props.error}\n              onChange={renderProps.onRequest}\n              onKeyDown={\n                renderProps.show\n                  ? menuRenderProps.onKeyDown\n                  : renderProps.onModalItemKeyDown\n              }\n              onBlur={renderProps.onModalInputBlur}\n              onSubmit={renderProps.onSearchClick}\n              onShow={renderProps.onShow}\n              onHide={renderProps.onHide}\n              onEscape={renderProps.onEscapeInputModal}\n              onBack={renderProps.onBack}\n            >\n              {props.loading ? (\n                Array.from({length: 4})\n                  .fill(1)\n                  .map((_item, key) => (\n                    <CardMenuItem\n                      key={key}\n                      icon={true}\n                      stub\n                      text=\"stub\"\n                      notes=\"stub\"\n                    />\n                  ))\n              ) : (\n                <Spacer size=\"s\">\n                  {menuRenderProps.items.length > 0 ? (\n                    <Fragment>\n                      {menuRenderProps.items.map((item, key) => (\n                        <CardMenuItem\n                          key={key}\n                          ref={item.ref}\n                          onClick={item.onClick}\n                          onMouseEnter={item.onMouseEnter}\n                          cursor=\"pointer\"\n                          text={renderProps.items[key].title}\n                          notes={renderProps.items[key].description}\n                          icon={\n                            <Image\n                              width={6}\n                              height={6}\n                              src={renderProps.items[key].logo}\n                            />\n                          }\n                          hover={item.focused}\n                          active={item.selected}\n                          focus={item.selected}\n                        />\n                      ))}\n                    </Fragment>\n                  ) : null}\n                  {props.total && menuRenderProps.items.length > 0 ? (\n                    <Box px={4}>\n                      <Paragraph>\n                        {props.total.text}\n                        {props.total.link ? (\n                          <Fragment>\n                            {' '}\n                            <Link\n                              onClick={renderProps.onTotalClick}\n                              children={props.total.link.text}\n                            />\n                          </Fragment>\n                        ) : null}\n                      </Paragraph>\n                    </Box>\n                  ) : (props.empty && menuRenderProps.items.length === 0 ? (\n                    <Box px={4}>\n                      <Paragraph>\n                        {props.empty.text}\n                        {props.empty.link ? (\n                          <Fragment>\n                            {' '}\n                            <Link\n                              onClick={renderProps.onEmptyClick}\n                              children={props.empty.link.text}\n                            />\n                          </Fragment>\n                        ) : null}\n                      </Paragraph>\n                    </Box>\n                  ) : null)}\n                </Spacer>\n              )}\n            </InputModal>\n          )}\n        />\n      </Pos>\n    )}\n  />\n)\n\nContentSuggest.displayName = 'ContentSuggest'\n\nContentSuggest.defaultProps = {\n  equals: (a: any, b: any) => a === b,\n}\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/content-suggest/ContentSuggestOptionModel.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/content-suggest/ContentSuggestProps.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/content-suggest/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/details/Details.tsx",["800","801","802","803","804"],[],"import { Box, Pos, Value } from '@qiwi/pijma-core'\nimport React, { FC, ReactElement } from 'react'\n\nimport { Text } from '../typography'\n\ntype DetailsText = ReactElement | string\n\nexport interface DetailsProps {\n  children: {\n    title: DetailsText\n    content: DetailsText | DetailsText[]\n  }[]\n  dots?: boolean\n  titleWidth?: Value\n  contentWidth?: Value\n  size?: 's' | 'm'\n  stub?: boolean | number[]\n}\n\nconst indentDots: { [size in NonNullable<DetailsProps['size']>]: string } = {\n  s: '6px',\n  m: '8px',\n}\n\nconst bottomDots: { [size in NonNullable<DetailsProps['size']>]: string } = {\n  s: '5px',\n  m: '7px',\n}\n\nexport const Details: FC<DetailsProps> = ({\n  children,\n  dots,\n  titleWidth,\n  contentWidth,\n  size = 's',\n  stub = false,\n}) =>\n  stub ? (\n    <Box as=\"dl\" width=\"100%\" display=\"table\">\n      {(Array.isArray(stub) ? stub : [0.4, 0.5, 0.3]).map((width, i) => (\n        <Box css={{ display: 'table-row' }} key={`${i}`}>\n          <Box\n            as=\"dt\"\n            width={titleWidth || 0.5}\n            pt={i !== 0 ? 2 : undefined}\n            css={{\n              display: 'table-cell',\n              verticalAlign: 'bottom',\n            }}\n          >\n            {dots ? (\n              <Pos\n                type=\"relative\"\n                overflow=\"hidden\"\n                css={{\n                  ':after': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    bottom: bottomDots[size],\n                    borderBottom: 'dashed 1px #e6e6e6',\n                    width: '100%',\n                    marginLeft: width * 100 + '%',\n                  },\n                }}\n              >\n                <Box width={width} pr={indentDots[size]}>\n                  <Text display=\"block\" size={size} stub />\n                </Box>\n              </Pos>\n            ) : (\n              <Box width={width}>\n                <Text display=\"block\" size={size} stub />\n              </Box>\n            )}\n          </Box>\n          <Box\n            as=\"dd\"\n            width={contentWidth || 0.5}\n            pt={i !== 0 ? 2 : undefined}\n            css={{\n              display: 'table-cell',\n              verticalAlign: 'bottom',\n            }}\n            pl={indentDots[size]}\n          >\n            <Box width={1 - width}>\n              <Text display=\"block\" size={size} stub />\n            </Box>\n          </Box>\n        </Box>\n      ))}\n    </Box>\n  ) : (\n    <Box as=\"dl\" width=\"100%\" display=\"table\">\n      {children.map((item, i) =>\n        ([] as DetailsText[]).concat(item.content).map((content, j) => (\n          <Box css={{ display: 'table-row' }} key={`${i}.${j}`}>\n            <Box\n              as=\"dt\"\n              width={titleWidth}\n              pt={j !== 0 || i !== 0 ? 2 : undefined}\n              css={{\n                display: 'table-cell',\n                verticalAlign: 'bottom',\n              }}\n            >\n              {j === 0 ? (\n                dots ? (\n                  <Pos\n                    type=\"relative\"\n                    overflow=\"hidden\"\n                    css={{\n                      ':after': {\n                        content: '\"\"',\n                        position: 'absolute',\n                        bottom: bottomDots[size],\n                        borderBottom: 'dashed 1px #e6e6e6',\n                        width: '100%',\n                        marginLeft: indentDots[size],\n                      },\n                    }}\n                  >\n                    <Text\n                      bold={false}\n                      size={size}\n                      color=\"support\"\n                      children={item.title}\n                    />\n                  </Pos>\n                ) : (\n                  <Text\n                    color=\"support\"\n                    bold={false}\n                    size={size}\n                    children={item.title}\n                  />\n                )\n              ) : null}\n            </Box>\n            <Box\n              as=\"dd\"\n              width={contentWidth}\n              pt={j !== 0 || i !== 0 ? 2 : undefined}\n              css={{\n                display: 'table-cell',\n                verticalAlign: 'bottom',\n              }}\n              pl={indentDots[size]}\n            >\n              <Text bold={false} size={size} children={content} />\n            </Box>\n          </Box>\n        )),\n      )}\n    </Box>\n  )\n\nDetails.displayName = 'Details'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/details/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/drop-up/DropUp.tsx",["805","806","807"],[],"import {\n  Box,\n  Card,\n  css,\n  Flex,\n  FlexItem,\n  FlexPos,\n  Icon,\n  Modal,\n  ModalProps,\n  Pos,\n  SimpleTransition,\n  styled,\n} from '@qiwi/pijma-core'\nimport React, { FC, KeyboardEventHandler, ReactNode } from 'react'\n\nimport { Paragraph } from '../typography'\n\nconst translate3d = {\n  vertical: '0, 100%, 0',\n  horizontal: '100%, 0, 0',\n}\n\nconst defaultProps = (direction: 'vertical' | 'horizontal') => ({\n  timeout: {\n    enter: 370,\n    exit: 250,\n  },\n  enterClassName: (timeout: number) =>\n    css({\n      opacity: 1,\n      transform: 'translate3d(0, 0, 0)',\n      transition: `opacity ${timeout}ms ease, transform ${timeout}ms ease`,\n    }),\n  exitClassName: (timeout: number) =>\n    css({\n      opacity: 0,\n      transform: `translate3d(${translate3d[direction]})`,\n      transition: `opacity ${timeout}ms ease, transform ${timeout}ms ease`,\n    }),\n})\n\nconst ContentTransitionVertical: ModalProps['transition'] = (props) => (\n  <SimpleTransition {...props} {...defaultProps('vertical')} />\n)\n\nContentTransitionVertical.displayName = 'ContentTransitionVertical'\n\nconst ContentTransitionHorizontal: ModalProps['transition'] = (props) => (\n  <SimpleTransition {...props} {...defaultProps('horizontal')} />\n)\n\nContentTransitionHorizontal.displayName = 'ContentTransitionHorizontal'\n\nconst BackdropTransition: ModalProps['backdropTransition'] = (props) => (\n  <SimpleTransition\n    {...props}\n    timeout={{\n      enter: 370,\n      exit: 250,\n    }}\n    enterClassName={(timeout: number) =>\n      css({\n        opacity: 1,\n        transition: `opacity ${timeout}ms ease`,\n      })\n    }\n    exitClassName={(timeout: number) =>\n      css({\n        opacity: 0,\n        transition: `opacity ${timeout}ms ease`,\n      })\n    }\n  />\n)\n\nBackdropTransition.displayName = 'BackdropTransition'\n\nexport interface DropUpProps {\n  show: boolean\n  onShow?: () => void\n  onHide: () => void\n  onBack?: () => void\n  horizontal?: boolean\n  title: string\n  footer?: ReactNode\n  autoFocus?: boolean\n  onKeyDown?: KeyboardEventHandler\n  children?: ReactNode\n}\n\nconst FlexPosCard = styled(FlexPos)().withComponent(Card)\n\nFlexPosCard.displayName = 'FlexPosCard'\n\nexport const DropUp: FC<DropUpProps> = (props) => (\n  <Modal\n    show={props.show}\n    autoFocus={props.autoFocus}\n    onShow={props.onShow}\n    onHide={props.onHide}\n    transition={\n      props.horizontal ? ContentTransitionHorizontal : ContentTransitionVertical\n    }\n    backdropTransition={BackdropTransition}\n    renderBackdrop={(backdropProps) => (\n      <Pos\n        type=\"fixed\"\n        zIndex=\"auto\"\n        top={0}\n        right={0}\n        bottom={0}\n        left={0}\n        {...backdropProps}\n      >\n        <Card bg=\"rgba(245, 245, 245, 0.8)\" width={1} height={1} />\n      </Pos>\n    )}\n    renderDialog={(dialogProps) => (\n      <Pos\n        type=\"fixed\"\n        zIndex={9999}\n        top={0}\n        bottom={0}\n        left={0}\n        right={0}\n        onKeyDown={props.onKeyDown}\n        {...dialogProps}\n      >\n        <FlexPosCard\n          role=\"document\"\n          display=\"flex\"\n          direction=\"column\"\n          width={1}\n          maxHeight=\"calc(100% - 44px)\"\n          bg=\"#fff\"\n          type=\"absolute\"\n          bottom={0}\n          s=\"0px 0px 64px 0px rgba(0, 0, 0, 0.16)\"\n        >\n          <Pos zIndex={1}>\n            <Card width={1} px={6} py={4} s=\"0 1px 2px 0 rgba(0, 0, 0, 0.12)\">\n              <Flex width={1} align=\"center\">\n                {props.onBack ? (\n                  <Box width={6} height={6} mr={3} onClick={props.onBack}>\n                    <Icon name=\"arrow-left\" />\n                  </Box>\n                ) : null}\n                <Paragraph size=\"m\" bold>\n                  {props.title}\n                </Paragraph>\n                <Box\n                  aria-label=\"close\"\n                  width={6}\n                  height={6}\n                  ml=\"auto\"\n                  onClick={props.onHide}\n                >\n                  <Icon name=\"cross\" />\n                </Box>\n              </Flex>\n            </Card>\n          </Pos>\n          <FlexItem display=\"flex\" grow={1} width={1} minHeight={0}>\n            <FlexItem grow={1} minHeight={0} overflow=\"auto\">\n              {props.children}\n            </FlexItem>\n          </FlexItem>\n          {props.footer ? (\n            <Box p={4} width={1}>\n              {props.footer}\n            </Box>\n          ) : null}\n        </FlexPosCard>\n      </Pos>\n    )}\n  />\n)\n\nDropUp.displayName = 'DropUp'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/drop-up/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/extended-progress-bar/ExtendedProgressBar.tsx",["808","809","810","811","812","813","814","815","816"],[],"import { Card, Flex, FlexItem, Spacer, Stub } from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nimport { Text } from '../typography'\n\nexport interface ExtendedProgressBarProps {\n  value: number\n  maxValue?: number\n  titleStart?: string\n  titleEnd?: string\n  disabled?: boolean\n  stub?: boolean\n  formatValue?: (value: number) => string\n}\n\nexport const ExtendedProgressBar: FC<ExtendedProgressBarProps> = ({\n  value,\n  maxValue = 1,\n  titleStart,\n  titleEnd,\n  disabled = false,\n  stub = false,\n  formatValue,\n}) => (\n  <Spacer size=\"xxs\">\n    {titleStart || titleEnd ? (\n      <Flex justify=\"space-between\">\n        <FlexItem width={stub ? 0.15 : undefined}>\n          {titleStart && value !== undefined ? (\n            <Text\n              size=\"s\"\n              bold={false}\n              stub={stub}\n              display={stub ? 'block' : undefined}\n              children={\n                stub\n                  ? undefined\n                  : (formatValue !== undefined\n                  ? formatValue(value)\n                  : value)\n              }\n              compact\n            />\n          ) : null}\n        </FlexItem>\n        <FlexItem width={stub ? 0.15 : undefined}>\n          {titleEnd && value !== undefined && maxValue !== undefined ? (\n            <Text\n              size=\"s\"\n              bold={false}\n              stub={stub}\n              display={stub ? 'block' : undefined}\n              children={\n                stub\n                  ? undefined\n                  : (formatValue !== undefined\n                  ? formatValue(maxValue - value)\n                  : maxValue - value)\n              }\n              compact\n            />\n          ) : null}\n        </FlexItem>\n      </Flex>\n    ) : null}\n    <Flex>\n      <FlexItem\n        width={stub || disabled || maxValue === 0 ? 1 : value / maxValue}\n        minWidth=\"4px\"\n        transition=\"width 300ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n        children={\n          stub ? (\n            <Stub height=\"4px\" width={1} r={2} />\n          ) : (\n            <Card\n              height=\"4px\"\n              width={1}\n              r={2}\n              bg={disabled ? '#E6E6E6' : (maxValue === 0 ? '#F5F5F5' : '#FF8C00')}\n            />\n          )\n        }\n      />\n      {!stub && !disabled && value < maxValue ? (\n        <FlexItem ml={1} grow={1} minWidth=\"4px\">\n          <Card height=\"4px\" width={1} r={2} bg=\"#F5F5F5\" />\n        </FlexItem>\n      ) : null}\n    </Flex>\n    {titleStart || titleEnd ? (\n      <Flex justify=\"space-between\">\n        <FlexItem width={stub ? 0.2 : undefined}>\n          {titleStart ? (\n            <Text\n              size=\"s\"\n              bold={false}\n              stub={stub}\n              color=\"support\"\n              display={stub ? 'block' : undefined}\n              children={titleStart}\n              compact\n            />\n          ) : null}\n        </FlexItem>\n        <FlexItem width={stub ? 0.2 : undefined}>\n          {titleEnd ? (\n            <Text\n              size=\"s\"\n              bold={false}\n              stub={stub}\n              color=\"support\"\n              display={stub ? 'block' : undefined}\n              children={titleEnd}\n              compact\n            />\n          ) : null}\n        </FlexItem>\n      </Flex>\n    ) : null}\n  </Spacer>\n)\n\nExtendedProgressBar.displayName = 'ExtendedProgressBar'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/extended-progress-bar/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/footer-app/FooterApp.tsx",["817"],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/footer-app/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/footer-nav/FooterNav.tsx",["818"],[],"import { Box, Flex, FlexItem } from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nimport { NavLink, NavLinkProps } from '../nav-link'\n\nexport interface FooterNavProps {\n  children?: NavLinkProps[]\n  stub?: Array<number> | boolean\n}\n\nexport const FooterNav: FC<FooterNavProps> = ({\n  children = [],\n  stub = false,\n}) => (\n  <Box overflow=\"hidden\">\n    <Flex wrap=\"wrap\" mx={-2} my={-2.5}>\n      {stub\n        ? (typeof stub === 'boolean' ? [24, 30, 18] : stub).map(\n            (width, index) => (\n              <FlexItem px={2} py={2.5} key={index} width={width}>\n                <NavLink stub />\n              </FlexItem>\n            ),\n          )\n        : children.map((item, i) => (\n            <FlexItem px={2} py={2.5} key={i}>\n              <NavLink {...item} />\n            </FlexItem>\n          ))}\n    </Flex>\n  </Box>\n)\n\nFooterNav.displayName = 'FooterNav'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/footer-nav/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/footer-out/FooterOut.tsx",["819","820"],[],"import {\n  Box,\n  Card,\n  CardLnk,\n  Flex,\n  FlexItem,\n  Icon,\n  IconProps,\n  LinkControl,\n  Stub,\n} from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\ninterface FooterOutLinkProps {\n  href: string\n  target?: string\n  download?: string | boolean\n  rel?: string\n  title?: string\n  icon: IconProps['name']\n  stub?: boolean\n  onClick?: (\n    href?: string,\n    target?: string,\n    download?: string | boolean,\n    rel?: string,\n  ) => void\n  onFocus?: () => void\n  onBlur?: () => void\n}\n\nconst FooterOutLink: FC<FooterOutLinkProps> = (props) =>\n  props.stub ? (\n    <Card width={10} height={10} r={20} b=\"solid 1px #ccc\" p={1.75}>\n      <Stub height={5} width={5} r={10} top={0.5} left={0.5} />\n    </Card>\n  ) : (\n    <LinkControl\n      href={props.href}\n      target={props.target}\n      download={props.download}\n      rel={props.rel}\n      onClick={props.onClick}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      children={(renderProps) => (\n        <CardLnk\n          display=\"block\"\n          width={10}\n          height={10}\n          r={40}\n          p={1.75}\n          b={\n            renderProps.hover || renderProps.focus || renderProps.active\n              ? 'solid 1px #999'\n              : 'solid 1px #ccc'\n          }\n          href={props.href}\n          rel={props.rel}\n          target={props.target}\n          title={props.title}\n          download={props.download}\n          onClick={renderProps.onClick}\n          onFocus={renderProps.onFocus}\n          onBlur={renderProps.onBlur}\n          onMouseEnter={renderProps.onMouseEnter}\n          onMouseLeave={renderProps.onMouseLeave}\n          onMouseUp={renderProps.onMouseUp}\n          onMouseDown={renderProps.onMouseDown}\n          children={\n            <Icon\n              name={props.icon}\n              color={\n                renderProps.hover || renderProps.focus || renderProps.active\n                  ? '#666'\n                  : '#999'\n              }\n            />\n          }\n        />\n      )}\n    />\n  )\n\nFooterOutLink.displayName = 'FooterOutLink'\n\nexport interface FooterOutProps {\n  children: FooterOutLinkProps[]\n  stub?: number | boolean\n}\n\nexport const FooterOut: FC<FooterOutProps> = ({ children, stub = false }) => (\n  <Box overflow=\"hidden\">\n    <Flex wrap=\"wrap\" justify=\"space-between\" m={-1.5}>\n      {(stub\n        ? new Array(typeof stub === 'number' ? stub : 6).fill({\n            href: '',\n            icon: 'qiwi',\n          })\n        : children\n      ).map((item, i) => (\n        <FlexItem key={i} m={1.5}>\n          <FooterOutLink stub={stub} {...item} />\n        </FlexItem>\n      ))}\n    </Flex>\n  </Box>\n)\n\nFooterOut.displayName = 'FooterOut'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/footer-out/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/glossary/Glossary.tsx",["821"],[],"import { Box, Spacer } from '@qiwi/pijma-core'\nimport React, { FC, ReactElement } from 'react'\n\nimport { Text } from '../typography'\n\ntype GlossaryText = ReactElement | string\n\nexport interface GlossaryProps {\n  children: { title: GlossaryText; content: GlossaryText | GlossaryText[] }[]\n  stub?: boolean\n}\n\nexport const Glossary: FC<GlossaryProps> = ({ children, stub }) =>\n  stub ? (\n    <Box as=\"dl\">\n      {children.map((item, i) => (\n        <Box key={i} mt={i === 0 ? undefined : 5}>\n          <Box as=\"dt\" mr={13} minWidth={0.5}>\n            <Text stub display=\"block\" bold={false} compact size=\"s\" />\n          </Box>\n          <Box as=\"dd\" mt={1}>\n            <Spacer size=\"xs\">\n              {(Array.isArray(item.content)\n                ? item.content\n                : [item.content]\n              ).map((_content, j) => (\n                <Text\n                  key={`${i}.${j}`}\n                  stub\n                  bold={false}\n                  display=\"block\"\n                  compact\n                  size=\"m\"\n                />\n              ))}\n            </Spacer>\n          </Box>\n        </Box>\n      ))}\n    </Box>\n  ) : (\n    <Box as=\"dl\">\n      {children.map((item, i) => (\n        <Box key={i} mt={i === 0 ? undefined : 5}>\n          <Box as=\"dt\">\n            <Text\n              display=\"block\"\n              bold={false}\n              compact\n              size=\"s\"\n              color=\"support\"\n              children={item.title}\n            />\n          </Box>\n          <Box mt={1} as=\"dd\">\n            <Spacer size=\"xs\">\n              {(Array.isArray(item.content)\n                ? item.content\n                : [item.content]\n              ).map((content, j) => (\n                <Text\n                  key={`${i}.${j}`}\n                  display=\"block\"\n                  bold={false}\n                  compact\n                  size=\"m\"\n                  children={content}\n                />\n              ))}\n            </Spacer>\n          </Box>\n        </Box>\n      ))}\n    </Box>\n  )\n\nGlossary.displayName = 'Glossary'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/glossary/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/header/Header.tsx",["822"],[],"import { Card, Pos } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\ninterface HeaderProps {\n  active?: boolean\n  zIndex?: number\n  children?: ReactNode\n}\n\nexport const Header: FC<HeaderProps> = ({\n  zIndex = 10_002,\n  active,\n  children,\n}) => (\n  <Pos\n    as=\"header\"\n    type=\"relative\"\n    zIndex={active ? zIndex : undefined}\n    width={1}\n    height={15}\n  >\n    <Pos\n      type={active ? 'fixed' : 'relative'}\n      top={0}\n      left={0}\n      width={1}\n      height={15}\n    >\n      <Card\n        bg=\"#fff\"\n        width={1}\n        height={1}\n        s={active ? undefined : '0 1px 2px 0 rgba(0, 0, 0, 0.12)'}\n        transition=\"all 100ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n        children={children}\n      />\n    </Pos>\n  </Pos>\n)\n\nHeader.displayName = 'Header'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/header/HeaderMenu.tsx",["823"],[],"import {\n  Box,\n  Card,\n  css,\n  FlexCard,\n  FlexItem,\n  Modal,\n  ModalProps,\n  OffsetScrollControl,\n  Pos,\n  SimpleTransition,\n} from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\ninterface HeaderMenuProps {\n  show: boolean\n  zIndex?: number\n  header?: ReactNode\n  from: 'top' | 'right' | 'bottom' | 'left'\n  stub?: boolean\n  onShow?: () => void\n  onHide?: () => void\n  children?: ReactNode\n}\n\nconst containerClassName = css({\n  position: 'fixed',\n})\n\nconst translate3d: { [direction in HeaderMenuProps['from']]: string } = {\n  top: '0, -100%, 0',\n  right: '100%, 0, 0',\n  bottom: '0, 100%, 0',\n  left: '-100%, 0, 0',\n}\n\nconst defaultProps = (direction: HeaderMenuProps['from']) => ({\n  timeout: {\n    enter: 300,\n    exit: 100,\n  },\n  enterClassName: (timeout: number) =>\n    css({\n      transform: 'translate3d(0, 0, 0)',\n      transition: `transform ${\n        timeout - 1\n      }ms cubic-bezier(0.4, 0.0, 0.2, 1) 1ms`,\n    }),\n  exitClassName: (timeout: number) =>\n    css({\n      transform: `translate3d(${translate3d[direction]})`,\n      transition: `transform ${\n        timeout - 1\n      }ms cubic-bezier(0.4, 0.0, 0.2, 1) 1ms`,\n    }),\n})\n\nconst ContentTransitionTop: ModalProps['transition'] = (props) => (\n  <SimpleTransition {...props} {...defaultProps('top')} />\n)\n\nContentTransitionTop.displayName = 'ContentTransitionTop'\n\nconst ContentTransitionRight: ModalProps['transition'] = (props) => (\n  <SimpleTransition {...props} {...defaultProps('right')} />\n)\n\nContentTransitionRight.displayName = 'ContentTransitionRight'\n\nconst ContentTransitionBottom: ModalProps['transition'] = (props) => (\n  <SimpleTransition {...props} {...defaultProps('bottom')} />\n)\n\nContentTransitionBottom.displayName = 'ContentTransitionBottom'\n\nconst ContentTransitionLeft: ModalProps['transition'] = (props) => (\n  <SimpleTransition {...props} {...defaultProps('left')} />\n)\n\nContentTransitionLeft.displayName = 'ContentTransitionLeft'\n\nconst ContentTransition: {\n  [direction in HeaderMenuProps['from']]: ModalProps['transition']\n} = {\n  top: ContentTransitionTop,\n  right: ContentTransitionRight,\n  bottom: ContentTransitionBottom,\n  left: ContentTransitionLeft,\n}\n\nexport const HeaderMenu: FC<HeaderMenuProps> = ({\n  show,\n  zIndex = 9999,\n  header,\n  from,\n  stub,\n  onShow,\n  onHide,\n  children,\n}) =>\n  stub ? (\n    <Box display=\"none\">\n      <FlexCard\n        display=\"flex\"\n        direction=\"column\"\n        bg=\"#fff\"\n        width={1}\n        height={1}\n        s=\"0 8px 16px 0 rgba(0, 0, 0, 0.12)\"\n      >\n        <FlexItem height={15} shrink={1}>\n          <Card\n            height={1}\n            s=\"0 1px 2px 0 rgba(0, 0, 0, 0.12)\"\n            transition=\"all 100ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n            children={header}\n          />\n        </FlexItem>\n        <FlexItem grow={1} height={1} minHeight={0}>\n          {children}\n        </FlexItem>\n      </FlexCard>\n    </Box>\n  ) : (\n    <Modal\n      autoFocus\n      show={show}\n      onShow={onShow}\n      onHide={onHide}\n      containerClassName={containerClassName}\n      transition={ContentTransition[from]}\n      renderDialog={(dialogProps) => (\n        <Pos\n          type=\"fixed\"\n          zIndex={zIndex}\n          top={0}\n          bottom={0}\n          left={0}\n          right={0}\n          {...dialogProps}\n        >\n          <OffsetScrollControl\n            content={children}\n            top=\"8px\"\n            children={(renderProps) => (\n              <FlexCard\n                display=\"flex\"\n                direction=\"column\"\n                bg=\"#fff\"\n                width={1}\n                height={1}\n                s=\"0 8px 16px 0 rgba(0, 0, 0, 0.12)\"\n              >\n                <FlexItem height={15} shrink={1}>\n                  <Card\n                    height={1}\n                    s={\n                      renderProps.top\n                        ? '0 1px 2px 0 rgba(0, 0, 0, 0.12)'\n                        : undefined\n                    }\n                    transition=\"all 100ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n                    children={header}\n                  />\n                </FlexItem>\n                <FlexItem grow={1} height={1} minHeight={0}>\n                  {renderProps.children}\n                </FlexItem>\n              </FlexCard>\n            )}\n          />\n        </Pos>\n      )}\n    />\n  )\n\nHeaderMenu.displayName = 'HeaderMenu'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/header/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/hint/Hint.tsx",["824"],[],"import { Box, HintControl, QuestionIcon } from '@qiwi/pijma-core'\nimport React, { FC, Fragment, ReactNode } from 'react'\n\nimport { SimpleModal } from '../modal'\nimport { Paragraph } from '../typography'\n\nexport interface HintProps {\n  show: boolean\n  children: ReactNode\n  onShow: () => void\n  onHide: () => void\n}\n\nexport const Hint: FC<HintProps> = ({ children, show, onShow, onHide }) => (\n  <HintControl\n    show={show}\n    onShow={onShow}\n    children={(renderProps) => (\n      <Fragment>\n        <Box\n          cursor=\"pointer\"\n          onClick={renderProps.onClick}\n          ref={renderProps.target}\n          width={6}\n          height={6}\n        >\n          <QuestionIcon />\n        </Box>\n        <SimpleModal closable show={renderProps.show} onHide={onHide}>\n          {typeof children === 'string' ? (\n            <Paragraph children={children} />\n          ) : (\n            children\n          )}\n        </SimpleModal>\n      </Fragment>\n    )}\n  />\n)\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/hint/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/input-modal/InputModal.tsx",["825","826","827"],[],"import {\n  BoxPos,\n  Card,\n  CardPos,\n  css,\n  Flex,\n  FlexItem,\n  Icon,\n  Input,\n  Modal,\n  ModalProps,\n  Pos,\n  SimpleTransition,\n  styled,\n} from '@qiwi/pijma-core'\nimport React, {\n  ChangeEventHandler,\n  FC,\n  FocusEventHandler,\n  KeyboardEventHandler,\n  MouseEventHandler,\n  ReactNode,\n  RefObject,\n} from 'react'\n\nconst ContentTransition: ModalProps['transition'] = (props) => (\n  <SimpleTransition\n    {...props}\n    timeout={{\n      enter: 370,\n      exit: 250,\n    }}\n    enterClassName={(timeout: number) =>\n      css({\n        opacity: 1,\n        transform: 'translate3d(0, 0, 0)',\n        transition: `opacity ${timeout}ms ease, transform ${timeout}ms ease`,\n      })\n    }\n    exitClassName={(timeout: number) =>\n      css({\n        opacity: 0,\n        transform: 'translate3d(0, -100%, 0)',\n        transition: `opacity ${timeout}ms ease, transform ${timeout}ms ease`,\n      })\n    }\n  />\n)\n\nContentTransition.displayName = 'ContentTransition'\n\ninterface InputModalProps {\n  value: string\n  tabIndex?: number\n  autoComplete?: boolean\n  placeholder?: string\n  maxLength?: number\n  show: boolean\n  inputRef?: RefObject<HTMLInputElement>\n  contentRef?: RefObject<HTMLDivElement>\n  error?: boolean\n  onChange?: ChangeEventHandler\n  onKeyDown?: KeyboardEventHandler\n  onFocus?: FocusEventHandler\n  onBlur?: FocusEventHandler\n  onBack?: MouseEventHandler\n  onSubmit?: MouseEventHandler\n  onShow?: () => void\n  onHide?: () => void\n  onEscape?: () => void\n  children?: ReactNode\n}\n\nconst PosFlexCard = styled(CardPos)().withComponent(Flex)\n\nPosFlexCard.displayName = 'PosFlexCard'\n\nexport const InputModal: FC<InputModalProps> = (props) => (\n  <Modal\n    show={props.show}\n    onShow={props.onShow}\n    onHide={props.onHide}\n    onEscapeKeyDown={props.onEscape}\n    transition={ContentTransition}\n    restoreFocus={false}\n    renderDialog={(dialogProps) => (\n      <Pos\n        type=\"fixed\"\n        zIndex={10_050}\n        top={0}\n        bottom={0}\n        left={0}\n        right={0}\n        height=\"100%\"\n        overflow=\"auto\"\n        {...dialogProps}\n      >\n        <Card role=\"document\" width={1} height={1} bg=\"#fff\">\n          <PosFlexCard\n            type=\"relative\"\n            align=\"center\"\n            height={15}\n            p={4}\n            transition=\"all 100ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n            bb={props.error ? 'solid 2px #d0021b' : 'solid 2px transparent'}\n            s=\"0 0 25px 0 rgba(0, 0, 0, 0.08)\"\n          >\n            {props.onBack ? (\n              <FlexItem\n                aria-label=\"back\"\n                shrink={0}\n                mr={4}\n                onClick={props.onBack}\n              >\n                <Icon name=\"arrow-left\" color=\"#000\" />\n              </FlexItem>\n            ) : null}\n            <FlexItem grow={1}>\n              <Input\n                value={props.value}\n                type=\"search\"\n                ref={props.inputRef}\n                width={1}\n                autoFocus={true}\n                tabIndex={props.tabIndex}\n                placeholder={props.placeholder}\n                maxLength={props.maxLength}\n                autoComplete={props.autoComplete ? 'on' : 'off'}\n                onFocus={props.onFocus}\n                onBlur={props.onBlur}\n                onKeyDown={props.onKeyDown}\n                onChange={props.onChange}\n              />\n            </FlexItem>\n            {props.onSubmit ? (\n              <FlexItem shrink={0} ml={4} onClick={props.onSubmit}>\n                <Icon name=\"search\" color=\"#666\" />\n              </FlexItem>\n            ) : null}\n          </PosFlexCard>\n          <BoxPos\n            overflow=\"auto\"\n            type=\"relative\"\n            py={3}\n            height=\"calc(100% - 60px)\"\n            children={props.children}\n          />\n        </Card>\n      </Pos>\n    )}\n  />\n)\n\nInputModal.displayName = 'InputModal'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/input-modal/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/link/BlockLink.tsx",["828"],[],"import {\n  Block,\n  CardLnk,\n  LinkControl,\n  LinkControlProps,\n  styled,\n} from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nexport interface BlockLinkProps {\n  tabIndex?: number\n  accent?: boolean\n  href: LinkControlProps['href']\n  target?: LinkControlProps['target']\n  download?: LinkControlProps['download']\n  rel?: LinkControlProps['rel']\n  title?: string\n  onClick?: LinkControlProps['onClick']\n  onFocus?: LinkControlProps['onFocus']\n  onBlur?: LinkControlProps['onBlur']\n  children: FC<{\n    active: boolean\n    focus: boolean\n    hover: boolean\n  }>\n}\n\nconst BlockLnk = styled(CardLnk)().withComponent(Block)\n\nBlockLnk.displayName = 'BlockLnk'\n\nexport const BlockLink: FC<BlockLinkProps> = (props) => (\n  <LinkControl\n    onClick={props.onClick}\n    onFocus={props.onFocus}\n    onBlur={props.onBlur}\n    href={props.href}\n    target={props.target}\n    download={props.download}\n    rel={props.rel}\n    children={(renderProps) => (\n      <BlockLnk\n        accent={props.accent}\n        hover={renderProps.hover}\n        focus={renderProps.focus}\n        active={renderProps.active}\n        tabIndex={props.tabIndex}\n        href={props.href}\n        title={props.title}\n        onClick={renderProps.onClick}\n        onFocus={renderProps.onFocus}\n        onBlur={renderProps.onBlur}\n        onMouseEnter={renderProps.onMouseEnter}\n        onMouseLeave={renderProps.onMouseLeave}\n        onMouseUp={renderProps.onMouseUp}\n        onMouseDown={renderProps.onMouseDown}\n        target={props.target}\n        download={props.download}\n        children={props.children({\n          active: renderProps.active,\n          focus: renderProps.focus,\n          hover: renderProps.hover,\n        })}\n      />\n    )}\n  />\n)\n\nBlockLink.displayName = 'BlockLink'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/link/FileLink.tsx",["829"],[],"import { FlexItem, FlexLnk, Icon, LinkControl } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nimport { Text } from '../typography'\n\nexport interface FileLinkProps {\n  onClick?: (\n    href?: string,\n    target?: string,\n    download?: string | boolean,\n    rel?: string,\n  ) => void\n  onFocus?: () => void\n  onBlur?: () => void\n  tabIndex?: number\n  href?: string\n  target?: string\n  download?: string | boolean\n  rel?: string\n  title?: string\n  children?: ReactNode\n}\n\nexport const FileLink: FC<FileLinkProps> = (props) => (\n  <LinkControl\n    onClick={props.onClick}\n    onFocus={props.onFocus}\n    onBlur={props.onBlur}\n    href={props.href}\n    target={props.target}\n    download={props.download}\n    rel={props.rel}\n    children={(renderProps) => (\n      <FlexLnk\n        tabIndex={props.tabIndex}\n        href={props.href}\n        target={props.target}\n        download={props.download}\n        rel={props.rel}\n        title={props.title}\n        display=\"inline-flex\"\n        cursor=\"pointer\"\n        onFocus={renderProps.onFocus}\n        onBlur={renderProps.onBlur}\n        onClick={renderProps.onClick}\n        onMouseEnter={renderProps.onMouseEnter}\n        onMouseLeave={renderProps.onMouseLeave}\n        onMouseUp={renderProps.onMouseUp}\n        onMouseDown={renderProps.onMouseDown}\n      >\n        <FlexItem display=\"inline-block\" width={6} height={6} mr={2} shrink={0}>\n          <Icon\n            name=\"file\"\n            color={\n              renderProps.hover || renderProps.focus || renderProps.active\n                ? '#FF8C00'\n                : '#000'\n            }\n          />\n        </FlexItem>\n        <FlexItem align=\"center\">\n          <Text\n            color={\n              renderProps.hover || renderProps.focus || renderProps.active\n                ? 'warning'\n                : 'default'\n            }\n            size=\"s\"\n            bold={false}\n            children={props.children}\n          />\n        </FlexItem>\n      </FlexLnk>\n    )}\n  />\n)\n\nFileLink.displayName = 'FileLink'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/link/Link.tsx",["830","831","832"],[],"import { LinkControl, Stub, TypoLnk, useTheme } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nexport interface LinkProps {\n  onClick?: (\n    href?: string,\n    target?: string,\n    download?: string | boolean,\n    rel?: string,\n  ) => void\n  onFocus?: () => void\n  onBlur?: () => void\n  tabIndex?: number\n  compact?: boolean\n  href?: string\n  target?: string\n  download?: string | boolean\n  rel?: string\n  title?: string\n  size?: 's' | 'm' | 'l'\n  bold?: boolean\n  stub?: boolean\n  inverse?: boolean\n  children?: ReactNode\n}\n\nconst LinkSize: { [size in NonNullable<LinkProps['size']>]: number } = {\n  s: 3.5,\n  m: 4,\n  l: 5,\n}\n\nconst StubLinkSize: Record<NonNullable<LinkProps['size']>, number> = {\n  s: 2,\n  m: 3,\n  l: 3,\n}\n\nconst StubOffSet: Record<NonNullable<LinkProps['size']>, number> = {\n  s: 1.5,\n  m: 1.5,\n  l: 2.5,\n}\n\nconst StubOffSetCompact: Record<NonNullable<LinkProps['size']>, number> = {\n  s: 1,\n  m: 1,\n  l: 2,\n}\n\nconst LinkHeight: { [size in NonNullable<LinkProps['size']>]: number } = {\n  s: 5,\n  m: 6,\n  l: 8,\n}\n\nconst LinkHeightCompact: { [size in NonNullable<LinkProps['size']>]: number } =\n  {\n    s: 4,\n    m: 5,\n    l: 7,\n  }\n\nexport const Link: FC<LinkProps> = (props) => {\n  const theme = useTheme()\n\n  return props.stub ? (\n    props.size === undefined ? null : (\n      <Stub\n        top={\n          props.compact ? StubOffSetCompact[props.size] : StubOffSet[props.size]\n        }\n        bottom={\n          props.compact ? StubOffSetCompact[props.size] : StubOffSet[props.size]\n        }\n        height={StubLinkSize[props.size]}\n        width={1}\n      />\n    )\n  ) : (\n    <LinkControl\n      onClick={props.onClick}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      href={props.href}\n      target={props.target}\n      download={props.download}\n      rel={props.rel}\n      children={(renderProps) => (\n        <TypoLnk\n          tabIndex={props.tabIndex}\n          href={props.href}\n          onClick={renderProps.onClick}\n          onFocus={renderProps.onFocus}\n          onBlur={renderProps.onBlur}\n          onMouseEnter={renderProps.onMouseEnter}\n          onMouseLeave={renderProps.onMouseLeave}\n          onMouseUp={renderProps.onMouseUp}\n          onMouseDown={renderProps.onMouseDown}\n          color={\n            renderProps.hover || renderProps.focus\n              ? (props.inverse\n                ? theme.link.color.inverse.hover\n                : theme.link.color.brand.hover)\n              : (props.inverse\n              ? theme.link.color.inverse.default\n              : theme.link.color.brand.default)\n          }\n          transition=\"all 100ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n          cursor=\"pointer\"\n          decoration=\"none\"\n          target={props.target}\n          download={props.download}\n          rel={props.rel}\n          title={props.title}\n          size={\n            props.size === undefined\n              ? undefined\n              : (props.compact\n              ? LinkHeightCompact[props.size]\n              : LinkSize[props.size])\n          }\n          height={props.size === undefined ? undefined : LinkHeight[props.size]}\n          weight={props.bold === undefined ? undefined : (props.bold ? 500 : 300)}\n          children={props.children}\n        />\n      )}\n    />\n  )\n}\n\nLink.displayName = 'Link'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/link/SectionLink.tsx",["833","834"],[],"import {\n  LinkControl,\n  LinkControlProps,\n  Lnk,\n  Section,\n  styled,\n} from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nexport interface SectionLinkProps {\n  tabIndex?: number\n  href: LinkControlProps['href']\n  target?: LinkControlProps['target']\n  download?: LinkControlProps['download']\n  rel?: LinkControlProps['rel']\n  title?: string\n  onClick?: LinkControlProps['onClick']\n  onFocus?: LinkControlProps['onFocus']\n  onBlur?: LinkControlProps['onBlur']\n  active?: boolean\n  flat?: boolean\n  children: FC<{\n    active: boolean\n    focus: boolean\n    hover: boolean\n  }>\n}\n\nconst SectionLnk = styled(Lnk)().withComponent(Section)\n\nSectionLnk.displayName = 'SectionLnk'\n\nexport const SectionLink: FC<SectionLinkProps> = (props) => (\n  <LinkControl\n    href={props.href}\n    target={props.target}\n    download={props.download}\n    rel={props.rel}\n    onClick={props.onClick}\n    onFocus={props.onFocus}\n    onBlur={props.onBlur}\n    children={(renderProps) => (\n      <SectionLnk\n        tag=\"a\"\n        flat={props.flat}\n        active={props.active ? props.active : renderProps.active}\n        hover={renderProps.hover}\n        focus={renderProps.focus}\n        tabIndex={props.tabIndex}\n        href={props.href}\n        target={props.target}\n        download={props.download}\n        rel={props.rel}\n        title={props.title}\n        onClick={renderProps.onClick}\n        onFocus={renderProps.onFocus}\n        onBlur={renderProps.onBlur}\n        onMouseEnter={renderProps.onMouseEnter}\n        onMouseLeave={renderProps.onMouseLeave}\n        onMouseUp={renderProps.onMouseUp}\n        onMouseDown={renderProps.onMouseDown}\n        children={props.children({\n          active: renderProps.active,\n          focus: renderProps.focus,\n          hover: renderProps.hover,\n        })}\n      />\n    )}\n  />\n)\n\nSectionLink.displayName = 'SectionLink'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/link/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/list/List.tsx",["835","836","837","838","839"],[],"import { Box, Card, Flex, FlexItem, Stub } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nimport { Paragraph, Text } from '../typography'\n\nexport interface ListProps {\n  children: ReactNode[]\n  type: 'step' | 'number' | 'bullet'\n  size?: 's' | 'm' | 'l'\n  stub?: boolean\n}\n\nconst ListType: Record<NonNullable<ListProps['type']>, 'ol' | 'ul'> = {\n  step: 'ol',\n  number: 'ol',\n  bullet: 'ul',\n}\n\nconst ListItemYMargin: Record<NonNullable<ListProps['type']>, number> = {\n  step: 2,\n  number: 0,\n  bullet: 0,\n}\n\nconst ItemIndent: Record<NonNullable<ListProps['type']>, number> = {\n  step: 2,\n  number: 4,\n  bullet: 4,\n}\n\nconst SpaceSize: Record<NonNullable<ListProps['size']>, number> = {\n  s: 2,\n  m: 3,\n  l: 4,\n}\n\nconst LetterSize: Record<NonNullable<ListProps['size']>, number> = {\n  s: 2,\n  m: 2.5,\n  l: 3,\n}\n\nconst StubNumberWidth: Record<NonNullable<ListProps['size']>, number> = {\n  s: 2,\n  m: 3,\n  l: 3,\n}\n\nconst StubNumberHeight: Record<NonNullable<ListProps['size']>, number> = {\n  s: 2,\n  m: 3,\n  l: 3,\n}\n\nconst StubNumberIndent: Record<NonNullable<ListProps['size']>, number> = {\n  s: 1.5,\n  m: 1.5,\n  l: 2.5,\n}\n\nconst StubBulletIndent: Record<NonNullable<ListProps['size']>, number> = {\n  s: 1.5,\n  m: 2,\n  l: 3,\n}\n\nexport const List: FC<ListProps> = ({\n  stub = false,\n  type,\n  size = 'm',\n  children,\n}) => (\n  <Box as={ListType[type]}>\n    {(stub ? [0, 0] : children).map((item, index, array) => (\n      <Flex key={index} as=\"li\" mt={index > 0 ? ItemIndent[type] : 0}>\n        {type === 'number' ? (\n          <FlexItem\n            width={\n              String(children.length).length * LetterSize[size] +\n              SpaceSize[size]\n            }\n            shrink={0}\n          >\n            {stub ? (\n              <Stub\n                height={StubNumberWidth[size]}\n                width={StubNumberHeight[size]}\n                top={StubNumberIndent[size]}\n                bottom={StubNumberIndent[size]}\n              />\n            ) : (\n              <Text size={size} bold={false}>\n                {index + 1}.\n              </Text>\n            )}\n          </FlexItem>\n        ) : (type === 'bullet' ? (\n          <FlexItem width={5} shrink={0}>\n            {stub ? (\n              <Stub\n                height={2}\n                width={2}\n                top={StubBulletIndent[size]}\n                bottom={StubNumberIndent[size]}\n              />\n            ) : (\n              <Text size={size} bold={false}>\n                &#8226;\n              </Text>\n            )}\n          </FlexItem>\n        ) : type === 'step' ? (\n          <Flex direction=\"column\" height=\"auto\" mr={4}>\n            <FlexItem shrink={0}>\n              {stub ? (\n                <Stub height={10} width={10} r={20} />\n              ) : (\n                <Card bg=\"#F5F5F5\" r=\"50%\" height={10} width={10}>\n                  <Flex align=\"center\" justify=\"center\" height={1} width={1}>\n                    <Text size={size} bold>\n                      {index + 1}\n                    </Text>\n                  </Flex>\n                </Card>\n              )}\n            </FlexItem>\n            {index + 1 === array.length ? null : (\n              <FlexItem\n                height={1}\n                minHeight={2}\n                align=\"center\"\n                justify=\"center\"\n                mt={2}\n              >\n                {stub ? (\n                  <Stub height={1} width=\"4px\" />\n                ) : (\n                  <Card bg=\"#F5F5F5\" height={1} width=\"4px\" />\n                )}\n              </FlexItem>\n            )}\n          </Flex>\n        ) : null)}\n        <FlexItem mt={ListItemYMargin[type]} width={1}>\n          {stub ? (\n            type === 'step' ? (\n              <Paragraph size={size} stub />\n            ) : (\n              <Box width={1} maxWidth={33}>\n                <Text display=\"block\" size={size} stub />\n              </Box>\n            )\n          ) : (typeof item === 'string' ? (\n            <Paragraph size={size}>{item}</Paragraph>\n          ) : (\n            item\n          ))}\n        </FlexItem>\n      </Flex>\n    ))}\n  </Box>\n)\n\nList.displayName = 'List'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/list/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/logo-block-link/LogoBlockLink.tsx",["840","841","842","843","844","845","846","847"],[],"import {\n  Block,\n  Box,\n  Flex,\n  FlexItem,\n  Image,\n  LinkControlProps,\n  Spacer,\n  Stub,\n} from '@qiwi/pijma-core'\nimport React, { FC, ReactElement, ReactNode } from 'react'\n\nimport { BlockLink } from '../link'\nimport { Paragraph, Text } from '../typography'\n\nexport interface LogoBlockLinkProps {\n  icon: ReactNode\n  title: string\n  description?: string\n  actions?: ReactElement[]\n  tabIndex?: number\n  href: LinkControlProps['href']\n  target?: LinkControlProps['target']\n  download?: LinkControlProps['download']\n  rel?: LinkControlProps['rel']\n  horizontal?: boolean\n  stub?: boolean\n  onClick?: LinkControlProps['onClick']\n  onFocus?: LinkControlProps['onFocus']\n  onBlur?: LinkControlProps['onBlur']\n}\n\nexport const LogoBlockLink: FC<LogoBlockLinkProps> = ({\n  title,\n  icon,\n  description,\n  actions,\n  ...props\n}) =>\n  props.stub ? (\n    <Block>\n      {props.horizontal ? (\n        <Box p={4}>\n          <Flex align=\"baseline\">\n            <FlexItem shrink={0} mr={4} width={12} height={12}>\n              <Stub height={12} width={12} r={24} />\n            </FlexItem>\n            <FlexItem align=\"center\" width={1}>\n              <Spacer size=\"xxs\">\n                <Box maxWidth={38} width={1} pr={4.5}>\n                  <Text display=\"block\" size=\"m\" stub />\n                </Box>\n                {description ? (\n                  <Box maxWidth={18} width={1}>\n                    <Text display=\"block\" size=\"s\" stub />\n                  </Box>\n                ) : null}\n              </Spacer>\n            </FlexItem>\n          </Flex>\n        </Box>\n      ) : (\n        <Box\n          p={4}\n          height={actions ? (description ? 56 : 50) : (description ? 43 : 42)}\n        >\n          <Box width={14} height={14} mt={2} mx=\"auto\">\n            <Stub height={14} width={14} r={28} />\n          </Box>\n          <Box mt={3} mx=\"auto\" maxWidth={38} width={1} pl={4.5} pr={4.5}>\n            <Text display=\"block\" size=\"s\" stub />\n          </Box>\n          {description ? (\n            <Box mt={1} mx=\"auto\" maxWidth={18} width={1}>\n              <Text display=\"block\" size=\"s\" stub />\n            </Box>\n          ) : null}\n        </Box>\n      )}\n    </Block>\n  ) : (\n    <BlockLink\n      title={title}\n      accent\n      tabIndex={props.tabIndex}\n      href={props.href}\n      target={props.target}\n      download={props.download}\n      rel={props.rel}\n      onClick={props.onClick}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n    >\n      {() =>\n        props.horizontal ? (\n          <Box p={4}>\n            <Flex align=\"baseline\">\n              <FlexItem shrink={0} mr={4} width={12} height={12}>\n                {typeof icon === 'string' ? (\n                  <Image src={icon} alt={title} width={12} height={12} />\n                ) : (\n                  icon\n                )}\n              </FlexItem>\n              <FlexItem align=\"center\">\n                <Spacer size=\"xxs\">\n                  <Paragraph\n                    clamp={description ? 1 : 2}\n                    color=\"default\"\n                    size=\"m\"\n                    bold\n                    children={title}\n                  />\n                  {description ? (\n                    <Paragraph\n                      clamp={1}\n                      color=\"support\"\n                      size=\"s\"\n                      children={description}\n                    />\n                  ) : null}\n                </Spacer>\n              </FlexItem>\n              {actions\n                ? actions.map((action, index) => (\n                    <FlexItem\n                      pl={index === 0 ? 2 : undefined}\n                      align=\"center\"\n                      ml={index !== 0 ? 3 : 'auto'}\n                      key={index}\n                      children={action}\n                    />\n                  ))\n                : null}\n            </Flex>\n          </Box>\n        ) : (\n          <Box\n            p={4}\n            height={actions ? (description ? 56 : 50) : (description ? 43 : 42)}\n          >\n            <Box width={14} height={14} mt={2} mx=\"auto\">\n              {typeof icon === 'string' ? (\n                <Image src={icon} alt={title} width={14} height={14} />\n              ) : (\n                icon\n              )}\n            </Box>\n            <Box mt={3} mx=\"auto\">\n              <Paragraph\n                clamp={description ? 2 : 3}\n                color=\"default\"\n                size=\"s\"\n                bold\n                align=\"center\"\n                children={title}\n              />\n            </Box>\n            {description ? (\n              <Box mt={1} mx=\"auto\">\n                <Paragraph\n                  clamp={1}\n                  color=\"support\"\n                  size=\"s\"\n                  align=\"center\"\n                  children={description}\n                />\n              </Box>\n            ) : null}\n            {actions ? (\n              <Flex mt={3} mx=\"auto\" align=\"baseline\" justify=\"center\">\n                {actions.map((action, index) => (\n                  <FlexItem\n                    ml={index !== 0 ? 3 : undefined}\n                    key={index}\n                    children={action}\n                  />\n                ))}\n              </Flex>\n            ) : null}\n          </Box>\n        )\n      }\n    </BlockLink>\n  )\n\nLogoBlockLink.displayName = 'LogoBlockLink'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/logo-block-link/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/logo-link/LogoLink.tsx",["848","849","850"],[],"import {\n  Box,\n  Flex,\n  FlexItem,\n  Image,\n  LinkControlProps,\n  Spacer,\n} from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nimport { SectionLink } from '../link'\nimport { Paragraph } from '../typography'\n\nexport interface LogoLinkProps {\n  icon: ReactNode\n  title: string\n  description?: string\n  tabIndex?: number\n  href: LinkControlProps['href']\n  target?: LinkControlProps['target']\n  download?: LinkControlProps['download']\n  rel?: LinkControlProps['rel']\n  horizontal?: boolean\n  onClick?: LinkControlProps['onClick']\n  onFocus?: LinkControlProps['onFocus']\n  onBlur?: LinkControlProps['onBlur']\n}\n\nexport const LogoLink: FC<LogoLinkProps> = ({\n  title,\n  icon,\n  description,\n  horizontal,\n  ...props\n}) => (\n  <SectionLink\n    href={props.href}\n    target={props.target}\n    download={props.download}\n    rel={props.rel}\n    onClick={props.onClick}\n    onFocus={props.onFocus}\n    onBlur={props.onBlur}\n  >\n    {() =>\n      horizontal ? (\n        <Box p={4}>\n          <Flex align=\"baseline\">\n            <FlexItem shrink={0} mr={4} width={12} height={12}>\n              {typeof icon === 'string' ? (\n                <Image src={icon} alt={title} width={12} height={12} />\n              ) : (\n                icon\n              )}\n            </FlexItem>\n            <FlexItem align=\"center\">\n              <Spacer size=\"xxs\">\n                <Paragraph\n                  clamp={description ? 1 : 2}\n                  color=\"default\"\n                  size=\"m\"\n                  bold\n                  children={title}\n                />\n                {description ? (\n                  <Paragraph\n                    clamp={1}\n                    color=\"support\"\n                    size=\"s\"\n                    children={description}\n                  />\n                ) : null}\n              </Spacer>\n            </FlexItem>\n          </Flex>\n        </Box>\n      ) : (\n        <Box p={4} height={38}>\n          <Box width={14} height={14} mx=\"auto\">\n            {typeof icon === 'string' ? (\n              <Image src={icon} alt={title} width={14} height={14} />\n            ) : (\n              icon\n            )}\n          </Box>\n          <Box mt={3}>\n            <Paragraph\n              clamp={description ? 2 : 3}\n              color=\"default\"\n              size=\"s\"\n              bold\n              align=\"center\"\n              children={title}\n            />\n          </Box>\n          {description ? (\n            <Box mt={1} mx=\"auto\">\n              <Paragraph\n                clamp={1}\n                color=\"support\"\n                size=\"s\"\n                align=\"center\"\n                children={description}\n              />\n            </Box>\n          ) : null}\n        </Box>\n      )\n    }\n  </SectionLink>\n)\n\nLogoLink.displayName = 'LogoLink'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/logo-link/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/markdown/Markdown.tsx",["851","852"],[],"import { Box, Image, MarkdownToJSX, styled } from '@qiwi/pijma-core'\nimport React, { Children, FC, Fragment, ReactNode } from 'react'\n\nimport { Link } from '../link'\nimport { List } from '../list'\nimport { Heading, Paragraph, Text } from '../typography'\n\nexport interface MarkdownProps {\n  size?: 's' | 'm' | 'l'\n  children: string\n}\n\nconst MarkdownBox = styled(Box)({\n  '&:nth-child(1)': {\n    marginTop: 0,\n  },\n})\n\nMarkdownBox.displayName = 'MarkdownBox'\n\nconst SizeMargin: { [size in NonNullable<SizeProps['size']>]: number } = {\n  s: 2,\n  m: 3,\n  l: 3,\n}\n\ninterface SizeProps {\n  size: 's' | 'm' | 'l'\n  children?: ReactNode\n}\n\nconst p: FC<SizeProps> = ({ children, size }) => (\n  <MarkdownBox mt={SizeMargin[size]}>\n    <Paragraph size={size} children={children} />\n  </MarkdownBox>\n)\n\np.displayName = 'p'\n\ninterface ImageProps extends SizeProps {\n  alt?: string\n  src: string\n}\n\nconst img: FC<ImageProps> = ({ src, alt }) => (\n  <Image src={src} alt={alt} width=\"auto\" height=\"auto\" />\n)\n\nimg.displayName = 'img'\n\ninterface LinkProps extends SizeProps {\n  title?: string\n  href?: string\n}\n\nconst a: FC<LinkProps> = ({ title, href, size, children }) => (\n  <Link title={title} href={href} size={size} children={children} />\n)\n\na.displayName = 'a'\n\nconst h1: FC<SizeProps> = ({ children }) => (\n  <MarkdownBox mt={6}>\n    <Heading size=\"1\" children={children} />\n  </MarkdownBox>\n)\n\nh1.displayName = 'h1'\n\nconst h2: FC<SizeProps> = ({ children }) => (\n  <MarkdownBox mt={6}>\n    <Heading size=\"2\" children={children} />\n  </MarkdownBox>\n)\n\nh2.displayName = 'h2'\n\nconst h3: FC<SizeProps> = ({ children }) => (\n  <MarkdownBox mt={5}>\n    <Heading size=\"3\" children={children} />\n  </MarkdownBox>\n)\n\nh3.displayName = 'h3'\n\nconst h4: FC<SizeProps> = ({ children }) => (\n  <MarkdownBox mt={4}>\n    <Heading size=\"4\" children={children} />\n  </MarkdownBox>\n)\n\nh4.displayName = 'h4'\n\nconst strong: FC<SizeProps> = ({ children }) => (\n  <Text bold children={children} />\n)\n\nstrong.displayName = 'strong'\n\nconst del: FC<SizeProps> = ({ children }) => (\n  <Text decoration=\"line-through\" children={children} />\n)\n\ndel.displayName = 'del'\n\nconst li: FC<SizeProps> = ({ size, children }) => (\n  <Fragment>\n    {Children.map(children, (child, i) => (\n      <MarkdownBox key={i} mt={SizeMargin[size]}>\n        {typeof child === 'string' ? (\n          <Paragraph key={i} size={size} children={child} />\n        ) : (\n          child\n        )}\n      </MarkdownBox>\n    ))}\n  </Fragment>\n)\n\nli.displayName = 'li'\n\nconst ul: FC<SizeProps> = ({ size, children }) => (\n  <MarkdownBox mt={SizeMargin[size]}>\n    <List size={size} type=\"bullet\" children={Children.toArray(children)} />\n  </MarkdownBox>\n)\n\nul.displayName = 'ul'\n\ninterface NumericListProps extends SizeProps {\n  start: number\n}\n\nconst ol: FC<NumericListProps> = ({ size, start, children }) => (\n  <MarkdownBox mt={SizeMargin[size]}>\n    <List\n      size={size}\n      type={start < 1000 ? 'number' : 'step'}\n      children={Children.toArray(children)}\n    />\n  </MarkdownBox>\n)\n\nol.displayName = 'ol'\n\nconst overrides: { [tag: string]: FC<any> } = {\n  p,\n  h1,\n  h2,\n  h3,\n  h4,\n  a,\n  ul,\n  ol,\n  li,\n  strong,\n  del,\n  img,\n}\n\nexport const Markdown: FC<MarkdownProps> = ({ size = 'm', children }) => (\n  <MarkdownToJSX\n    children={children}\n    options={{\n      overrides: Object.fromEntries(Object.keys(overrides).map(\n        ( tag) => [tag, {\n              component: overrides[tag],\n              props: {\n                size,\n              },\n            }],\n      )),\n    }}\n  />\n)\n\nMarkdown.displayName = 'Markdown'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/markdown/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/menu/MenuCaption.tsx",["853"],[],"import { Box } from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nimport { Caption } from '../typography'\n\ninterface MenuCaptionProps {\n  text: string\n}\n\nexport const MenuCaption: FC<MenuCaptionProps> = ({ text }) => (\n  <Box px={4} py={2}>\n    <Caption>{text}</Caption>\n  </Box>\n)\n\nMenuCaption.displayName = 'MenuCaption'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/menu/MenuContainer.tsx",["854"],[],"import { Box } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nexport interface MenuContainerProps {\n  children?: ReactNode\n}\n\nexport const MenuContainer: FC<MenuContainerProps> = ({ children }) => (\n  <Box py={2}>{children}</Box>\n)\n\nMenuContainer.displayName = 'MenuContainer'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/menu/MenuItem.tsx",["855","856","857","858","859","860"],[],"import {\n  Box,\n  Flex,\n  FlexItem,\n  Icon,\n  Image,\n  Section,\n  Stub,\n  Typo,\n} from '@qiwi/pijma-core'\nimport React, { forwardRef, ReactNode } from 'react'\n\nimport { Paragraph, Text } from '../typography'\n\nexport interface MenuItemProps {\n  text: string\n  notes?: string\n  icon?: ReactNode\n  submenu?: boolean\n  round?: boolean\n  hover?: boolean\n  active?: boolean\n  focus?: boolean\n  size?: 's' | 'm'\n  attention?: boolean\n  stub?: boolean\n}\n\nconst IconSize: Record<NonNullable<MenuItemProps['size']>, number> = {\n  s: 6,\n  m: 12,\n}\n\nexport const MenuItem = forwardRef<HTMLDivElement, MenuItemProps>(\n  (\n    {\n      text,\n      notes,\n      icon,\n      submenu = false,\n      round = false,\n      hover = false,\n      active = false,\n      focus = false,\n      size = 's',\n      attention = false,\n      stub = false,\n      ...props\n    },\n    ref,\n  ) => (\n    <Section\n      ref={ref}\n      active={active}\n      focus={focus}\n      hover={hover}\n      flat={!round}\n      {...props}\n    >\n      <Flex px={6} py={2} minHeight={14}>\n        {icon ? (\n          stub ? (\n            <FlexItem align={notes ? undefined : 'center'} shrink={0} mr={4}>\n              <Stub\n                r={IconSize[size] * 2}\n                width={IconSize[size]}\n                height={IconSize[size]}\n              />\n            </FlexItem>\n          ) : (\n            <FlexItem align={notes ? undefined : 'center'} shrink={0} mr={4}>\n              {typeof icon === 'string' ? (\n                <Image\n                  src={icon}\n                  width={IconSize[size]}\n                  height={IconSize[size]}\n                />\n              ) : (\n                icon\n              )}\n            </FlexItem>\n          )\n        ) : null}\n        <FlexItem align=\"center\" grow={1}>\n          <Flex justify=\"center\" direction=\"column\">\n            {stub ? (\n              <Box maxWidth={38} width={1}>\n                <Text display=\"block\" size=\"m\" stub />\n              </Box>\n            ) : (\n              <Paragraph clamp={icon && !notes ? 2 : undefined} bold>\n                {text}\n                {attention ? (\n                  <Typo\n                    as=\"span\"\n                    css={{ marginLeft: '2px' }}\n                    size={4}\n                    color=\"#ed4848\"\n                    height={2}\n                  >\n                    &bull;\n                  </Typo>\n                ) : null}\n              </Paragraph>\n            )}\n            {notes ? (\n              stub ? (\n                <Box mt={1} width={1} maxWidth={18}>\n                  <Text display=\"block\" size=\"s\" stub />\n                </Box>\n              ) : (\n                <Box mt={1}>\n                  <Paragraph size=\"s\" color=\"support\">\n                    {notes}\n                  </Paragraph>\n                </Box>\n              )\n            ) : null}\n          </Flex>\n        </FlexItem>\n        {submenu ? (\n          <FlexItem align=\"center\" shrink={0} width={6} height={6} ml={3}>\n            <Icon name=\"angle-right\" />\n          </FlexItem>\n        ) : null}\n      </Flex>\n    </Section>\n  ),\n)\n\nMenuItem.displayName = 'MenuItem'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/menu/MenuLink.tsx",["861","862","863"],[],"import { LinkControl, LinkControlProps, Lnk, styled } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nimport { MenuItem } from '../menu'\n\nexport interface MenuLinkProps {\n  title: string\n  notes?: string\n  icon?: ReactNode\n  submenu?: boolean\n  active?: boolean\n  tabIndex?: number\n  href?: LinkControlProps['href']\n  target?: LinkControlProps['target']\n  download?: LinkControlProps['download']\n  rel?: LinkControlProps['rel']\n  size?: 's' | 'm'\n  attention?: boolean\n  stub?: boolean\n  onClick?: LinkControlProps['onClick']\n  onFocus?: LinkControlProps['onFocus']\n  onBlur?: LinkControlProps['onBlur']\n}\n\nconst MenuItemLnk = styled(Lnk)().withComponent(MenuItem)\n\nMenuItemLnk.displayName = 'MenuItemLnk'\n\nexport const MenuLink: FC<MenuLinkProps> = (props) =>\n  props.stub ? (\n    <MenuItem\n      stub\n      text={props.title}\n      notes={props.notes}\n      icon={props.icon}\n      submenu={props.submenu}\n      size={props.size}\n    />\n  ) : (\n    <LinkControl\n      href={props.href}\n      target={props.target}\n      download={props.download}\n      rel={props.rel}\n      onClick={props.onClick}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      children={(renderProps) => (\n        <MenuItemLnk\n          notes={props.notes}\n          text={props.title}\n          icon={props.icon}\n          submenu={props.submenu}\n          active={props.active ? props.active : renderProps.active}\n          hover={renderProps.hover}\n          focus={renderProps.focus}\n          tabIndex={props.tabIndex}\n          href={props.href}\n          title={props.href ? props.title : undefined}\n          target={props.href ? props.target : undefined}\n          download={props.href ? props.download : undefined}\n          rel={props.href ? props.rel : undefined}\n          size={props.size}\n          attention={props.attention}\n          onClick={renderProps.onClick}\n          onFocus={renderProps.onFocus}\n          onBlur={renderProps.onBlur}\n          onMouseEnter={renderProps.onMouseEnter}\n          onMouseLeave={renderProps.onMouseLeave}\n          onMouseUp={renderProps.onMouseUp}\n          onMouseDown={renderProps.onMouseDown}\n        />\n      )}\n    />\n  )\n\nMenuLink.displayName = 'MenuLink'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/menu/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/modal/SimpleModal.tsx",["864","865"],[],"import {\n  Box,\n  Card,\n  css,\n  Icon,\n  Modal,\n  ModalProps,\n  Pos,\n  SimpleTransition,\n} from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nconst ContentTransition: ModalProps['transition'] = (props) => (\n  <SimpleTransition\n    {...props}\n    timeout={{\n      enter: 370,\n      exit: 250,\n    }}\n    enterClassName={(timeout: number) =>\n      css({\n        opacity: 1,\n        transform: 'translate3d(0, 0, 0)',\n        transition: `opacity ${timeout}ms ease, transform ${timeout}ms ease`,\n      })\n    }\n    exitClassName={(timeout: number) =>\n      css({\n        opacity: 0,\n        transform: 'translate3d(0, -100%, 0)',\n        transition: `opacity ${timeout}ms ease, transform ${timeout}ms ease`,\n      })\n    }\n  />\n)\n\nContentTransition.displayName = 'ContentTransition'\n\nconst BackdropTransition: ModalProps['backdropTransition'] = (props) => (\n  <SimpleTransition\n    {...props}\n    timeout={{\n      enter: 370,\n      exit: 250,\n    }}\n    enterClassName={(timeout: number) =>\n      css({\n        opacity: 1,\n        transition: `opacity ${timeout}ms ease`,\n      })\n    }\n    exitClassName={(timeout: number) =>\n      css({\n        opacity: 0,\n        transition: `opacity ${timeout}ms ease`,\n      })\n    }\n  />\n)\n\nBackdropTransition.displayName = 'BackdropTransition'\n\ninterface SimpleModalProps {\n  show: boolean\n  closable?: boolean\n  escapeClose?: boolean\n  backdropClose?: boolean\n  stub?: boolean\n  zIndex?: number\n  onShow?: () => void\n  onHide?: () => void\n  children?: ReactNode\n}\n\nexport const SimpleModal: FC<SimpleModalProps> = ({\n  stub,\n  children,\n  show,\n  escapeClose,\n  onShow,\n  onHide,\n  backdropClose,\n  zIndex = 10_050,\n  closable,\n}) =>\n  stub ? (\n    <Box display=\"none\">{children}</Box>\n  ) : (\n    <Modal\n      show={show}\n      keyboard={escapeClose}\n      onShow={onShow}\n      onHide={onHide}\n      onBackdropClick={backdropClose ? onHide : undefined}\n      transition={ContentTransition}\n      backdropTransition={BackdropTransition}\n      renderBackdrop={(backdropProps) => (\n        <Pos\n          type=\"fixed\"\n          zIndex=\"auto\"\n          top={0}\n          right={0}\n          bottom={0}\n          left={0}\n          {...backdropProps}\n        >\n          <Card bg=\"rgba(255, 255, 255, 0.96)\" width={1} height={1} />\n        </Pos>\n      )}\n      renderDialog={(dialogProps) => (\n        <Pos\n          type=\"fixed\"\n          top={0}\n          bottom={0}\n          left={0}\n          right={0}\n          height=\"100%\"\n          overflow=\"auto\"\n          zIndex={zIndex}\n          {...dialogProps}\n        >\n          <Pos role=\"document\" type=\"relative\" width={1} height={1}>\n            <Card bg=\"#fff\" p={6} width={1} height={1} overflow=\"auto\">\n              {closable && onHide ? (\n                <Pos\n                  aria-label=\"close\"\n                  type=\"absolute\"\n                  top={6}\n                  right={6}\n                  width={6}\n                  height={6}\n                  cursor=\"pointer\"\n                  onClick={onHide}\n                  children={<Icon name=\"cross\" color=\"#000\" />}\n                />\n              ) : null}\n              {children}\n            </Card>\n          </Pos>\n        </Pos>\n      )}\n    />\n  )\n\nSimpleModal.displayName = 'SimpleModal'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/modal/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/nav-link/NavLink.tsx",["866"],[],"import { LinkControl, Stub, TypoLnk } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nexport interface NavLinkProps {\n  onClick?: (\n    href?: string,\n    target?: string,\n    download?: string | boolean,\n    rel?: string,\n  ) => void\n  onFocus?: () => void\n  onBlur?: () => void\n  tabIndex?: number\n  href?: string\n  target?: string\n  download?: string | boolean\n  rel?: string\n  title?: string\n  stub?: boolean\n  children?: ReactNode\n}\n\nexport const NavLink: FC<NavLinkProps> = (props) =>\n  props.stub ? (\n    <Stub top={1.5} bottom={1.5} height={2} width={1} />\n  ) : (\n    <LinkControl\n      onClick={props.onClick}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      href={props.href}\n      target={props.target}\n      download={props.download}\n      rel={props.rel}\n      children={(renderProps) => (\n        <TypoLnk\n          tabIndex={props.tabIndex}\n          href={props.href}\n          onClick={renderProps.onClick}\n          onFocus={renderProps.onFocus}\n          onBlur={renderProps.onBlur}\n          onMouseEnter={renderProps.onMouseEnter}\n          onMouseLeave={renderProps.onMouseLeave}\n          onMouseUp={renderProps.onMouseUp}\n          onMouseDown={renderProps.onMouseDown}\n          color={renderProps.hover || renderProps.focus ? '#000' : '#666'}\n          transition=\"all 100ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n          cursor=\"pointer\"\n          decoration=\"none\"\n          target={props.target}\n          download={props.download}\n          rel={props.rel}\n          title={props.title}\n          size={3.5}\n          height={5}\n          weight={300}\n          children={props.children}\n        />\n      )}\n    />\n  )\n\nNavLink.displayName = 'NavLink'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/nav-link/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/notice/Notice.tsx",["867","868","869","870"],[],"import { Flex, FlexItem, Spacer } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nimport { Heading, Paragraph } from '../typography/'\n\nexport interface NoticeProps {\n  icon: ReactNode\n  title?: ReactNode\n  children?: ReactNode\n}\n\nexport const Notice: FC<NoticeProps> = ({ icon, title, children }) => (\n  <Flex>\n    <FlexItem shrink={0} basis={6} mr={title ? 4 : 2} children={icon} />\n    {title || children ? (\n      <FlexItem>\n        <Spacer size=\"xs\">\n          {title ? <Heading size=\"3\" children={title} /> : null}\n          {children ? <Paragraph children={children} /> : null}\n        </Spacer>\n      </FlexItem>\n    ) : null}\n  </Flex>\n)\n\nNotice.displayName = 'Notice'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/notice/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/oops/Oops.tsx",["871","872","873"],[],"import { Card, Flex, FlexItem, Typo } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nimport { Heading, Paragraph } from '../typography'\n\nexport interface OopsProps {\n  logo?: ReactNode\n  error: ReactNode\n  title: string\n  content: ReactNode\n  footer?: ReactNode\n}\n\nexport const Oops: FC<OopsProps> = ({\n  logo,\n  error,\n  title,\n  content,\n  footer,\n}) => (\n  <Card px={6} minHeight=\"100%\" bg=\"#fff\">\n    <Flex align=\"center\" direction=\"column\">\n      {logo ? <FlexItem my={6} shrink={0} children={logo} /> : null}\n      <FlexItem my={6}>\n        {typeof error === 'string' ? (\n          <Typo\n            align=\"center\"\n            as=\"p\"\n            css={{\n              overflow: 'unset',\n              fontSize: '152px',\n              fontWeight: 900,\n              color: '#fff',\n              textShadow: '0 12px 36px rgba(0, 0, 0, 0.1)',\n            }}\n            children={error}\n          />\n        ) : (\n          error\n        )}\n      </FlexItem>\n      <FlexItem my={2}>\n        <Heading align=\"center\" size=\"1\" children={title} />\n      </FlexItem>\n      <FlexItem my={4}>\n        {typeof content === 'string' ? (\n          <Paragraph align=\"center\" children={content} />\n        ) : (\n          content\n        )}\n      </FlexItem>\n      {footer ? (\n        <FlexItem\n          my={6}\n          children={\n            typeof footer === 'string' ? (\n              <Paragraph align=\"center\" color=\"support\" children={footer} />\n            ) : (\n              footer\n            )\n          }\n        />\n      ) : null}\n    </Flex>\n  </Card>\n)\n\nOops.displayName = 'Oops'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/oops/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/pagination/Pagination.tsx",["874"],[],"import { Card, Icon, PaginationControl } from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nimport { Text } from '../typography'\nimport { PaginationLink } from './PaginationLink'\n\nexport interface PaginationProps {\n  total: number\n  active: number\n  count?: number\n  shadowed?: boolean\n  href?: (page: number) => string\n  stub?: boolean\n  onChange?: (index: number) => void\n}\n\nexport const Pagination: FC<PaginationProps> = ({\n  total,\n  count = 3,\n  shadowed = false,\n  active,\n  href,\n  stub = false,\n  onChange,\n}) => (\n  <PaginationControl\n    total={total}\n    count={count}\n    active={active}\n    href={href}\n    onChange={onChange}\n    children={(renderProps) => (\n      <Card\n        bg=\"#fff\"\n        s={shadowed ? '0 1px 2px 0 rgba(0,0,0,0.12)' : '0 0 0 1px #e6e6e6'}\n        height={12}\n        display=\"inline-flex\"\n        r={10}\n        overflow=\"hidden\"\n      >\n        <PaginationLink\n          page={renderProps.prev}\n          disabled={renderProps.active === 1}\n          href={href ? href(renderProps.prev) : undefined}\n          stub={stub}\n          onClick={renderProps.onPageClick(\n            renderProps.prev,\n            renderProps.active === 1,\n          )}\n          children={({ disabled }) => (\n            <Icon name=\"angle-small-left\" color={disabled ? '#ccc' : '#000'} />\n          )}\n        />\n        {renderProps.pages.map((page) => (\n          <PaginationLink\n            key={page}\n            page={page}\n            disabled={false}\n            href={href ? href(page) : undefined}\n            stub={stub}\n            onClick={renderProps.onPageClick(page, false)}\n            children={() => (\n              <Text\n                bold={false}\n                size=\"m\"\n                color={renderProps.active === page ? 'warning' : 'default'}\n                children={page}\n              />\n            )}\n          />\n        ))}\n        <PaginationLink\n          page={renderProps.next}\n          disabled={renderProps.active === renderProps.total}\n          href={href ? href(renderProps.next) : undefined}\n          stub={stub}\n          onClick={renderProps.onPageClick(\n            renderProps.next,\n            renderProps.active === renderProps.total,\n          )}\n          children={({ disabled }) => (\n            <Icon name=\"angle-small-right\" color={disabled ? '#ccc' : '#000'} />\n          )}\n        />\n      </Card>\n    )}\n  />\n)\n\nPagination.displayName = 'Pagination'\n\nPagination.defaultProps = {\n  shadowed: false,\n  count: 3,\n  stub: false,\n}\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/pagination/PaginationLink.tsx",["875","876"],[],"import { CardLnk, Flex, LinkControl, Stub, Value } from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nexport interface PaginationLinkProps {\n  page: number\n  disabled: boolean\n  width?: Value\n  href?: string\n  stub?: boolean\n  onClick?: (\n    href?: string,\n    target?: string,\n    download?: string | boolean,\n    rel?: string,\n  ) => void\n  children: FC<{\n    disabled: boolean\n    hover: boolean\n    focus: boolean\n  }>\n}\n\nexport const PaginationLink: FC<PaginationLinkProps> = (props) => (\n  <LinkControl\n    href={props.stub ? undefined : props.href}\n    onClick={props.stub ? undefined : props.onClick}\n    children={(renderProps) => (\n      <CardLnk\n        as={props.stub ? 'div' : 'a'}\n        transition=\"all 100ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n        height={12}\n        width={props.width}\n        display=\"inline-flex\"\n        cursor={props.stub || props.disabled ? 'default' : 'pointer'}\n        s=\"1px 0 0 #e6e6e6\"\n        href={props.stub ? undefined : props.href}\n        onClick={props.stub ? undefined : renderProps.onClick}\n        onFocus={props.stub ? undefined : renderProps.onFocus}\n        onBlur={props.stub ? undefined : renderProps.onBlur}\n        onMouseEnter={props.stub ? undefined : renderProps.onMouseEnter}\n        onMouseLeave={props.stub ? undefined : renderProps.onMouseLeave}\n        onMouseUp={props.stub ? undefined : renderProps.onMouseUp}\n        onMouseDown={props.stub ? undefined : renderProps.onMouseDown}\n      >\n        <Flex\n          align=\"center\"\n          justify=\"center\"\n          width={1}\n          height={1}\n          children={\n            props.stub ? (\n              <Stub height={6} width={6} r={12} />\n            ) : (\n              props.children({\n                disabled: props.disabled || false,\n                hover: renderProps.hover,\n                focus: renderProps.focus,\n              })\n            )\n          }\n        />\n      </CardLnk>\n    )}\n  />\n)\n\nPaginationLink.displayName = 'PaginationLink'\n\nPaginationLink.defaultProps = {\n  width: 12,\n}\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/pagination/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/password-field/PasswordField.tsx",["877","878","879"],[],"import {\n  BasicInput,\n  Box,\n  Icon,\n  InputField,\n  PasswordFieldControl,\n} from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nimport { PasswordFieldProps } from './PasswordFieldProps'\n\nexport const PasswordField: FC<PasswordFieldProps> = (props) => (\n  <PasswordFieldControl\n    onChange={props.onChange}\n    onFocus={props.onFocus}\n    onBlur={props.onBlur}\n    onKeyDown={props.onKeyDown}\n    onKeyUp={props.onKeyUp}\n    onToggle={props.onToggle}\n    children={(renderProps) => (\n      <InputField\n        title={props.title}\n        active={renderProps.focused || !!props.value || !!props.placeholder}\n        input={\n          <BasicInput\n            type={props.viewed && !renderProps.hidden ? 'text' : 'password'}\n            value={props.value}\n            name={props.name}\n            autoComplete={props.autoComplete}\n            autoFocus={props.autoFocus}\n            placeholder={props.placeholder}\n            inputMode={props.inputMode}\n            disabled={props.disabled}\n            pr={props.hint || props.viewed ? 7 : undefined}\n            error={!!props.error}\n            focused={renderProps.focused}\n            maxLength={props.maxLength}\n            mask={props.mask}\n            pipe={props.pipe}\n            onChange={renderProps.onChange}\n            onFocus={renderProps.onFocus}\n            onBlur={renderProps.onBlur}\n            onKeyDown={renderProps.onKeyDown}\n            onKeyUp={renderProps.onKeyUp}\n          />\n        }\n        hint={\n          props.viewed ? (\n            <Box\n              display=\"inline-block\"\n              width={1}\n              height={1}\n              onClick={renderProps.onToggle}\n              children={\n                <Icon\n                  name={renderProps.hidden ? 'eye-closed' : 'eye-opened'}\n                  color={props.disabled ? '#666' : '#000'}\n                />\n              }\n            />\n          ) : (props.hint ? (\n            props.hint\n          ) : null)\n        }\n        error={props.error}\n        help={props.help}\n        action={props.action}\n      />\n    )}\n  />\n)\n\nPasswordField.displayName = 'PasswordField'\n\nPasswordField.defaultProps = {\n  tabIndex: 0,\n  viewed: true,\n}\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/password-field/PasswordFieldProps.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/password-field/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/phone-field/PhoneField.tsx",["880","881","882"],[],"import {\n  BasicInput,\n  Box,\n  Card,\n  CardPos,\n  Flag,\n  Flex,\n  FlexItem,\n  InputField,\n  MenuControl,\n  PhoneFieldControl,\n  Pos,\n} from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nimport { DropUp } from '../drop-up'\nimport { Paragraph } from '../typography'\nimport { PhoneFieldProps } from './PhoneFieldProps'\n\nexport const PhoneField: FC<PhoneFieldProps> = ({\n  tabIndex = 0,\n  code = 'ru',\n  ...props\n}) =>\n  props.stub ? (\n    <InputField\n      stub\n      active={false}\n      input={false}\n      title={props.title}\n      help={props.help}\n      hint={props.hint}\n      icon=\"icon\"\n    />\n  ) : (\n    <PhoneFieldControl\n      value={props.value}\n      countries={props.countries}\n      onChange={props.onChange}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      children={(renderProps) => (\n        <MenuControl\n          count={props.countries.length}\n          onSelect={renderProps.onSelectCountry}\n          children={(menuRenderProps) => (\n            <Pos type=\"relative\" ref={renderProps.containerRef}>\n              <InputField\n                title={props.title}\n                active={\n                  renderProps.focused || !!props.value || !!props.placeholder\n                }\n                input={\n                  <BasicInput\n                    ref={renderProps.inputRef}\n                    type=\"tel\"\n                    value={renderProps.value}\n                    name={props.name}\n                    mask={renderProps.mask}\n                    autoComplete={props.autoComplete}\n                    autoFocus={props.autoFocus}\n                    placeholder={props.placeholder}\n                    inputMode={props.inputMode}\n                    disabled={props.disabled}\n                    pr={props.hint ? 7 : undefined}\n                    pl={9}\n                    error={!!props.error}\n                    focused={renderProps.focused}\n                    maxLength={props.maxLength}\n                    onChange={renderProps.onChange}\n                    onFocus={renderProps.onFocus}\n                    onBlur={renderProps.onBlur}\n                    onKeyDown={\n                      renderProps.showCountries\n                        ? menuRenderProps.onKeyDown\n                        : undefined\n                    }\n                  />\n                }\n                hint={props.hint}\n                icon={\n                  <Box\n                    cursor=\"pointer\"\n                    width={6}\n                    height={4}\n                    my={1}\n                    onClick={renderProps.onFlagClick}\n                    onMouseDown={renderProps.onFlagMouseDown}\n                    children={<Flag code={renderProps.code || code} />}\n                  />\n                }\n                error={props.error}\n                help={props.help}\n                action={props.action}\n              />\n              <DropUp\n                title=\"Код страны\"\n                show={renderProps.showCountries}\n                autoFocus\n                onKeyDown={menuRenderProps.onKeyDown}\n                onHide={renderProps.onCountriesHide}\n              >\n                <CardPos\n                  ref={menuRenderProps.containerRef}\n                  type=\"relative\"\n                  height={1}\n                  overflow=\"auto\"\n                >\n                  {menuRenderProps.items.map((country, index) => (\n                    <Card\n                      key={index}\n                      ref={country.ref}\n                      width={1}\n                      px={6}\n                      cursor=\"pointer\"\n                      bg={\n                        country.selected\n                          ? '#E6E6E6'\n                          : (country.focused\n                          ? '#F5F5F5'\n                          : '#FFF')\n                      }\n                      onClick={country.onClick}\n                      onMouseEnter={country.onMouseEnter}\n                    >\n                      <Flex py={3} align=\"center\">\n                        <FlexItem shrink={1} mr={3}>\n                          <Box width={6} height={4} my={1}>\n                            <Flag code={props.countries[index].code} />\n                          </Box>\n                        </FlexItem>\n                        <FlexItem width={16} shrink={1}>\n                          <Paragraph bold>\n                            {`+${props.countries[index].mask.replace(\n                              /\\D/g,\n                              '',\n                            )}`}\n                          </Paragraph>\n                        </FlexItem>\n                        <Paragraph bold>\n                          {props.countries[index].name}\n                        </Paragraph>\n                      </Flex>\n                    </Card>\n                  ))}\n                </CardPos>\n              </DropUp>\n            </Pos>\n          )}\n        />\n      )}\n    />\n  )\n\nPhoneField.displayName = 'PhoneField'\n\nPhoneField.defaultProps = {\n  tabIndex: 0,\n  code: 'ru',\n}\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/phone-field/PhoneFieldProps.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/phone-field/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/progress-bar/ProgressBar.tsx",["883"],[],"import { Card, Stub } from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nexport interface ProgressBarProps {\n  value: number\n  disabled?: boolean\n  stub?: boolean\n}\n\nexport const ProgressBar: FC<ProgressBarProps> = ({\n  value,\n  disabled = false,\n  stub = false,\n}) =>\n  stub ? (\n    <Stub height={6} width={1} r={12} />\n  ) : (\n    <Card bg=\"#f5f5f5\" height={6} r={12} p={1}>\n      <Card\n        bg={disabled ? '#ccc' : 'linear-gradient(268deg, #ff8c00 99%, #ff7700)'}\n        height={4}\n        width={value}\n        transition=\"width 300ms cubic-bezier(0.4, 0.0, 0.2, 1)\"\n        minWidth={4}\n        r={8}\n      />\n    </Card>\n  )\n\nProgressBar.displayName = 'ProgressBar'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/progress-bar/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/radio-field/RadioField.tsx",["884","885","886","887","888","889"],[],"import {\n  Box,\n  Flex,\n  OptionControl,\n  OptionField,\n  OptionFieldItem,\n  Radio,\n  RadioControl,\n  Spacer,\n  Stub,\n} from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nimport { RadioFieldOptionModel } from './RadioFieldOptionModel'\nimport { RadioFieldProps } from './RadioFieldProps'\n\nexport const RadioField: FC<\n  RadioFieldProps<RadioFieldOptionModel<any>, any>\n> = (props) =>\n  props.stub ? (\n    <Box maxHeight={1}>\n      <Stub width={24} height={3} top={2} bottom={4} />\n      <Spacer size=\"s\">\n        {(Array.isArray(props.stub) ? props.stub : [33, 38, 30]).map(\n          (width: number, id: number) => (\n            <Flex key={id} align=\"center\">\n              <Stub width={5} height={5} right={3} left={0.5} r={10} />\n              <Box width={width} maxWidth={1}>\n                <Stub width={1} height={2} top={2} bottom={2} />\n              </Box>\n            </Flex>\n          ),\n        )}\n      </Spacer>\n    </Box>\n  ) : (\n    <RadioControl<RadioFieldOptionModel<any>, any>\n      tabIndex={props.tabIndex}\n      options={props.options}\n      value={props.value}\n      equals={props.equals}\n      onChange={props.onChange}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      children={(renderProps) => (\n        <OptionField\n          title={props.title}\n          hint={props.hint}\n          help={props.help}\n          tabIndex={renderProps.tabIndex}\n          autoFocus={props.autoFocus}\n          onFocus={renderProps.onFocus}\n          onBlur={renderProps.onBlur}\n          onKeyDown={renderProps.onKeyDown}\n          children={renderProps.options.map((option, index) => (\n            <OptionControl<any>\n              key={index}\n              disabled={option.disabled}\n              value={option.value}\n              onClick={option.onClick}\n              onMouseEnter={option.onMouseEnter}\n              onMouseLeave={renderProps.onMouseLeave}\n              children={(renderOptionProps) => (\n                <OptionFieldItem\n                  disabled={option.disabled}\n                  icon={\n                    <Box width={6}>\n                      <Radio\n                        disabled={option.disabled}\n                        checked={option.checked}\n                        focused={option.focused}\n                      />\n                    </Box>\n                  }\n                  label={option.label}\n                  description={option.description}\n                  onClick={renderOptionProps.onClick}\n                  onMouseEnter={renderOptionProps.onMouseEnter}\n                  onMouseLeave={renderOptionProps.onMouseLeave}\n                />\n              )}\n            />\n          ))}\n        />\n      )}\n    />\n  )\n\nRadioField.displayName = 'RadioField'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/radio-field/RadioFieldOptionModel.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/radio-field/RadioFieldProps.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/radio-field/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/rating/Rating.tsx",["890","891"],[],"import { Flex, FlexItem, Icon, RatingControl, Stub } from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nexport interface RatingProps {\n  value?: number\n  size?: 's' | 'm'\n  disabled?: boolean\n  count?: number\n  stub?: boolean\n  onChange?: (value: number) => void\n}\n\nconst RatingSize: Record<NonNullable<RatingProps['size']>, number> = {\n  s: 6,\n  m: 12,\n}\n\nconst RatingIndent: Record<NonNullable<RatingProps['size']>, number> = {\n  s: 2,\n  m: 5,\n}\n\nexport const Rating: FC<RatingProps> = ({\n  value = 0,\n  size = 'm',\n  disabled = false,\n  count = 5,\n  stub = false,\n  onChange,\n}) =>\n  stub ? (\n    <Flex\n      justify=\"space-between\"\n      maxWidth={count * RatingSize[size] + (count - 1) * RatingIndent[size]}\n      width={1}\n    >\n      {new Array(count).fill(1).map((_, index) => (\n        <FlexItem key={index}>\n          <Stub height={RatingSize[size]} width={RatingSize[size]} r=\"50%\" />\n        </FlexItem>\n      ))}\n    </Flex>\n  ) : (\n    <RatingControl\n      value={value}\n      count={count}\n      disabled={disabled}\n      onChange={onChange}\n      children={(renderProps) => (\n        <Flex\n          justify=\"space-between\"\n          maxWidth={count * RatingSize[size] + (count - 1) * RatingIndent[size]}\n          width={1}\n        >\n          {renderProps.items.map((item, index) => (\n            <FlexItem\n              key={index}\n              onClick={item.onClick}\n              onMouseMove={item.onMouseEnter}\n              onMouseOut={item.onMouseLeave}\n            >\n              <Icon\n                name=\"star-solid\"\n                size={RatingSize[size]}\n                color={item.active ? '#ff8c00' : '#cccccc'}\n              />\n            </FlexItem>\n          ))}\n        </Flex>\n      )}\n    />\n  )\n\nRating.displayName = 'Rating'\n\nRating.defaultProps = {\n  value: 0,\n  size: 'm',\n  disabled: false,\n  count: 5,\n  stub: false,\n}\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/rating/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/select-field/SelectField.tsx",["892","893","894"],[],"import {\n  Card,\n  CardPos,\n  Icon,\n  InputField,\n  MenuControl,\n  OptionModel,\n  Pos,\n  SelectFieldControl,\n  SelectInput,\n  styled,\n} from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nimport { DropUp } from '../drop-up'\nimport { MenuItem } from '../menu'\n\nconst CardItem = styled(Card)().withComponent(MenuItem)\n\nCardItem.displayName = 'CardItem'\n\nexport interface SelectFieldProps<I extends OptionModel<V>, V> {\n  items: I[]\n  title: string\n  value: V\n  stub?: boolean\n  tabIndex?: number\n  error?: ReactNode\n  disabled?: boolean\n  name?: string\n  autoFocus?: boolean\n  onChange: (value: V) => void\n  equals?: (a: V, b: V) => boolean\n  autoComplete?: boolean\n  onFocus?: () => void\n  onBlur?: () => void\n  onHide?: () => void\n}\n\nexport interface SelectFieldItemModel<V> extends OptionModel<V> {\n  text: string\n}\n\nexport const SelectField: FC<\n  SelectFieldProps<SelectFieldItemModel<any>, any>\n> = (props) =>\n  props.stub ? (\n    <InputField\n      active={false}\n      input={false}\n      title={props.title}\n      error={props.error}\n      stub\n    />\n  ) : (\n    <SelectFieldControl\n      value={props.value}\n      items={props.items}\n      disabled={props.disabled}\n      onChange={props.onChange}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      onHide={props.onHide}\n      equals={props.equals}\n      children={(renderProps) => (\n        <MenuControl\n          count={props.items.length}\n          selected={renderProps.select}\n          onKeyDown={renderProps.onKeyDown}\n          onSelect={renderProps.onItemSelect}\n          children={(menuRenderProps) => (\n            <CardPos type=\"relative\" width={1}>\n              <Pos\n                type=\"absolute\"\n                top={4}\n                right={0}\n                children={<Icon name=\"angle-down\" color=\"#000\" />}\n                transform={`rotate(${renderProps.show ? 180 : 0}deg)`}\n                transition=\"transform 0.3s cubic-bezier(0.4, 0.0, 0.2, 1)\"\n              />\n              <InputField\n                title={props.title}\n                active={renderProps.select !== undefined}\n                error={props.error}\n                input={\n                  <SelectInput\n                    value={\n                      renderProps.select !== undefined &&\n                      props.items[renderProps.select]\n                        ? props.items[renderProps.select].text\n                        : ''\n                    }\n                    focused={renderProps.focused}\n                    error={!!props.error}\n                    tabIndex={props.tabIndex}\n                    disabled={props.disabled}\n                    autoComplete={props.autoComplete}\n                    autoFocus={props.autoFocus}\n                    name={props.name}\n                    onFocus={renderProps.onFocus}\n                    onBlur={renderProps.onMobileBlur}\n                    onKeyDown={renderProps.onKeyDown}\n                    onClick={renderProps.onActive}\n                  />\n                }\n              />\n              <DropUp\n                title={props.title}\n                show={renderProps.show}\n                onHide={renderProps.onHide}\n                onKeyDown={menuRenderProps.onKeyDown}\n              >\n                <CardPos\n                  height={1}\n                  width={1}\n                  ref={renderProps.modalRef}\n                  pt={-20}\n                >\n                  <CardPos\n                    type=\"relative\"\n                    s=\"0 20px 64px 0 rgba(0, 0, 0, 0.16)\"\n                    bg=\"#fff\"\n                    height={1}\n                    pt={3}\n                    pb={3}\n                    ref={menuRenderProps.containerRef}\n                    overflow=\"auto\"\n                  >\n                    {menuRenderProps.items.map((item, key) => (\n                      <CardItem\n                        key={key}\n                        ref={item.ref}\n                        cursor=\"pointer\"\n                        text={props.items[key].text}\n                        hover={item.focused}\n                        active={item.selected}\n                        focus={item.selected}\n                        onClick={item.onClick}\n                        onMouseEnter={item.onMouseEnter}\n                      />\n                    ))}\n                  </CardPos>\n                </CardPos>\n              </DropUp>\n            </CardPos>\n          )}\n        />\n      )}\n    />\n  )\n\nSelectField.displayName = 'SelectField'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/select-field/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/status/Status.tsx",["895","896","897","898","899","900"],[],"import { Flex, FlexItem } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nimport { Heading, Paragraph } from '../typography'\n\nexport interface StatusProps {\n  icon?: ReactNode\n  title?: string\n  actions?: ReactNode\n  content?: ReactNode\n  children?: ReactNode\n}\n\nexport const Status: FC<StatusProps> = ({\n  icon,\n  title,\n  actions,\n  content,\n  children,\n}) => (\n  <Flex align=\"center\" direction=\"column\">\n    {icon ? <FlexItem height={16} width={16} mb={6} children={icon} /> : null}\n    {title ? <Heading align=\"center\" size=\"4\" children={title} /> : null}\n    {content ? (\n      <FlexItem width={1} mt={title ? 2 : 0}>\n        {typeof content === 'string' ? (\n          <Paragraph align=\"center\" size=\"m\" children={content} />\n        ) : (\n          content\n        )}\n      </FlexItem>\n    ) : null}\n    {actions ? (\n      <FlexItem width={1} mt={content || title ? 4 : 0} children={actions} />\n    ) : null}\n    {children ? <FlexItem width={1} mt={2} children={children} /> : null}\n  </Flex>\n)\n\nStatus.displayName = 'Status'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/status/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/suggest-field/SuggestField.tsx",["901","902","903","904","905","906","907","908","909"],[],"import {\n  BasicInput,\n  Box,\n  Card,\n  Image,\n  InputField,\n  MenuControl,\n  Pos,\n  Spacer,\n  styled,\n  SuggestControl,\n} from '@qiwi/pijma-core'\nimport React, { Fragment, isValidElement } from 'react'\n\nimport { InputModal } from '../input-modal'\nimport { Link } from '../link'\nimport { Markdown } from '../markdown'\nimport { MenuItem } from '../menu'\nimport { Paragraph } from '../typography'\nimport { SuggestFieldOptionModel } from './SuggestFieldOptionModel'\nimport { SuggestFieldProps } from './SuggestFieldProps'\n\nconst CardItem = styled(Card)().withComponent(MenuItem)\n\nCardItem.displayName = 'CardItem'\n\nexport const SuggestField = <V extends {}>({\n  equals = (a: V, b: V) => a === b,\n  ...props\n}: SuggestFieldProps<SuggestFieldOptionModel<V>, V>) =>\n  props.stub ? (\n    <InputField\n      stub\n      input={false}\n      active={false}\n      title={props.title}\n      help={props.help}\n      hint={props.hint}\n    />\n  ) : (\n    <SuggestControl<V, SuggestFieldOptionModel<V>>\n      value={props.value}\n      suggest={props.suggest}\n      items={props.items}\n      total={\n        isValidElement(props.total) || typeof props.total === 'string'\n          ? undefined\n          : props.total\n      }\n      empty={\n        isValidElement(props.empty) || typeof props.empty === 'string'\n          ? undefined\n          : props.empty\n      }\n      equals={equals}\n      onRequest={props.onRequest}\n      onChange={props.onChange}\n      onBlur={props.onBlur}\n      onFocus={props.onFocus}\n      onCancel={props.onCancel}\n      onSubmit={props.onSubmit}\n      children={(renderProps) => (\n        <Pos type=\"relative\">\n          <Box\n            width={1}\n            onMouseEnter={renderProps.onInputMouseEnter}\n            onMouseLeave={renderProps.onInputMouseLeave}\n          >\n            <InputField\n              title={props.title}\n              active={!!props.suggest || !!props.placeholder}\n              input={\n                <BasicInput\n                  ref={renderProps.inputRef}\n                  disabled={props.disabled}\n                  type={props.type}\n                  name={props.name}\n                  value={props.suggest || ''}\n                  tabIndex={props.tabIndex}\n                  pr={props.hint ? 7 : undefined}\n                  autoComplete={props.autoComplete}\n                  autoFocus={props.autoFocus}\n                  placeholder={props.placeholder}\n                  maxLength={props.maxLength}\n                  error={!!props.error}\n                  focused={false}\n                  onChange={renderProps.onRequest}\n                  onFocus={renderProps.onShowFocus}\n                  onBlur={renderProps.onInputBlur}\n                />\n              }\n              hint={props.hint}\n              error={props.error}\n              help={props.help}\n              action={props.action}\n            />\n          </Box>\n          <MenuControl\n            count={renderProps.items.length}\n            selected={renderProps.selected}\n            onSelect={renderProps.onItemSelect}\n            onKeyDown={renderProps.onModalItemKeyDown}\n            children={(menuRenderProps) => (\n              <InputModal\n                value={props.suggest || ''}\n                tabIndex={props.tabIndex}\n                autoComplete={props.autoComplete}\n                placeholder={props.placeholder}\n                maxLength={props.maxLength}\n                show={renderProps.show}\n                inputRef={renderProps.inputRef}\n                contentRef={menuRenderProps.containerRef}\n                error={!!props.error}\n                onChange={renderProps.onRequest}\n                onKeyDown={\n                  renderProps.show\n                    ? menuRenderProps.onKeyDown\n                    : renderProps.onModalItemKeyDown\n                }\n                onBlur={renderProps.onModalInputBlur}\n                onShow={renderProps.onShow}\n                onHide={renderProps.onHide}\n                onEscape={renderProps.onEscapeInputModal}\n                onBack={renderProps.onBack}\n                onSubmit={\n                  props.onSubmit ? renderProps.onSearchClick : undefined\n                }\n              >\n                {props.loading ? (\n                  Array.from({length: 4})\n                    .fill(1)\n                    .map((_item, key) => (\n                      <CardItem key={key} icon stub text=\"stub\" notes=\"stub\" />\n                    ))\n                ) : (\n                  <Spacer size=\"s\">\n                    {menuRenderProps.items.length > 0 ? (\n                      <Box role=\"listbox\">\n                        {menuRenderProps.items.map((item, key) => (\n                          <CardItem\n                            role=\"option\"\n                            key={key}\n                            ref={item.ref}\n                            onClick={item.onClick}\n                            onMouseEnter={item.onMouseEnter}\n                            cursor=\"pointer\"\n                            text={renderProps.items[key].title}\n                            notes={renderProps.items[key].description}\n                            icon={\n                              renderProps.items[key].logo ? (\n                                <Image\n                                  stub={renderProps.items[key].stub}\n                                  width={6}\n                                  height={6}\n                                  src={renderProps.items[key].logo}\n                                />\n                              ) : undefined\n                            }\n                            hover={item.focused}\n                            active={item.selected}\n                            focus={item.selected}\n                          />\n                        ))}\n                      </Box>\n                    ) : null}\n                    {props.total && menuRenderProps.items.length > 0 ? (\n                      <Box px={6}>\n                        {isValidElement(props.total) ? (\n                          props.total\n                        ) : (typeof props.total === 'string' ? (\n                          <Markdown children={props.total} />\n                        ) : (\n                          <Paragraph>\n                            {props.total.text}\n                            {props.total.link ? (\n                              <Fragment>\n                                {' '}\n                                <Link\n                                  onClick={renderProps.onTotalClick}\n                                  children={props.total.link.text}\n                                />\n                              </Fragment>\n                            ) : null}\n                          </Paragraph>\n                        ))}\n                      </Box>\n                    ) : (props.empty &&\n                      menuRenderProps.items.length === 0 &&\n                      props.items !== undefined ? (\n                      <Box px={6}>\n                        {isValidElement(props.empty) ? (\n                          props.empty\n                        ) : (typeof props.empty === 'string' ? (\n                          <Markdown children={props.empty} />\n                        ) : (\n                          <Paragraph>\n                            {props.empty.text}\n                            {props.empty.link ? (\n                              <Fragment>\n                                {' '}\n                                <Link\n                                  onClick={renderProps.onEmptyClick}\n                                  children={props.empty.link.text}\n                                />\n                              </Fragment>\n                            ) : null}\n                          </Paragraph>\n                        ))}\n                      </Box>\n                    ) : null)}\n                  </Spacer>\n                )}\n              </InputModal>\n            )}\n          />\n        </Pos>\n      )}\n    />\n  )\n\nSuggestField.displayName = 'SuggestField'\n\nSuggestField.defaultProps = {\n  equals: (a: any, b: any) => a === b,\n}\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/suggest-field/SuggestFieldOptionModel.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/suggest-field/SuggestFieldProps.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/suggest-field/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/switch/Switch.tsx",["910"],[],"import {\n  Box,\n  Flex,\n  FlexItem,\n  OptionField,\n  OptionFieldItem,\n  Stub,\n  SwitchControl,\n  Tumbler,\n} from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nimport { SwitchProps } from './SwitchProps'\n\nexport const Switch: FC<SwitchProps> = (props) =>\n  props.stub ? (\n    <Flex\n      direction={props.reverse ? 'row-reverse' : 'row'}\n      justify={props.reverse ? 'space-between' : 'flex-start'}\n    >\n      <FlexItem ml={props.reverse ? 3 : 0} mr={props.reverse ? 0 : 3}>\n        <Stub\n          width={9}\n          height={5}\n          top={0.5}\n          bottom={0.5}\n          left={0.5}\n          right={0.5}\n          r={10}\n        />\n      </FlexItem>\n      <FlexItem width={33} maxWidth={1}>\n        <Stub width={1} height={2} top={2} bottom={2} />\n      </FlexItem>\n    </Flex>\n  ) : (\n    <SwitchControl\n      checked={props.checked}\n      disabled={props.disabled || props.loading}\n      onChange={props.onChange}\n      children={(renderProps) => (\n        <OptionField\n          tabIndex={props.tabIndex}\n          onFocus={renderProps.onFocus}\n          onBlur={renderProps.onBlur}\n          onKeyDown={renderProps.onKeyDown}\n          children={\n            <OptionFieldItem\n              label={props.label}\n              reverse={props.reverse}\n              description={props.description}\n              disabled={props.disabled}\n              icon={\n                <Box width={10}>\n                  {props.loading ? (\n                    <Stub\n                      width={9}\n                      height={5}\n                      top={0.5}\n                      bottom={0.5}\n                      left={0.5}\n                      right={0.5}\n                      r={10}\n                    />\n                  ) : (\n                    <Tumbler\n                      disabled={props.disabled}\n                      checked={props.checked}\n                      focused={renderProps.focused}\n                    />\n                  )}\n                </Box>\n              }\n              onMouseLeave={renderProps.onMouseLeave}\n              onMouseEnter={renderProps.onMouseEnter}\n              onClick={renderProps.onClick}\n            />\n          }\n        />\n      )}\n    />\n  )\n\nSwitch.displayName = 'Switch'\n\nSwitch.defaultProps = {\n  tabIndex: 0,\n}\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/switch/SwitchProps.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/switch/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/switch-field/SwitchField.tsx",["911","912","913","914","915","916"],[],"import {\n  Box,\n  CheckboxControl,\n  Flex,\n  FlexItem,\n  OptionControl,\n  OptionField,\n  OptionFieldItem,\n  Spacer,\n  Stub,\n  Tumbler,\n} from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nimport { SwitchFieldOptionModel } from './SwitchFieldOptionModel'\nimport { SwitchFieldProps } from './SwitchFieldProps'\n\nexport const SwitchField: FC<\n  SwitchFieldProps<SwitchFieldOptionModel<any>, any>\n> = (props) =>\n  props.stub ? (\n    <Box maxWidth={1}>\n      <Stub width={24} height={3} top={2} bottom={4} />\n      <Spacer size=\"s\">\n        {[33, 38, 30].map((width, index) => (\n          <Flex\n            key={index}\n            direction={props.reverse ? 'row-reverse' : 'row'}\n            justify={props.reverse ? 'space-between' : 'flex-start'}\n          >\n            <FlexItem ml={props.reverse ? 3 : 0} mr={props.reverse ? 0 : 3}>\n              <Stub\n                width={9}\n                height={5}\n                top={0.5}\n                bottom={0.5}\n                left={0.5}\n                right={0.5}\n                r={10}\n              />\n            </FlexItem>\n            <FlexItem width={width} maxWidth={1}>\n              <Stub width={1} height={2} top={2} bottom={2} />\n            </FlexItem>\n          </Flex>\n        ))}\n      </Spacer>\n    </Box>\n  ) : (\n    <CheckboxControl<SwitchFieldOptionModel<any>, any>\n      tabIndex={props.tabIndex}\n      options={props.options}\n      values={props.values}\n      equals={props.equals}\n      onChange={props.onChange}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      children={(renderProps) => (\n        <OptionField\n          title={props.title}\n          hint={props.hint}\n          help={props.help}\n          tabIndex={renderProps.tabIndex}\n          autoFocus={props.autoFocus}\n          onFocus={renderProps.onFocus}\n          onBlur={renderProps.onBlur}\n          onKeyDown={renderProps.onKeyDown}\n          children={renderProps.options.map((option, index) => (\n            <OptionControl<any>\n              key={index}\n              disabled={option.disabled}\n              value={option.value}\n              onClick={option.onClick}\n              onMouseEnter={option.onMouseEnter}\n              onMouseLeave={renderProps.onMouseLeave}\n              children={(renderOptionProps) => (\n                <OptionFieldItem\n                  disabled={option.disabled}\n                  reverse={props.reverse}\n                  icon={\n                    <Box width={10}>\n                      <Tumbler\n                        disabled={option.disabled}\n                        checked={option.checked}\n                        focused={option.focused}\n                      />\n                    </Box>\n                  }\n                  label={option.label}\n                  description={option.description}\n                  onClick={renderOptionProps.onClick}\n                  onMouseLeave={renderOptionProps.onMouseLeave}\n                  onMouseEnter={renderOptionProps.onMouseEnter}\n                />\n              )}\n            />\n          ))}\n        />\n      )}\n    />\n  )\n\nSwitchField.displayName = 'SwitchField'\n\nSwitchField.defaultProps = {\n  tabIndex: 0,\n}\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/switch-field/SwitchFieldOptionModel.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/switch-field/SwitchFieldProps.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/switch-field/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/tabs/Tabs.tsx",["917","918"],[],"import {\n  Flex,\n  FlexItem,\n  IconProps,\n  styled,\n  TabBorder,\n  TabHeader,\n  TabsControl,\n} from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nimport { Paragraph } from '../typography'\n\nexport interface TabsProps {\n  items: {\n    title: string\n    icon?: IconProps['name']\n    content?: ReactNode\n  }[]\n  select?: number\n  tabIndex?: number\n  vertical?: boolean\n  centered?: boolean\n  stub?: boolean | boolean[]\n  onChange?: (selected: number) => void\n}\n\nconst FlexOverflow = styled(Flex)({\n  '&::-webkit-scrollbar': {\n    display: 'none',\n  },\n  scrollbarWidth: 'none',\n  msOverflowStyle: 'none',\n  position: 'relative',\n})\n\nFlexOverflow.displayName = 'FlexOverflow'\n\nconst TabContent = styled(FlexItem)()\n\nTabContent.displayName = 'TabContent'\n\nexport const Tabs: FC<TabsProps> = ({\n  items,\n  select = 0,\n  tabIndex = 0,\n  vertical = false,\n  centered = false,\n  stub = false,\n  onChange,\n}) =>\n  stub ? (\n    <Flex direction=\"column\">\n      <FlexOverflow\n        direction=\"row\"\n        overflow=\"auto\"\n        justify={centered ? 'space-between' : 'flex-start'}\n      >\n        {(Array.isArray(stub) ? stub : [true, true, true]).map(\n          (icon, index, arr) => (\n            <TabHeader\n              key={index}\n              title=\"stub\"\n              indent={index === arr.length - 1 ? 0 : 5}\n              wrap={!centered}\n              tabIndex={-1}\n              icon={icon ? 'qiwi' : undefined}\n              vertical={vertical}\n              select={false}\n              width={centered ? 1 : undefined}\n              stub\n            />\n          ),\n        )}\n      </FlexOverflow>\n      <FlexItem mt={4}>\n        <Paragraph stub />\n      </FlexItem>\n    </Flex>\n  ) : (\n    <TabsControl\n      select={select}\n      length={items.length}\n      onChange={onChange}\n      children={(renderProps) => (\n        <Flex direction=\"column\">\n          <FlexOverflow\n            direction=\"row\"\n            overflow=\"auto\"\n            justify={centered ? 'space-between' : 'flex-start'}\n          >\n            {renderProps.items.map((item, index) => (\n              <TabHeader\n                key={index}\n                title={items[index].title}\n                indent={index === items.length - 1 ? 0 : 5}\n                wrap={!centered}\n                tabIndex={tabIndex}\n                icon={items[index].icon}\n                vertical={vertical}\n                select={item.select}\n                focus={item.focus}\n                width={centered ? 1 : undefined}\n                ref={item.ref}\n                onFocus={item.onFocus}\n                onBlur={item.onBlur}\n                onMouseEnter={item.onMouseEnter}\n                onMouseLeave={item.onMouseLeave}\n                onKeyDown={renderProps.onKeyDown}\n                onClick={item.onClick}\n              />\n            ))}\n            <TabBorder\n              width={`${renderProps.borderWidth}px`}\n              left={`${renderProps.borderLeft}px`}\n            />\n          </FlexOverflow>\n          {items.map(({ content }, index) => (\n            <TabContent\n              key={index}\n              display={select === index ? 'block' : 'none'}\n              pt={4}\n              children={content}\n            />\n          ))}\n        </Flex>\n      )}\n    />\n  )\n\nTabs.displayName = 'Tabs'\n\nTabs.defaultProps = {\n  select: 0,\n  tabIndex: 0,\n  vertical: false,\n  centered: false,\n  stub: false,\n}\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/tabs/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/text-area-field/TextAreaField.tsx",["919"],[],"import {\n  BasicTextArea,\n  InputField,\n  TextAreaFieldControl,\n} from '@qiwi/pijma-core'\nimport React, { FC, KeyboardEvent, ReactNode } from 'react'\n\nexport interface TextAreaFieldProps {\n  value: string\n  tabIndex?: number\n  name?: string\n  title?: string\n  error?: ReactNode\n  action?: ReactNode\n  help?: ReactNode\n  autoFocus?: boolean\n  placeholder?: string\n  disabled?: boolean\n  maxLength?: number\n  minRows?: number\n  maxRows?: number\n  onChange?: (value: string) => void\n  onFocus?: () => void\n  onBlur?: () => void\n  onKeyDown?: (event: KeyboardEvent<HTMLTextAreaElement>) => boolean\n  onKeyUp?: (event: KeyboardEvent<HTMLTextAreaElement>) => boolean\n}\n\nexport const TextAreaField: FC<TextAreaFieldProps> = (props) => (\n  <TextAreaFieldControl\n    onChange={props.onChange}\n    onFocus={props.onFocus}\n    onBlur={props.onBlur}\n    onKeyDown={props.onKeyDown}\n    onKeyUp={props.onKeyUp}\n    value={props.value}\n    children={(renderProps) => (\n      <InputField\n        title={props.title}\n        active={renderProps.focused || !!props.value || !!props.placeholder}\n        input={\n          <BasicTextArea\n            value={props.value}\n            name={props.name}\n            autoFocus={props.autoFocus}\n            placeholder={props.placeholder}\n            disabled={props.disabled}\n            error={!!props.error}\n            focused={renderProps.focused}\n            maxLength={props.maxLength}\n            ref={renderProps.ref}\n            rows={\n              props.maxRows && renderProps.rows > props.maxRows\n                ? props.maxRows\n                : (props.minRows && renderProps.rows < props.minRows\n                ? props.minRows\n                : renderProps.rows)\n            }\n            overflow={\n              props.maxRows && renderProps.rows > props.maxRows\n                ? 'auto'\n                : 'hidden'\n            }\n            transition={\n              renderProps.animate\n                ? 'all 100ms cubic-bezier(0.4, 0.0, 0.2, 1)'\n                : undefined\n            }\n            onChange={renderProps.onChange}\n            onFocus={renderProps.onFocus}\n            onBlur={renderProps.onBlur}\n            onKeyDown={renderProps.onKeyDown}\n            onKeyUp={renderProps.onKeyUp}\n          />\n        }\n        error={props.error}\n        help={props.help}\n        action={props.action}\n      />\n    )}\n  />\n)\n\nTextAreaField.displayName = 'TextAreaField'\n\nTextAreaField.defaultProps = {\n  tabIndex: 0,\n}\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/text-area-field/index.tsx",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/text-field/TextField.tsx",["920"],[],"import { BasicInput, InputField, TextFieldControl } from '@qiwi/pijma-core'\nimport React, { FC } from 'react'\n\nimport { TextFieldProps } from './TextFieldProps'\n\nexport const TextField: FC<TextFieldProps> = (props) =>\n  props.stub ? (\n    <InputField\n      active={false}\n      input={false}\n      title={props.title}\n      hint={props.hint}\n      help={props.help}\n      error={props.error}\n      stub\n    />\n  ) : (\n    <TextFieldControl\n      onChange={props.onChange}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      onKeyDown={props.onKeyDown}\n      onKeyUp={props.onKeyUp}\n      children={(renderProps) => (\n        <InputField\n          title={props.title}\n          active={renderProps.focused || !!props.value || !!props.placeholder}\n          input={\n            <BasicInput\n              type={props.type}\n              value={props.value}\n              name={props.name}\n              autoComplete={props.autoComplete}\n              autoFocus={props.autoFocus}\n              placeholder={props.placeholder}\n              inputMode={props.inputMode}\n              ref={props.inputRef}\n              disabled={props.disabled}\n              pr={props.hint ? 7 : undefined}\n              error={!!props.error}\n              focused={renderProps.focused}\n              maxLength={props.maxLength}\n              mask={props.mask}\n              pipe={props.pipe}\n              onChange={renderProps.onChange}\n              onFocus={renderProps.onFocus}\n              onBlur={renderProps.onBlur}\n              onKeyDown={renderProps.onKeyDown}\n              onKeyUp={renderProps.onKeyUp}\n            />\n          }\n          hint={props.hint}\n          error={props.error}\n          help={props.help}\n          action={props.action}\n        />\n      )}\n    />\n  )\n\nTextField.displayName = 'TextField'\n\nTextField.defaultProps = {\n  tabIndex: 0,\n}\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/text-field/TextFieldProps.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/text-field/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/typography/Caption.tsx",["921"],[],"import { Box, Breaker, Stub, Typo, TypoProps } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nexport interface CaptionProps {\n  color?: 'default' | 'support' | 'inverse'\n  align?: TypoProps['align']\n  clamp?: number\n  stub?: boolean\n  children?: ReactNode\n}\n\nconst CaptionColor: { [color in NonNullable<CaptionProps['color']>]: string } =\n  {\n    default: '#000',\n    support: '#666',\n    inverse: '#fff',\n  }\n\nexport const Caption: FC<CaptionProps> = ({\n  color = 'support',\n  align,\n  stub,\n  clamp,\n  children,\n}) =>\n  stub ? (\n    <Box\n      ml={align === 'center' || align === 'right' ? 'auto' : undefined}\n      mr={align === 'center' ? 'auto' : undefined}\n      width={50}\n      maxWidth={1}\n    >\n      <Stub top={1} bottom={1} width={50} height={3} />\n    </Box>\n  ) : (\n    <Typo\n      as=\"h6\"\n      display=\"block\"\n      size={3.5}\n      height={5}\n      weight={500}\n      color={CaptionColor[color]}\n      transform=\"uppercase\"\n      spacing={1.5}\n      align={align}\n      clamp={clamp}\n      children={<Breaker children={children} />}\n    />\n  )\n\nCaption.displayName = 'Caption'\n\nCaption.defaultProps = {\n  color: 'support',\n}\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/typography/Heading.tsx",["922","923","924"],[],"import { Box, Breaker, Stub, Typo, TypoProps } from '@qiwi/pijma-core'\nimport React, { FC, Fragment, ReactNode } from 'react'\n\nexport interface HeadingProps {\n  tag?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'\n  size: '1' | '2' | '3' | '4'\n  color?: 'default' | 'inverse'\n  align?: TypoProps['align']\n  clamp?: number\n  stub?: boolean\n  children?: ReactNode\n}\n\nconst HeadingSize: { [size in HeadingProps['size']]: number } = {\n  1: 7,\n  2: 6,\n  3: 5,\n  4: 4,\n}\n\nconst HeadingHeight: { [size in HeadingProps['size']]: number } = {\n  1: 8,\n  2: 7,\n  3: 6,\n  4: 5,\n}\n\nconst HeadingTag: {\n  [size in HeadingProps['size']]: NonNullable<HeadingProps['tag']>\n} = {\n  1: 'h1',\n  2: 'h2',\n  3: 'h3',\n  4: 'h4',\n}\n\nconst HeadingWeight: { [size in HeadingProps['size']]: number } = {\n  1: 900,\n  2: 900,\n  3: 900,\n  4: 700,\n}\n\nconst StubOffsetTop: { [size in HeadingProps['size']]: number } = {\n  1: 2,\n  2: 2,\n  3: 2,\n  4: 1,\n}\n\nconst StubOffsetBottom: { [size in HeadingProps['size']]: number } = {\n  1: 1,\n  2: 1,\n  3: 1,\n  4: 1,\n}\n\nconst StubHeight: { [size in HeadingProps['size']]: number } = {\n  1: 5,\n  2: 4,\n  3: 3,\n  4: 3,\n}\n\nconst HeadingColor: { [color in NonNullable<HeadingProps['color']>]: string } =\n  {\n    default: '#000',\n    inverse: '#fff',\n  }\n\nexport const Heading: FC<HeadingProps> = ({\n  tag,\n  size,\n  color = 'default',\n  align,\n  stub,\n  clamp,\n  children,\n}) =>\n  stub ? (\n    <Fragment>\n      {new Array(clamp === undefined ? 1 : clamp)\n        .fill(0)\n        .map((_, i) => (i % 3 === 0 ? 0.5 : (i % 3 === 1 ? 0.6 : 0.4)))\n        .map((width, id) => (\n          <Box\n            key={id}\n            ml={align === 'center' || align === 'right' ? 'auto' : 'none'}\n            mr={align === 'center' ? 'auto' : 'none'}\n            width={width}\n            maxWidth={1}\n          >\n            <Stub\n              top={StubOffsetTop[size]}\n              bottom={StubOffsetBottom[size]}\n              width={1}\n              height={StubHeight[size]}\n              inverse={color === 'inverse'}\n            />\n          </Box>\n        ))}\n    </Fragment>\n  ) : (\n    <Typo\n      as={tag || HeadingTag[size]}\n      display=\"block\"\n      size={HeadingSize[size]}\n      height={HeadingHeight[size]}\n      weight={HeadingWeight[size]}\n      color={HeadingColor[color]}\n      align={align}\n      clamp={clamp}\n      children={<Breaker children={children} />}\n    />\n  )\n\nHeading.displayName = 'Heading'\n\nHeading.defaultProps = {\n  color: 'default',\n}\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/typography/Paragraph.tsx",["925","926","927"],[],"import { Box, Breaker, Stub, Typo, TypoProps } from '@qiwi/pijma-core'\nimport React, { FC, Fragment, ReactNode } from 'react'\n\nexport interface ParagraphProps {\n  size?: 's' | 'm' | 'l'\n  bold?: boolean\n  compact?: boolean\n  color?: 'default' | 'support' | 'inverse'\n  transform?: TypoProps['transform']\n  align?: TypoProps['align']\n  clamp?: number\n  stub?: boolean\n  children?: ReactNode\n}\n\nconst ParagraphSize: { [size in NonNullable<ParagraphProps['size']>]: number } =\n  {\n    s: 3.5,\n    m: 4,\n    l: 5,\n  }\n\nconst ParagraphHeight: {\n  [size in NonNullable<ParagraphProps['size']>]: number\n} = {\n  s: 5,\n  m: 6,\n  l: 8,\n}\n\nconst ParagraphHeightCompact: {\n  [size in NonNullable<ParagraphProps['size']>]: number\n} = {\n  s: 4,\n  m: 5,\n  l: 7,\n}\n\nconst StubOffsetTop: { [size in NonNullable<ParagraphProps['size']>]: number } =\n  {\n    s: 2,\n    m: 1,\n    l: 3,\n  }\n\nconst StubOffsetBottom: {\n  [size in NonNullable<ParagraphProps['size']>]: number\n} = {\n  s: 1,\n  m: 2,\n  l: 2,\n}\n\nconst StubOffsetCompactTop: {\n  [size in NonNullable<ParagraphProps['size']>]: number\n} = {\n  s: 1,\n  m: 1,\n  l: 3,\n}\n\nconst StubOffsetCompactBottom: {\n  [size in NonNullable<ParagraphProps['size']>]: number\n} = {\n  s: 1,\n  m: 1,\n  l: 1,\n}\n\nconst StubHeight: { [size in NonNullable<ParagraphProps['size']>]: number } = {\n  s: 2,\n  m: 3,\n  l: 3,\n}\n\nconst ParagraphColor: {\n  [color in NonNullable<ParagraphProps['color']>]: string\n} = {\n  default: '#000',\n  support: '#666',\n  inverse: '#fff',\n}\n\nexport const Paragraph: FC<ParagraphProps> = ({\n  size = 'm',\n  bold = false,\n  compact = false,\n  color = 'default',\n  transform,\n  align,\n  stub,\n  clamp,\n  children,\n}) =>\n  stub ? (\n    <Fragment>\n      {new Array(clamp === undefined ? 3 : clamp)\n        .fill(0)\n        .map((_, i) => (i % 3 === 0 ? 0.8 : (i % 3 === 1 ? 0.9 : 0.7)))\n        .map((width, id) => (\n          <Box\n            key={id}\n            width={width}\n            ml={align === 'center' || align === 'right' ? 'auto' : undefined}\n            mr={align === 'center' || align === 'left' ? 'auto' : undefined}\n          >\n            <Stub\n              top={compact ? StubOffsetCompactTop[size] : StubOffsetTop[size]}\n              bottom={\n                compact ? StubOffsetCompactBottom[size] : StubOffsetBottom[size]\n              }\n              height={StubHeight[size]}\n              width={1}\n              inverse={color === 'inverse'}\n            />\n          </Box>\n        ))}\n    </Fragment>\n  ) : (\n    <Typo\n      as=\"p\"\n      display=\"block\"\n      size={ParagraphSize[size]}\n      height={compact ? ParagraphHeightCompact[size] : ParagraphHeight[size]}\n      weight={bold ? 500 : 300}\n      color={ParagraphColor[color]}\n      transform={transform}\n      align={align}\n      clamp={clamp}\n      children={<Breaker children={children} />}\n    />\n  )\n\nParagraph.displayName = 'Paragraph'\n\nParagraph.defaultProps = {\n  size: 'm',\n  bold: false,\n  compact: false,\n  color: 'default',\n}\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/typography/Text.tsx",["928","929","930","931"],[],"import { Box, Breaker, Stub, Typo, TypoProps } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nexport interface TextProps {\n  display?: 'block' | 'inline' | 'inline-block'\n  size?: 's' | 'm' | 'l'\n  bold?: boolean\n  compact?: boolean\n  color?: 'default' | 'support' | 'inverse' | 'failure' | 'success' | 'warning'\n  decoration?: TypoProps['decoration']\n  transform?: TypoProps['transform']\n  transition?: TypoProps['transition']\n  align?: TypoProps['align']\n  clamp?: number\n  stub?: boolean\n  children?: ReactNode\n}\n\nconst TextSize: { [size in NonNullable<TextProps['size']>]: number } = {\n  s: 3.5,\n  m: 4,\n  l: 5,\n}\n\nconst TextHeight: { [size in NonNullable<TextProps['size']>]: number } = {\n  s: 5,\n  m: 6,\n  l: 8,\n}\n\nconst TextHeightCompact: { [size in NonNullable<TextProps['size']>]: number } =\n  {\n    s: 4,\n    m: 5,\n    l: 7,\n  }\n\nconst StubHeight: Record<NonNullable<TextProps['size']>, number> = {\n  s: 2,\n  m: 3,\n  l: 3,\n}\nconst StubOffsetTop: Record<NonNullable<TextProps['size']>, number> = {\n  s: 1.5,\n  m: 1.5,\n  l: 2.5,\n}\n\nconst StubOffsetBottom: Record<NonNullable<TextProps['size']>, number> = {\n  s: 1.5,\n  m: 1.5,\n  l: 2.5,\n}\n\nconst StubOffsetCompactTop: Record<NonNullable<TextProps['size']>, number> = {\n  s: 1,\n  m: 1,\n  l: 2,\n}\n\nconst StubOffsetCompactBottom: Record<\n  NonNullable<TextProps['size']>,\n  number\n> = {\n  s: 1,\n  m: 1,\n  l: 2,\n}\n\nconst TextColor: { [color in NonNullable<TextProps['color']>]: string } = {\n  default: '#000',\n  support: '#666',\n  inverse: '#fff',\n  success: '#4bbd5c',\n  failure: '#d0021b',\n  warning: '#ff8c00',\n}\n\nexport const Text: FC<TextProps> = ({\n  display,\n  compact,\n  size,\n  bold,\n  color,\n  decoration,\n  transform,\n  transition,\n  align,\n  clamp,\n  children,\n  stub = false,\n}) =>\n  stub ? (\n    size === undefined || display === undefined ? null : (\n      <Box as=\"span\" display={display}>\n        {new Array(clamp === undefined ? 1 : clamp)\n          .fill(1)\n          .map((width: number, index: number) => (\n            <Stub\n              key={index}\n              height={StubHeight[size]}\n              width={width}\n              top={compact ? StubOffsetCompactTop[size] : StubOffsetTop[size]}\n              bottom={\n                compact ? StubOffsetCompactBottom[size] : StubOffsetBottom[size]\n              }\n            />\n          ))}\n      </Box>\n    )\n  ) : (\n    <Typo\n      as=\"span\"\n      display={display}\n      size={size === undefined ? undefined : TextSize[size]}\n      height={\n        size === undefined\n          ? undefined\n          : (compact\n          ? TextHeightCompact[size]\n          : TextHeight[size])\n      }\n      weight={bold === undefined ? undefined : (bold ? 500 : 300)}\n      color={color === undefined ? undefined : TextColor[color]}\n      decoration={decoration}\n      transform={transform}\n      transition={transition}\n      align={align}\n      clamp={clamp}\n      children={<Breaker children={children} />}\n    />\n  )\n\nText.displayName = 'Text'\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/typography/Title.tsx",["932"],[],"import { Box, Breaker, Stub, Typo, TypoProps } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\nexport interface TitleProps {\n  tag?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'\n  size: '1' | '2'\n  color?: 'default' | 'inverse'\n  align?: TypoProps['align']\n  stub?: boolean\n  clamp?: number\n  children?: ReactNode\n}\n\nconst TitleSize: { [size in TitleProps['size']]: number } = {\n  1: 11,\n  2: 9,\n}\n\nconst TitleHeight: { [size in TitleProps['size']]: number } = {\n  1: 13,\n  2: 10,\n}\n\nconst TitleTag: {\n  [size in TitleProps['size']]: NonNullable<TitleProps['tag']>\n} = {\n  1: 'h1',\n  2: 'h2',\n}\n\nconst TitleWeight: { [size in TitleProps['size']]: number } = {\n  1: 900,\n  2: 900,\n}\n\nconst StubOffsetTop: { [size in TitleProps['size']]: number } = {\n  1: 4,\n  2: 3,\n}\n\nconst StubOffsetBottom: { [size in TitleProps['size']]: number } = {\n  1: 3,\n  2: 2,\n}\n\nconst StubHeight: { [size in TitleProps['size']]: number } = {\n  1: 6,\n  2: 5,\n}\n\nconst TitleColor: { [color in NonNullable<TitleProps['color']>]: string } = {\n  default: '#000',\n  inverse: '#fff',\n}\n\nexport const Title: FC<TitleProps> = ({\n  tag,\n  size,\n  color = 'default',\n  align,\n  stub,\n  clamp,\n  children,\n}) =>\n  stub ? (\n    <Box\n      ml={align === 'center' || align === 'right' ? 'auto' : 'none'}\n      mr={align === 'center' ? 'auto' : 'none'}\n      width={50}\n    >\n      <Stub\n        top={StubOffsetTop[size]}\n        bottom={StubOffsetBottom[size]}\n        height={StubHeight[size]}\n        width={50}\n        inverse={color === 'inverse'}\n      />\n    </Box>\n  ) : (\n    <Typo\n      as={tag || TitleTag[size]}\n      display=\"block\"\n      size={TitleSize[size]}\n      height={TitleHeight[size]}\n      weight={TitleWeight[size]}\n      color={TitleColor[color]}\n      align={align}\n      clamp={clamp}\n      children={<Breaker children={children} />}\n    />\n  )\n\nTitle.displayName = 'Title'\n\nTitle.defaultProps = {\n  color: 'default',\n}\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/ts/typography/index.ts",[],[],"/home/runner/work/pijma/pijma/packages/mobile/src/main/webapp/components/ComponentsListRenderer.tsx",["933","934"],[],"import { Caption, Flex, FlexItem, Link } from '@qiwi/pijma-mobile'\nimport React, { FC, Fragment, ReactNode } from 'react'\n\ninterface ComponentsListRendererProps {\n  items: Array<{\n    heading: boolean\n    visibleName: string\n    href: string\n    content: ReactNode\n    shouldOpenInNewTab: boolean\n  }>\n}\n\nconst ComponentsListRenderer: FC<ComponentsListRendererProps> = (props) => {\n  const items = props.items.filter((item) => item.visibleName)\n  if (items.length === 0) {\n    return null\n  }\n  return (\n    <Flex wrap=\"wrap\">\n      {items.map(({ visibleName, href, content, shouldOpenInNewTab }, i) => (\n        <FlexItem key={i} mr={4} mt={4}>\n          {content ? (\n            <Fragment>\n              <Caption>{visibleName}</Caption>\n              {content}\n            </Fragment>\n          ) : (\n            <Link\n              key={i}\n              href={href}\n              target={shouldOpenInNewTab ? '_blank' : undefined}\n              title={visibleName}\n            >\n              {visibleName}\n            </Link>\n          )}\n        </FlexItem>\n      ))}\n    </Flex>\n  )\n}\n\nexport default ComponentsListRenderer\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/webapp/components/ExamplesRenderer.tsx",["935"],[],"import React, { FC, Fragment, ReactNode } from 'react'\n\ninterface ExamplesRendererProps {\n  children?: ReactNode\n}\n\nconst ExamplesRenderer: FC<ExamplesRendererProps> = (props) => (\n  <Fragment>{props.children}</Fragment>\n)\n\nexport default ExamplesRenderer\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/webapp/components/Heading.tsx",["936"],[],"import { Heading, HeadingProps } from '@qiwi/pijma-mobile'\nimport React, { FC, ReactNode } from 'react'\n\ninterface HeadingRendererProps {\n  level: '1' | '2' | '3' | '4' | '5' | '6'\n  children?: ReactNode\n}\n\nconst LevelSize: {\n  [level in HeadingRendererProps['level']]: HeadingProps['size']\n} = {\n  1: '1',\n  2: '2',\n  3: '3',\n  4: '4',\n  5: '4',\n  6: '4',\n}\n\nconst HeadingRenderer: FC<HeadingRendererProps> = (props) => (\n  <Heading size={LevelSize[props.level]}>{props.children}</Heading>\n)\n\nexport default HeadingRenderer\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/webapp/components/Link.tsx",["937"],[],"import { Link, LinkProps } from '@qiwi/pijma-mobile'\nimport React, { FC } from 'react'\n\nconst LinkRenderer: FC<LinkProps> = (props) => <Link {...props} />\n\nexport default LinkRenderer\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/webapp/components/Markdown/MarkdownHeading.tsx",["938"],[],"import { Box } from '@qiwi/pijma-core'\nimport { Heading, HeadingProps } from '@qiwi/pijma-mobile'\nimport React, { FC, ReactNode } from 'react'\n\ninterface HeadingRendererProps {\n  level: '1' | '2' | '3' | '4' | '5' | '6'\n  children?: ReactNode\n}\n\nconst LevelSize: {\n  [level in HeadingRendererProps['level']]: HeadingProps['size']\n} = {\n  1: '1',\n  2: '2',\n  3: '3',\n  4: '4',\n  5: '4',\n  6: '4',\n}\n\nconst LevelMarginTop: { [level in HeadingRendererProps['level']]: number } = {\n  1: 11,\n  2: 11,\n  3: 8,\n  4: 7,\n  5: 6,\n  6: 6,\n}\n\nconst LevelMarginBottom: { [level in HeadingRendererProps['level']]: number } =\n  {\n    1: 3,\n    2: 3,\n    3: 3,\n    4: 3,\n    5: 3,\n    6: 3,\n  }\n\nconst MardownHeadingRenderer: FC<HeadingRendererProps> = (props) => (\n  <Box\n    mt={LevelMarginTop[props.level]}\n    mb={LevelMarginBottom[props.level]}\n    css={{\n      '&:first-child': { marginTop: 0 },\n      '&:last-child': { marginBottom: 0 },\n    }}\n  >\n    <Heading size={LevelSize[props.level]}>{props.children}</Heading>\n  </Box>\n)\n\nexport default MardownHeadingRenderer\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/webapp/components/Para.tsx",["939"],[],"import { Box } from '@qiwi/pijma-core'\nimport { Paragraph, ParagraphProps } from '@qiwi/pijma-mobile'\nimport React, { FC, ReactNode } from 'react'\n\ninterface ParagraphRendererProps {\n  children?: ReactNode\n}\n\nconst SizeMargin: { [size in NonNullable<ParagraphProps['size']>]: number } = {\n  s: 3,\n  m: 4,\n  l: 5,\n}\n\nconst ParagraphRenderer: FC<ParagraphRendererProps> = ({ children }) => (\n  <Box\n    my={SizeMargin.m}\n    css={{\n      '&:first-child': { marginTop: 0 },\n      '&:last-child': { marginBottom: 0 },\n    }}\n  >\n    <Paragraph size=\"m\">{children}</Paragraph>\n  </Box>\n)\n\nexport default ParagraphRenderer\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/webapp/components/ReactComponentRenderer.tsx",["940","941","942"],[],"import { Spacer } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n// @ts-ignore\nimport Pathline from 'rsg-components/Pathline'\n\ninterface ReactComponentRendererProps {\n  name: string\n  heading: ReactNode\n  filepath: string\n  pathLine: string\n  tabButtons?: ReactNode\n  tabBody?: ReactNode\n  description?: ReactNode\n  docs?: ReactNode\n  examples: ReactNode\n  isolated: boolean\n}\n\nconst ReactComponentRenderer: FC<ReactComponentRendererProps> = (props) => (\n  <Spacer size=\"xl\">\n    <Spacer size=\"s\">\n      {props.heading}\n      {props.pathLine ? <Pathline>{props.pathLine}</Pathline> : null}\n    </Spacer>\n    <Spacer size=\"m\">\n      {props.description}\n      {props.docs}\n      {props.tabButtons}\n      {props.tabBody}\n    </Spacer>\n    {props.examples}\n  </Spacer>\n)\n\nexport default ReactComponentRenderer\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/webapp/components/SectionHeadingRenderer.tsx",["943"],[],"import { Heading } from '@qiwi/pijma-mobile'\nimport React, { FC, ReactNode } from 'react'\n\ninterface SectionHeadingRendererProps {\n  toolbar: ReactNode\n  id: string\n  href: string\n  depth: number\n  deprecated: boolean\n  children?: ReactNode\n}\n\nconst SectionHeadingRenderer: FC<SectionHeadingRendererProps> = (props) => (\n  <Heading size=\"1\">{props.children}</Heading>\n)\n\nexport default SectionHeadingRenderer\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/webapp/components/SectionRenderer.tsx",["944","945","946","947"],[],"import { Spacer } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n// @ts-ignore\nimport SectionHeading from 'rsg-components/SectionHeading'\n// @ts-ignore\n// import Markdown from 'rsg-components/Markdown'\n\ninterface SectionRendererProps {\n  name: string\n  description: string\n  slug: string\n  content: ReactNode\n  components: ReactNode\n  sections: ReactNode\n  isolated: boolean\n  depth: number\n  pagePerSection: boolean\n}\n\nconst SectionRenderer: FC<SectionRendererProps> = (props) => (\n  <Spacer size=\"xl\">\n    {props.name ? (\n      <SectionHeading\n        depth={props.depth}\n        id={props.slug}\n        slotName=\"sectionToolbar\"\n        pagePerSection={props.pagePerSection}\n        slotProps={props}\n        children={props.name}\n      />\n    ) : null}\n    {props.content}\n    {props.sections}\n    {props.components}\n  </Spacer>\n)\n\nexport default SectionRenderer\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/webapp/components/StyleGuideRenderer.tsx",["948","949"],[],"import {\n  applyDefaultClickHandler,\n  cache,\n  CacheProvider,\n  Card,\n  Flex,\n  FlexItem,\n  fonts,\n  Global,\n  Header,\n  Icon,\n  reset,\n  ThemeProvider,\n  themes,\n} from '@qiwi/pijma-mobile'\nimport React, { FC, ReactNode } from 'react'\n\napplyDefaultClickHandler()\n\nif (screen.width < 360) {\n  document.querySelector<HTMLMetaElement>('meta[name=viewport]')!.content =\n    'width=360, shrink-to-fit=no'\n}\n\ninterface StyleGuideRendererProps {\n  title: ReactNode\n  toc: ReactNode\n  hasSidebar: boolean\n  children?: ReactNode\n}\n\nconst StyleGuideRenderer: FC<StyleGuideRendererProps> = (props) => (\n  <CacheProvider value={cache}>\n    <ThemeProvider theme={themes.orange}>\n      <Global\n        styles={[\n          reset,\n          fonts,\n          {\n            body: {\n              minWidth: '360px !important',\n            },\n          },\n        ]}\n      />\n      <Card bg=\"#f5f5f5\" height={1}>\n        <Header>\n          <Flex height={1} px={4} align=\"center\" justify=\"center\">\n            <FlexItem width={8} height={8} shrink={0} align=\"center\">\n              <Icon name=\"qiwi\" color=\"#ff8c00\" size={1} />\n            </FlexItem>\n          </Flex>\n        </Header>\n        <Card bg=\"#f5f5f5\" px={4} py={6}>\n          {props.children}\n        </Card>\n        <Card as=\"footer\" px={4} py={6}>\n          {props.toc}\n        </Card>\n      </Card>\n    </ThemeProvider>\n  </CacheProvider>\n)\n\nexport default StyleGuideRenderer\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/webapp/components/TableOfContentsRenderer.tsx",["950"],[],"import { Icon, Spacer, TextField } from '@qiwi/pijma-mobile'\nimport React, { FC, ReactNode } from 'react'\n\ninterface TableOfContentsRendererProps {\n  searchTerm: string\n  onSearchTermChange: (value: string) => void\n  children?: ReactNode\n}\n\nconst TableOfContentsRenderer: FC<TableOfContentsRendererProps> = (props) => (\n  <Spacer>\n    <TextField\n      value={props.searchTerm}\n      placeholder=\"Поиск\"\n      hint={<Icon name=\"search\" color=\"#666\" />}\n      onChange={props.onSearchTermChange}\n    />\n    {props.children}\n  </Spacer>\n)\n\nexport default TableOfContentsRenderer\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/webapp/components/Wrapper.tsx",["951"],[],"import { ThemeProvider, themes } from '@qiwi/pijma-core'\nimport React, { FC, ReactNode } from 'react'\n\ninterface WrapperProps {\n  children?: ReactNode\n}\n\nconst Wrapper: FC<WrapperProps> = (props) => (\n  <ThemeProvider theme={themes.orange}>{props.children}</ThemeProvider>\n)\n\nexport default Wrapper\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/webapp/components/slots/IsolateButton.tsx",["952","953","954","955"],[],"import React, { FC } from 'react'\n// @ts-ignore\nimport { MdFullscreen, MdFullscreenExit } from 'react-icons/md'\n// @ts-ignore\nimport getUrl from 'react-styleguidist/lib/client/utils/getUrl'\n// @ts-ignore\nimport ToolbarButton from 'rsg-components/ToolbarButton'\n\ninterface IsolateButtonProps {\n  name: string\n  example: number\n  isolated: boolean\n}\n\nconst IsolateButton: FC<IsolateButtonProps> = ({ name, example, isolated }) =>\n  isolated ? (\n    <ToolbarButton\n      href={getUrl({\n        name,\n        hashPath: decodeURI(location.hash).split('/').slice(1, -2),\n      })}\n      title=\"Show all components\"\n    >\n      <MdFullscreenExit />\n    </ToolbarButton>\n  ) : (\n    <ToolbarButton\n      href={getUrl({\n        name,\n        example,\n        hashPath: decodeURI(location.hash).split('/').slice(1, -1),\n      })}\n      title=\"Open isolated\"\n    >\n      <MdFullscreen />\n    </ToolbarButton>\n  )\n\nexport default IsolateButton\n","/home/runner/work/pijma/pijma/packages/mobile/src/main/webapp/require.js",[],[],{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"960","severity":2,"message":"961","line":12,"column":12,"nodeType":"962","messageId":"963","endLine":12,"endColumn":16,"suggestions":"964"},{"ruleId":"956","severity":1,"message":"957","line":9,"column":8,"nodeType":"958","messageId":"959","endLine":9,"endColumn":13},{"ruleId":"960","severity":2,"message":"961","line":61,"column":15,"nodeType":"962","messageId":"963","endLine":61,"endColumn":19,"suggestions":"965"},{"ruleId":"960","severity":2,"message":"961","line":75,"column":13,"nodeType":"962","messageId":"963","endLine":75,"endColumn":17,"suggestions":"966"},{"ruleId":"956","severity":1,"message":"957","line":12,"column":8,"nodeType":"958","messageId":"959","endLine":12,"endColumn":13},{"ruleId":"960","severity":2,"message":"961","line":68,"column":7,"nodeType":"962","messageId":"963","endLine":68,"endColumn":11,"suggestions":"967"},{"ruleId":"960","severity":2,"message":"961","line":108,"column":17,"nodeType":"962","messageId":"963","endLine":108,"endColumn":21,"suggestions":"968"},{"ruleId":"956","severity":1,"message":"957","line":9,"column":8,"nodeType":"958","messageId":"959","endLine":9,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":13,"column":8,"nodeType":"958","messageId":"959","endLine":13,"endColumn":13},{"ruleId":"969","severity":2,"message":"970","line":70,"column":4,"nodeType":null,"messageId":"971","endLine":70,"endColumn":6},{"ruleId":"960","severity":2,"message":"961","line":113,"column":15,"nodeType":"962","messageId":"963","endLine":113,"endColumn":19,"suggestions":"972"},{"ruleId":"960","severity":2,"message":"961","line":172,"column":17,"nodeType":"962","messageId":"963","endLine":172,"endColumn":21,"suggestions":"973"},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"960","severity":2,"message":"961","line":31,"column":15,"nodeType":"962","messageId":"963","endLine":31,"endColumn":19,"suggestions":"974"},{"ruleId":"956","severity":1,"message":"957","line":13,"column":8,"nodeType":"958","messageId":"959","endLine":13,"endColumn":13},{"ruleId":"969","severity":2,"message":"975","line":85,"column":48,"nodeType":null,"messageId":"971","endLine":85,"endColumn":50},{"ruleId":"960","severity":2,"message":"961","line":121,"column":15,"nodeType":"962","messageId":"963","endLine":121,"endColumn":19,"suggestions":"976"},{"ruleId":"960","severity":2,"message":"961","line":127,"column":15,"nodeType":"962","messageId":"963","endLine":127,"endColumn":19,"suggestions":"977"},{"ruleId":"960","severity":2,"message":"961","line":244,"column":27,"nodeType":"962","messageId":"963","endLine":244,"endColumn":31,"suggestions":"978"},{"ruleId":"960","severity":2,"message":"961","line":275,"column":27,"nodeType":"962","messageId":"963","endLine":275,"endColumn":31,"suggestions":"979"},{"ruleId":"956","severity":1,"message":"957","line":8,"column":8,"nodeType":"958","messageId":"959","endLine":8,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":12,"column":8,"nodeType":"958","messageId":"959","endLine":12,"endColumn":13},{"ruleId":"980","severity":1,"message":"981","line":18,"column":47,"nodeType":"982","messageId":"983","endLine":18,"endColumn":50,"suggestions":"984"},{"ruleId":"980","severity":1,"message":"981","line":18,"column":53,"nodeType":"982","messageId":"983","endLine":18,"endColumn":56,"suggestions":"985"},{"ruleId":"980","severity":1,"message":"981","line":35,"column":47,"nodeType":"982","messageId":"983","endLine":35,"endColumn":50,"suggestions":"986"},{"ruleId":"980","severity":1,"message":"981","line":35,"column":53,"nodeType":"982","messageId":"983","endLine":35,"endColumn":56,"suggestions":"987"},{"ruleId":"980","severity":1,"message":"981","line":54,"column":28,"nodeType":"982","messageId":"983","endLine":54,"endColumn":31,"suggestions":"988"},{"ruleId":"956","severity":1,"message":"957","line":11,"column":8,"nodeType":"958","messageId":"959","endLine":11,"endColumn":13},{"ruleId":"969","severity":2,"message":"989","line":34,"column":4,"nodeType":null,"messageId":"971","endLine":34,"endColumn":6},{"ruleId":"990","severity":2,"message":"991","line":37,"column":8,"nodeType":"992","messageId":"963","endLine":37,"endColumn":25,"suggestions":"993"},{"ruleId":"960","severity":2,"message":"961","line":103,"column":15,"nodeType":"962","messageId":"963","endLine":103,"endColumn":19,"suggestions":"994"},{"ruleId":"956","severity":1,"message":"957","line":13,"column":8,"nodeType":"958","messageId":"959","endLine":13,"endColumn":13},{"ruleId":"995","severity":2,"message":"996","line":26,"column":42,"nodeType":"997","messageId":"998","endLine":26,"endColumn":44},{"ruleId":"969","severity":2,"message":"999","line":43,"column":29,"nodeType":null,"messageId":"971","endLine":43,"endColumn":31},{"ruleId":"960","severity":2,"message":"961","line":141,"column":23,"nodeType":"962","messageId":"963","endLine":141,"endColumn":27,"suggestions":"1000"},{"ruleId":"960","severity":2,"message":"961","line":154,"column":29,"nodeType":"962","messageId":"963","endLine":154,"endColumn":33,"suggestions":"1001"},{"ruleId":"960","severity":2,"message":"961","line":169,"column":29,"nodeType":"962","messageId":"963","endLine":169,"endColumn":33,"suggestions":"1002"},{"ruleId":"960","severity":2,"message":"961","line":172,"column":23,"nodeType":"962","messageId":"963","endLine":172,"endColumn":27,"suggestions":"1003"},{"ruleId":"980","severity":1,"message":"981","line":186,"column":15,"nodeType":"982","messageId":"983","endLine":186,"endColumn":18,"suggestions":"1004"},{"ruleId":"980","severity":1,"message":"981","line":186,"column":23,"nodeType":"982","messageId":"983","endLine":186,"endColumn":26,"suggestions":"1005"},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"969","severity":2,"message":"1006","line":37,"column":4,"nodeType":null,"messageId":"971","endLine":37,"endColumn":6},{"ruleId":"1007","severity":2,"message":"1008","line":47,"column":24,"nodeType":"962","messageId":"1009","endLine":47,"endColumn":36},{"ruleId":"1010","severity":2,"message":"1011","line":96,"column":31,"nodeType":"958","messageId":"1012","endLine":96,"endColumn":37,"suggestions":"1013"},{"ruleId":"960","severity":2,"message":"961","line":138,"column":19,"nodeType":"962","messageId":"963","endLine":138,"endColumn":23,"suggestions":"1014"},{"ruleId":"956","severity":1,"message":"957","line":15,"column":8,"nodeType":"958","messageId":"959","endLine":15,"endColumn":13},{"ruleId":"960","severity":2,"message":"961","line":148,"column":21,"nodeType":"962","messageId":"963","endLine":148,"endColumn":25,"suggestions":"1015"},{"ruleId":"960","severity":2,"message":"961","line":173,"column":15,"nodeType":"962","messageId":"963","endLine":173,"endColumn":19,"suggestions":"1016"},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"969","severity":2,"message":"1017","line":24,"column":4,"nodeType":null,"messageId":"971","endLine":24,"endColumn":6},{"ruleId":"960","severity":2,"message":"961","line":44,"column":15,"nodeType":"962","messageId":"963","endLine":44,"endColumn":19,"suggestions":"1018"},{"ruleId":"960","severity":2,"message":"961","line":62,"column":15,"nodeType":"962","messageId":"963","endLine":62,"endColumn":19,"suggestions":"1019"},{"ruleId":"960","severity":2,"message":"961","line":65,"column":9,"nodeType":"962","messageId":"963","endLine":65,"endColumn":13,"suggestions":"1020"},{"ruleId":"960","severity":2,"message":"961","line":88,"column":11,"nodeType":"962","messageId":"963","endLine":88,"endColumn":15,"suggestions":"1021"},{"ruleId":"960","severity":2,"message":"961","line":103,"column":15,"nodeType":"962","messageId":"963","endLine":103,"endColumn":19,"suggestions":"1022"},{"ruleId":"960","severity":2,"message":"961","line":116,"column":15,"nodeType":"962","messageId":"963","endLine":116,"endColumn":19,"suggestions":"1023"},{"ruleId":"960","severity":2,"message":"961","line":119,"column":9,"nodeType":"962","messageId":"963","endLine":119,"endColumn":13,"suggestions":"1024"},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":12,"column":8,"nodeType":"958","messageId":"959","endLine":12,"endColumn":13},{"ruleId":"990","severity":2,"message":"991","line":96,"column":11,"nodeType":"992","messageId":"963","endLine":96,"endColumn":57,"suggestions":"1025"},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":13,"column":8,"nodeType":"958","messageId":"959","endLine":13,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":16,"column":8,"nodeType":"958","messageId":"959","endLine":16,"endColumn":13},{"ruleId":"960","severity":2,"message":"961","line":117,"column":17,"nodeType":"962","messageId":"963","endLine":117,"endColumn":21,"suggestions":"1026"},{"ruleId":"960","severity":2,"message":"961","line":139,"column":17,"nodeType":"962","messageId":"963","endLine":139,"endColumn":21,"suggestions":"1027"},{"ruleId":"956","severity":1,"message":"957","line":8,"column":8,"nodeType":"958","messageId":"959","endLine":8,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"969","severity":2,"message":"1028","line":64,"column":44,"nodeType":null,"messageId":"971","endLine":64,"endColumn":46},{"ruleId":"960","severity":2,"message":"961","line":68,"column":32,"nodeType":"962","messageId":"963","endLine":68,"endColumn":36,"suggestions":"1029"},{"ruleId":"956","severity":1,"message":"957","line":8,"column":8,"nodeType":"958","messageId":"959","endLine":8,"endColumn":13},{"ruleId":"1030","severity":2,"message":"1031","line":46,"column":17,"nodeType":"1032","messageId":"1033","endLine":46,"endColumn":65,"suggestions":"1034"},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"969","severity":2,"message":"1035","line":72,"column":4,"nodeType":null,"messageId":"971","endLine":72,"endColumn":6},{"ruleId":"1036","severity":2,"message":"1037","line":112,"column":13,"nodeType":"1032","messageId":"1038","endLine":143,"endColumn":17},{"ruleId":"960","severity":2,"message":"961","line":127,"column":43,"nodeType":"962","messageId":"963","endLine":127,"endColumn":47,"suggestions":"1039"},{"ruleId":"960","severity":2,"message":"961","line":143,"column":13,"nodeType":"962","messageId":"963","endLine":143,"endColumn":17,"suggestions":"1040"},{"ruleId":"956","severity":1,"message":"957","line":11,"column":8,"nodeType":"958","messageId":"959","endLine":11,"endColumn":13},{"ruleId":"969","severity":2,"message":"1041","line":39,"column":4,"nodeType":null,"messageId":"971","endLine":39,"endColumn":6},{"ruleId":"960","severity":2,"message":"961","line":57,"column":21,"nodeType":"962","messageId":"963","endLine":57,"endColumn":25,"suggestions":"1042"},{"ruleId":"960","severity":2,"message":"961","line":77,"column":15,"nodeType":"962","messageId":"963","endLine":77,"endColumn":19,"suggestions":"1043"},{"ruleId":"960","severity":2,"message":"961","line":121,"column":23,"nodeType":"962","messageId":"963","endLine":121,"endColumn":27,"suggestions":"1044"},{"ruleId":"960","severity":2,"message":"961","line":134,"column":19,"nodeType":"962","messageId":"963","endLine":134,"endColumn":23,"suggestions":"1045"},{"ruleId":"960","severity":2,"message":"961","line":169,"column":17,"nodeType":"962","messageId":"963","endLine":169,"endColumn":21,"suggestions":"1046"},{"ruleId":"960","severity":2,"message":"961","line":180,"column":17,"nodeType":"962","messageId":"963","endLine":180,"endColumn":21,"suggestions":"1047"},{"ruleId":"956","severity":1,"message":"957","line":9,"column":8,"nodeType":"958","messageId":"959","endLine":9,"endColumn":13},{"ruleId":"960","severity":2,"message":"961","line":72,"column":21,"nodeType":"962","messageId":"963","endLine":72,"endColumn":25,"suggestions":"1048"},{"ruleId":"960","severity":2,"message":"961","line":106,"column":15,"nodeType":"962","messageId":"963","endLine":106,"endColumn":19,"suggestions":"1049"},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"980","severity":1,"message":"981","line":146,"column":38,"nodeType":"982","messageId":"983","endLine":146,"endColumn":41,"suggestions":"1050"},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":11,"column":8,"nodeType":"958","messageId":"959","endLine":11,"endColumn":13},{"ruleId":"969","severity":2,"message":"1051","line":51,"column":5,"nodeType":null,"messageId":"971","endLine":51,"endColumn":7},{"ruleId":"960","severity":2,"message":"961","line":83,"column":13,"nodeType":"962","messageId":"963","endLine":83,"endColumn":17,"suggestions":"1052"},{"ruleId":"960","severity":2,"message":"961","line":103,"column":21,"nodeType":"962","messageId":"963","endLine":103,"endColumn":25,"suggestions":"1053"},{"ruleId":"960","severity":2,"message":"961","line":118,"column":17,"nodeType":"962","messageId":"963","endLine":118,"endColumn":21,"suggestions":"1054"},{"ruleId":"960","severity":2,"message":"961","line":125,"column":13,"nodeType":"962","messageId":"963","endLine":125,"endColumn":17,"suggestions":"1055"},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"969","severity":2,"message":"1056","line":29,"column":52,"nodeType":null,"messageId":"971","endLine":29,"endColumn":54},{"ruleId":"1030","severity":2,"message":"1031","line":54,"column":19,"nodeType":"1032","messageId":"1033","endLine":54,"endColumn":67,"suggestions":"1057"},{"ruleId":"956","severity":1,"message":"957","line":11,"column":8,"nodeType":"958","messageId":"959","endLine":11,"endColumn":13},{"ruleId":"960","severity":2,"message":"961","line":136,"column":19,"nodeType":"962","messageId":"963","endLine":136,"endColumn":23,"suggestions":"1058"},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"960","severity":2,"message":"961","line":18,"column":60,"nodeType":"962","messageId":"963","endLine":18,"endColumn":64,"suggestions":"1059"},{"ruleId":"960","severity":2,"message":"961","line":19,"column":59,"nodeType":"962","messageId":"963","endLine":19,"endColumn":63,"suggestions":"1060"},{"ruleId":"960","severity":2,"message":"961","line":22,"column":9,"nodeType":"962","messageId":"963","endLine":22,"endColumn":13,"suggestions":"1061"},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"960","severity":2,"message":"961","line":23,"column":64,"nodeType":"962","messageId":"963","endLine":23,"endColumn":68,"suggestions":"1062"},{"ruleId":"960","severity":2,"message":"961","line":63,"column":11,"nodeType":"962","messageId":"963","endLine":63,"endColumn":15,"suggestions":"1063"},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"969","severity":2,"message":"1064","line":23,"column":64,"nodeType":null,"messageId":"971","endLine":23,"endColumn":66},{"ruleId":"956","severity":1,"message":"957","line":8,"column":8,"nodeType":"958","messageId":"959","endLine":8,"endColumn":13},{"ruleId":"1030","severity":2,"message":"1031","line":61,"column":16,"nodeType":"1032","messageId":"1033","endLine":63,"endColumn":19,"suggestions":"1065"},{"ruleId":"960","severity":2,"message":"961","line":63,"column":15,"nodeType":"962","messageId":"963","endLine":63,"endColumn":19,"suggestions":"1066"},{"ruleId":"956","severity":1,"message":"957","line":14,"column":8,"nodeType":"958","messageId":"959","endLine":14,"endColumn":13},{"ruleId":"956","severity":1,"message":"1067","line":21,"column":3,"nodeType":"958","messageId":"959","endLine":21,"endColumn":11},{"ruleId":"969","severity":2,"message":"1051","line":24,"column":4,"nodeType":null,"messageId":"971","endLine":24,"endColumn":6},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":12,"column":8,"nodeType":"958","messageId":"959","endLine":12,"endColumn":13},{"ruleId":"980","severity":1,"message":"981","line":18,"column":41,"nodeType":"982","messageId":"983","endLine":18,"endColumn":44,"suggestions":"1068"},{"ruleId":"980","severity":1,"message":"981","line":18,"column":47,"nodeType":"982","messageId":"983","endLine":18,"endColumn":50,"suggestions":"1069"},{"ruleId":"980","severity":1,"message":"981","line":37,"column":41,"nodeType":"982","messageId":"983","endLine":37,"endColumn":44,"suggestions":"1070"},{"ruleId":"980","severity":1,"message":"981","line":37,"column":47,"nodeType":"982","messageId":"983","endLine":37,"endColumn":50,"suggestions":"1071"},{"ruleId":"980","severity":1,"message":"981","line":56,"column":28,"nodeType":"982","messageId":"983","endLine":56,"endColumn":31,"suggestions":"1072"},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"990","severity":2,"message":"991","line":37,"column":8,"nodeType":"992","messageId":"963","endLine":37,"endColumn":24,"suggestions":"1073"},{"ruleId":"956","severity":1,"message":"957","line":13,"column":8,"nodeType":"958","messageId":"959","endLine":13,"endColumn":13},{"ruleId":"980","severity":1,"message":"981","line":45,"column":41,"nodeType":"982","messageId":"983","endLine":45,"endColumn":44,"suggestions":"1074"},{"ruleId":"980","severity":1,"message":"981","line":45,"column":47,"nodeType":"982","messageId":"983","endLine":45,"endColumn":50,"suggestions":"1075"},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"960","severity":2,"message":"961","line":22,"column":74,"nodeType":"962","messageId":"963","endLine":22,"endColumn":78,"suggestions":"1076"},{"ruleId":"960","severity":2,"message":"961","line":23,"column":69,"nodeType":"962","messageId":"963","endLine":23,"endColumn":73,"suggestions":"1077"},{"ruleId":"960","severity":2,"message":"961","line":32,"column":9,"nodeType":"962","messageId":"963","endLine":32,"endColumn":13,"suggestions":"1078"},{"ruleId":"960","severity":2,"message":"961","line":35,"column":9,"nodeType":"962","messageId":"963","endLine":35,"endColumn":13,"suggestions":"1079"},{"ruleId":"960","severity":2,"message":"961","line":36,"column":69,"nodeType":"962","messageId":"963","endLine":36,"endColumn":73,"suggestions":"1080"},{"ruleId":"956","severity":1,"message":"957","line":13,"column":8,"nodeType":"958","messageId":"959","endLine":13,"endColumn":13},{"ruleId":"995","severity":2,"message":"996","line":27,"column":40,"nodeType":"997","messageId":"998","endLine":27,"endColumn":42},{"ruleId":"969","severity":2,"message":"1081","line":30,"column":54,"nodeType":null,"messageId":"971","endLine":30,"endColumn":56},{"ruleId":"960","severity":2,"message":"961","line":165,"column":25,"nodeType":"962","messageId":"963","endLine":165,"endColumn":29,"suggestions":"1082"},{"ruleId":"960","severity":2,"message":"961","line":183,"column":33,"nodeType":"962","messageId":"963","endLine":183,"endColumn":37,"suggestions":"1083"},{"ruleId":"960","severity":2,"message":"961","line":206,"column":33,"nodeType":"962","messageId":"963","endLine":206,"endColumn":37,"suggestions":"1084"},{"ruleId":"960","severity":2,"message":"961","line":210,"column":25,"nodeType":"962","messageId":"963","endLine":210,"endColumn":29,"suggestions":"1085"},{"ruleId":"980","severity":1,"message":"981","line":224,"column":15,"nodeType":"982","messageId":"983","endLine":224,"endColumn":18,"suggestions":"1086"},{"ruleId":"980","severity":1,"message":"981","line":224,"column":23,"nodeType":"982","messageId":"983","endLine":224,"endColumn":26,"suggestions":"1087"},{"ruleId":"956","severity":1,"message":"957","line":11,"column":8,"nodeType":"958","messageId":"959","endLine":11,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":13,"column":8,"nodeType":"958","messageId":"959","endLine":13,"endColumn":13},{"ruleId":"980","severity":1,"message":"981","line":19,"column":43,"nodeType":"982","messageId":"983","endLine":19,"endColumn":46,"suggestions":"1088"},{"ruleId":"980","severity":1,"message":"981","line":19,"column":49,"nodeType":"982","messageId":"983","endLine":19,"endColumn":52,"suggestions":"1089"},{"ruleId":"980","severity":1,"message":"981","line":50,"column":45,"nodeType":"982","messageId":"983","endLine":50,"endColumn":48,"suggestions":"1090"},{"ruleId":"980","severity":1,"message":"981","line":50,"column":51,"nodeType":"982","messageId":"983","endLine":50,"endColumn":54,"suggestions":"1091"},{"ruleId":"980","severity":1,"message":"981","line":69,"column":28,"nodeType":"982","messageId":"983","endLine":69,"endColumn":31,"suggestions":"1092"},{"ruleId":"956","severity":1,"message":"957","line":10,"column":8,"nodeType":"958","messageId":"959","endLine":10,"endColumn":13},{"ruleId":"969","severity":2,"message":"1093","line":51,"column":4,"nodeType":null,"messageId":"971","endLine":51,"endColumn":6},{"ruleId":"956","severity":1,"message":"957","line":6,"column":8,"nodeType":"958","messageId":"959","endLine":6,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"969","severity":2,"message":"1094","line":79,"column":4,"nodeType":null,"messageId":"971","endLine":79,"endColumn":6},{"ruleId":"990","severity":2,"message":"991","line":82,"column":8,"nodeType":"992","messageId":"963","endLine":82,"endColumn":50,"suggestions":"1095"},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"969","severity":2,"message":"1096","line":94,"column":4,"nodeType":null,"messageId":"971","endLine":94,"endColumn":6},{"ruleId":"990","severity":2,"message":"991","line":97,"column":8,"nodeType":"992","messageId":"963","endLine":97,"endColumn":50,"suggestions":"1097"},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"969","severity":2,"message":"1093","line":92,"column":4,"nodeType":null,"messageId":"971","endLine":92,"endColumn":6},{"ruleId":"960","severity":2,"message":"961","line":94,"column":51,"nodeType":"962","messageId":"963","endLine":94,"endColumn":55,"suggestions":"1098"},{"ruleId":"990","severity":2,"message":"991","line":96,"column":10,"nodeType":"992","messageId":"963","endLine":96,"endColumn":52,"suggestions":"1099"},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"960","severity":2,"message":"961","line":17,"column":12,"nodeType":"962","messageId":"963","endLine":17,"endColumn":16,"suggestions":"1100"},{"ruleId":"956","severity":1,"message":"957","line":1,"column":8,"nodeType":"958","messageId":"959","endLine":1,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":3,"column":8,"nodeType":"958","messageId":"959","endLine":3,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":3,"column":8,"nodeType":"958","messageId":"959","endLine":3,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"1101","severity":2,"message":"1102","line":3,"column":1,"nodeType":"1103","messageId":"1104","endLine":3,"endColumn":14},{"ruleId":"960","severity":2,"message":"961","line":23,"column":65,"nodeType":"962","messageId":"963","endLine":23,"endColumn":69,"suggestions":"1105"},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"1101","severity":2,"message":"1102","line":3,"column":1,"nodeType":"1103","messageId":"1104","endLine":3,"endColumn":14},{"ruleId":"1101","severity":2,"message":"1102","line":5,"column":1,"nodeType":"1103","messageId":"1104","endLine":5,"endColumn":14},{"ruleId":"960","severity":2,"message":"961","line":31,"column":9,"nodeType":"962","messageId":"963","endLine":31,"endColumn":13,"suggestions":"1106"},{"ruleId":"956","severity":1,"message":"957","line":16,"column":8,"nodeType":"958","messageId":"959","endLine":16,"endColumn":13},{"ruleId":"1107","severity":1,"message":"1108","line":21,"column":3,"nodeType":"1109","messageId":"1110","endLine":21,"endColumn":66,"suggestions":"1111"},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":2,"column":8,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":1,"column":8,"nodeType":"958","messageId":"959","endLine":1,"endColumn":13},{"ruleId":"1101","severity":2,"message":"1102","line":2,"column":1,"nodeType":"1103","messageId":"1104","endLine":2,"endColumn":14},{"ruleId":"1101","severity":2,"message":"1102","line":4,"column":1,"nodeType":"1103","messageId":"1104","endLine":4,"endColumn":14},{"ruleId":"1101","severity":2,"message":"1102","line":6,"column":1,"nodeType":"1103","messageId":"1104","endLine":6,"endColumn":14},"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","unicorn/no-null","Use `undefined` instead of `null`.","Literal","error",["1112","1113"],["1114"],["1115"],["1116"],["1117"],"sonarjs/cognitive-complexity","Refactor this function to reduce its Cognitive Complexity from 49 to the 15 allowed.","refactorFunction",["1118"],["1119"],["1120"],"Refactor this function to reduce its Cognitive Complexity from 102 to the 15 allowed.",["1121"],["1122"],["1123"],["1124"],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["1125","1126"],["1127","1128"],["1129","1130"],["1131","1132"],["1133","1134"],"Refactor this function to reduce its Cognitive Complexity from 34 to the 15 allowed.","unicorn/no-new-array","Do not use `new Array()`.","NewExpression",["1135","1136"],["1137"],"@typescript-eslint/ban-types","Don't use `{}` as a type. `{}` actually means \"any non-nullish value\".\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.\n- If you want a type meaning \"empty object\", you probably want `Record<string, never>` instead.","TSTypeLiteral","bannedTypeMessage","Refactor this function to reduce its Cognitive Complexity from 27 to the 15 allowed.",["1138"],["1139"],["1140"],["1141"],["1142","1143"],["1144","1145"],"Refactor this function to reduce its Cognitive Complexity from 33 to the 15 allowed.","sonarjs/no-duplicate-string","Define a constant instead of duplicating this literal 4 times.","defineConstant","unicorn/prefer-spread","Prefer the spread operator over `Array#concat(…)`.","array-concat",["1146","1147","1148"],["1149"],["1150"],["1151"],"Refactor this function to reduce its Cognitive Complexity from 58 to the 15 allowed.",["1152"],["1153"],["1154"],["1155"],["1156"],["1157"],["1158"],["1159","1160"],["1161"],["1162"],"Refactor this function to reduce its Cognitive Complexity from 38 to the 15 allowed.",["1163"],"unicorn/prefer-logical-operator-over-ternary","Prefer using a logical operator over a ternary.","ConditionalExpression","prefer-logical-operator-over-ternary/error",["1164","1165"],"Refactor this function to reduce its Cognitive Complexity from 43 to the 15 allowed.","unicorn/no-nested-ternary","Do not nest ternary expressions.","too-deep",["1166"],["1167"],"Refactor this function to reduce its Cognitive Complexity from 87 to the 15 allowed.",["1168"],["1169"],["1170"],["1171"],["1172"],["1173"],["1174"],["1175"],["1176","1177"],"Refactor this function to reduce its Cognitive Complexity from 22 to the 15 allowed.",["1178"],["1179"],["1180"],["1181"],"Refactor this function to reduce its Cognitive Complexity from 16 to the 15 allowed.",["1182","1183"],["1184"],["1185"],["1186"],["1187"],["1188"],["1189"],"Refactor this function to reduce its Cognitive Complexity from 26 to the 15 allowed.",["1190","1191"],["1192"],"'tabIndex' is assigned a value but never used.",["1193","1194"],["1195","1196"],["1197","1198"],["1199","1200"],["1201","1202"],["1203","1204"],["1205","1206"],["1207","1208"],["1209"],["1210"],["1211"],["1212"],["1213"],"Refactor this function to reduce its Cognitive Complexity from 95 to the 15 allowed.",["1214"],["1215"],["1216"],["1217"],["1218","1219"],["1220","1221"],["1222","1223"],["1224","1225"],["1226","1227"],["1228","1229"],["1230","1231"],"Refactor this function to reduce its Cognitive Complexity from 29 to the 15 allowed.","Refactor this function to reduce its Cognitive Complexity from 18 to the 15 allowed.",["1232","1233"],"Refactor this function to reduce its Cognitive Complexity from 28 to the 15 allowed.",["1234","1235"],["1236"],["1237","1238"],["1239","1240"],"@typescript-eslint/ban-ts-comment","Do not use \"@ts-ignore\" because it alters compilation errors.","Line","tsDirectiveComment",["1241"],["1242"],"@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["1243"],{"messageId":"1244","fix":"1245","desc":"1246"},{"messageId":"1247","fix":"1248","desc":"1249"},{"messageId":"1247","fix":"1250","desc":"1249"},{"messageId":"1247","fix":"1251","desc":"1249"},{"messageId":"1247","fix":"1252","desc":"1249"},{"messageId":"1247","fix":"1253","desc":"1249"},{"messageId":"1247","fix":"1254","desc":"1249"},{"messageId":"1247","fix":"1255","desc":"1249"},{"messageId":"1247","fix":"1256","desc":"1249"},{"messageId":"1247","fix":"1257","desc":"1249"},{"messageId":"1247","fix":"1258","desc":"1249"},{"messageId":"1247","fix":"1259","desc":"1249"},{"messageId":"1247","fix":"1260","desc":"1249"},{"messageId":"1261","fix":"1262","desc":"1263"},{"messageId":"1264","fix":"1265","desc":"1266"},{"messageId":"1261","fix":"1267","desc":"1263"},{"messageId":"1264","fix":"1268","desc":"1266"},{"messageId":"1261","fix":"1269","desc":"1263"},{"messageId":"1264","fix":"1270","desc":"1266"},{"messageId":"1261","fix":"1271","desc":"1263"},{"messageId":"1264","fix":"1272","desc":"1266"},{"messageId":"1261","fix":"1273","desc":"1263"},{"messageId":"1264","fix":"1274","desc":"1266"},{"messageId":"1275","fix":"1276","desc":"1277"},{"messageId":"1278","fix":"1279","desc":"1280"},{"messageId":"1247","fix":"1281","desc":"1249"},{"messageId":"1247","fix":"1282","desc":"1249"},{"messageId":"1247","fix":"1283","desc":"1249"},{"messageId":"1247","fix":"1284","desc":"1249"},{"messageId":"1247","fix":"1285","desc":"1249"},{"messageId":"1261","fix":"1286","desc":"1263"},{"messageId":"1264","fix":"1287","desc":"1266"},{"messageId":"1261","fix":"1288","desc":"1263"},{"messageId":"1264","fix":"1289","desc":"1266"},{"messageId":"1290","fix":"1291","desc":"1292"},{"messageId":"1293","fix":"1294","desc":"1295"},{"messageId":"1296","fix":"1297","desc":"1298"},{"messageId":"1247","fix":"1299","desc":"1249"},{"messageId":"1247","fix":"1300","desc":"1249"},{"messageId":"1247","fix":"1301","desc":"1249"},{"messageId":"1247","fix":"1302","desc":"1249"},{"messageId":"1247","fix":"1303","desc":"1249"},{"messageId":"1247","fix":"1304","desc":"1249"},{"messageId":"1247","fix":"1305","desc":"1249"},{"messageId":"1247","fix":"1306","desc":"1249"},{"messageId":"1247","fix":"1307","desc":"1249"},{"messageId":"1247","fix":"1308","desc":"1249"},{"messageId":"1275","fix":"1309","desc":"1277"},{"messageId":"1278","fix":"1310","desc":"1280"},{"messageId":"1247","fix":"1311","desc":"1249"},{"messageId":"1247","fix":"1312","desc":"1249"},{"messageId":"1247","fix":"1313","desc":"1249"},{"messageId":"1314","data":"1315","fix":"1316","desc":"1317"},{"messageId":"1314","data":"1318","fix":"1319","desc":"1320"},{"messageId":"1247","fix":"1321","desc":"1249"},{"messageId":"1247","fix":"1322","desc":"1249"},{"messageId":"1247","fix":"1323","desc":"1249"},{"messageId":"1247","fix":"1324","desc":"1249"},{"messageId":"1247","fix":"1325","desc":"1249"},{"messageId":"1247","fix":"1326","desc":"1249"},{"messageId":"1247","fix":"1327","desc":"1249"},{"messageId":"1247","fix":"1328","desc":"1249"},{"messageId":"1247","fix":"1329","desc":"1249"},{"messageId":"1247","fix":"1330","desc":"1249"},{"messageId":"1261","fix":"1331","desc":"1263"},{"messageId":"1264","fix":"1332","desc":"1266"},{"messageId":"1247","fix":"1333","desc":"1249"},{"messageId":"1247","fix":"1334","desc":"1249"},{"messageId":"1247","fix":"1335","desc":"1249"},{"messageId":"1247","fix":"1336","desc":"1249"},{"messageId":"1314","data":"1337","fix":"1338","desc":"1317"},{"messageId":"1314","data":"1339","fix":"1340","desc":"1320"},{"messageId":"1247","fix":"1341","desc":"1249"},{"messageId":"1247","fix":"1342","desc":"1249"},{"messageId":"1247","fix":"1343","desc":"1249"},{"messageId":"1247","fix":"1344","desc":"1249"},{"messageId":"1247","fix":"1345","desc":"1249"},{"messageId":"1247","fix":"1346","desc":"1249"},{"messageId":"1314","data":"1347","fix":"1348","desc":"1317"},{"messageId":"1314","data":"1349","fix":"1350","desc":"1320"},{"messageId":"1247","fix":"1351","desc":"1249"},{"messageId":"1261","fix":"1352","desc":"1263"},{"messageId":"1264","fix":"1353","desc":"1266"},{"messageId":"1261","fix":"1354","desc":"1263"},{"messageId":"1264","fix":"1355","desc":"1266"},{"messageId":"1261","fix":"1356","desc":"1263"},{"messageId":"1264","fix":"1357","desc":"1266"},{"messageId":"1261","fix":"1358","desc":"1263"},{"messageId":"1264","fix":"1359","desc":"1266"},{"messageId":"1261","fix":"1360","desc":"1263"},{"messageId":"1264","fix":"1361","desc":"1266"},{"messageId":"1275","fix":"1362","desc":"1277"},{"messageId":"1278","fix":"1363","desc":"1280"},{"messageId":"1261","fix":"1364","desc":"1263"},{"messageId":"1264","fix":"1365","desc":"1266"},{"messageId":"1261","fix":"1366","desc":"1263"},{"messageId":"1264","fix":"1367","desc":"1266"},{"messageId":"1247","fix":"1368","desc":"1249"},{"messageId":"1247","fix":"1369","desc":"1249"},{"messageId":"1247","fix":"1370","desc":"1249"},{"messageId":"1247","fix":"1371","desc":"1249"},{"messageId":"1247","fix":"1372","desc":"1249"},{"messageId":"1247","fix":"1373","desc":"1249"},{"messageId":"1247","fix":"1374","desc":"1249"},{"messageId":"1247","fix":"1375","desc":"1249"},{"messageId":"1247","fix":"1376","desc":"1249"},{"messageId":"1261","fix":"1377","desc":"1263"},{"messageId":"1264","fix":"1378","desc":"1266"},{"messageId":"1261","fix":"1379","desc":"1263"},{"messageId":"1264","fix":"1380","desc":"1266"},{"messageId":"1261","fix":"1381","desc":"1263"},{"messageId":"1264","fix":"1382","desc":"1266"},{"messageId":"1261","fix":"1383","desc":"1263"},{"messageId":"1264","fix":"1384","desc":"1266"},{"messageId":"1261","fix":"1385","desc":"1263"},{"messageId":"1264","fix":"1386","desc":"1266"},{"messageId":"1261","fix":"1387","desc":"1263"},{"messageId":"1264","fix":"1388","desc":"1266"},{"messageId":"1261","fix":"1389","desc":"1263"},{"messageId":"1264","fix":"1390","desc":"1266"},{"messageId":"1275","fix":"1391","desc":"1277"},{"messageId":"1278","fix":"1392","desc":"1280"},{"messageId":"1275","fix":"1393","desc":"1277"},{"messageId":"1278","fix":"1394","desc":"1280"},{"messageId":"1247","fix":"1395","desc":"1249"},{"messageId":"1275","fix":"1396","desc":"1277"},{"messageId":"1278","fix":"1397","desc":"1280"},{"messageId":"1244","fix":"1398","desc":"1246"},{"messageId":"1247","fix":"1399","desc":"1249"},{"messageId":"1247","fix":"1400","desc":"1249"},{"messageId":"1247","fix":"1401","desc":"1249"},{"messageId":"1402","fix":"1403","desc":"1404"},"remove",{"range":"1405","text":"1406"},"Remove `null`.","replace",{"range":"1405","text":"1407"},"Replace `null` with `undefined`.",{"range":"1408","text":"1407"},{"range":"1409","text":"1407"},{"range":"1410","text":"1407"},{"range":"1411","text":"1407"},{"range":"1412","text":"1407"},{"range":"1413","text":"1407"},{"range":"1414","text":"1407"},{"range":"1415","text":"1407"},{"range":"1416","text":"1407"},{"range":"1417","text":"1407"},{"range":"1418","text":"1407"},"suggestUnknown",{"range":"1419","text":"1420"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"1419","text":"1421"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"1422","text":"1420"},{"range":"1422","text":"1421"},{"range":"1423","text":"1420"},{"range":"1423","text":"1421"},{"range":"1424","text":"1420"},{"range":"1424","text":"1421"},{"range":"1425","text":"1420"},{"range":"1425","text":"1421"},"array-length",{"range":"1426","text":"1427"},"The argument is the length of array.","only-element",{"range":"1426","text":"1428"},"The argument is the only element of array.",{"range":"1429","text":"1407"},{"range":"1430","text":"1407"},{"range":"1431","text":"1407"},{"range":"1432","text":"1407"},{"range":"1433","text":"1407"},{"range":"1434","text":"1420"},{"range":"1434","text":"1421"},{"range":"1435","text":"1420"},{"range":"1435","text":"1421"},"argument-is-spreadable",{"range":"1436","text":"1437"},"First argument is an `array`.","argument-is-not-spreadable",{"range":"1438","text":"1439"},"First argument is not an `array`.","test-argument",{"range":"1440","text":"1441"},"Test first argument with `Array.isArray(…)`.",{"range":"1442","text":"1407"},{"range":"1443","text":"1407"},{"range":"1444","text":"1407"},{"range":"1445","text":"1407"},{"range":"1446","text":"1407"},{"range":"1447","text":"1407"},{"range":"1448","text":"1407"},{"range":"1449","text":"1407"},{"range":"1450","text":"1407"},{"range":"1451","text":"1407"},{"range":"1452","text":"1453"},{"range":"1452","text":"1454"},{"range":"1455","text":"1407"},{"range":"1456","text":"1407"},{"range":"1457","text":"1407"},"prefer-logical-operator-over-ternary/suggestion",{"operator":"1458"},{"range":"1459","text":"1460"},"Switch to `??` operator.",{"operator":"1461"},{"range":"1459","text":"1462"},"Switch to `||` operator.",{"range":"1463","text":"1407"},{"range":"1464","text":"1407"},{"range":"1465","text":"1407"},{"range":"1466","text":"1407"},{"range":"1467","text":"1407"},{"range":"1468","text":"1407"},{"range":"1469","text":"1407"},{"range":"1470","text":"1407"},{"range":"1471","text":"1407"},{"range":"1472","text":"1407"},{"range":"1473","text":"1420"},{"range":"1473","text":"1421"},{"range":"1474","text":"1407"},{"range":"1475","text":"1407"},{"range":"1476","text":"1407"},{"range":"1477","text":"1407"},{"operator":"1458"},{"range":"1478","text":"1460"},{"operator":"1461"},{"range":"1478","text":"1462"},{"range":"1479","text":"1407"},{"range":"1480","text":"1407"},{"range":"1481","text":"1407"},{"range":"1482","text":"1407"},{"range":"1483","text":"1407"},{"range":"1484","text":"1407"},{"operator":"1458"},{"range":"1485","text":"1486"},{"operator":"1461"},{"range":"1485","text":"1487"},{"range":"1488","text":"1407"},{"range":"1489","text":"1420"},{"range":"1489","text":"1421"},{"range":"1490","text":"1420"},{"range":"1490","text":"1421"},{"range":"1491","text":"1420"},{"range":"1491","text":"1421"},{"range":"1492","text":"1420"},{"range":"1492","text":"1421"},{"range":"1493","text":"1420"},{"range":"1493","text":"1421"},{"range":"1494","text":"1495"},{"range":"1494","text":"1496"},{"range":"1497","text":"1420"},{"range":"1497","text":"1421"},{"range":"1498","text":"1420"},{"range":"1498","text":"1421"},{"range":"1499","text":"1407"},{"range":"1500","text":"1407"},{"range":"1501","text":"1407"},{"range":"1502","text":"1407"},{"range":"1503","text":"1407"},{"range":"1504","text":"1407"},{"range":"1505","text":"1407"},{"range":"1506","text":"1407"},{"range":"1507","text":"1407"},{"range":"1508","text":"1420"},{"range":"1508","text":"1421"},{"range":"1509","text":"1420"},{"range":"1509","text":"1421"},{"range":"1510","text":"1420"},{"range":"1510","text":"1421"},{"range":"1511","text":"1420"},{"range":"1511","text":"1421"},{"range":"1512","text":"1420"},{"range":"1512","text":"1421"},{"range":"1513","text":"1420"},{"range":"1513","text":"1421"},{"range":"1514","text":"1420"},{"range":"1514","text":"1421"},{"range":"1515","text":"1516"},{"range":"1515","text":"1517"},{"range":"1518","text":"1519"},{"range":"1518","text":"1520"},{"range":"1521","text":"1407"},{"range":"1522","text":"1516"},{"range":"1522","text":"1517"},{"range":"1523","text":"1406"},{"range":"1523","text":"1407"},{"range":"1524","text":"1407"},{"range":"1525","text":"1407"},"suggestOptionalChain",{"range":"1526","text":"1527"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",[366,370],"","undefined",[1366,1370],[1844,1848],[1656,1660],[2910,2914],[2582,2586],[4626,4630],[745,749],[2620,2624],[2827,2831],[7352,7356],[8742,8746],[389,392],"unknown","never",[395,398],[936,939],[942,945],[1591,1594],[611,628],"Array.from({length})","[length]",[2932,2936],[4745,4749],[5308,5312],[5939,5943],[6029,6033],[6250,6253],[6258,6261],[2511,2553],"[...([] as DetailsText[]), ...item.content]",[2511,2553],"[...([] as DetailsText[]), item.content]",[2511,2553],"[...([] as DetailsText[]), ...(Array.isArray(item.content) ? item.content : [item.content])]",[3936,3940],[3624,3628],[4389,4393],[1118,1122],[1691,1695],[1739,1743],[2446,2450],[2871,2875],[3231,3235],[3279,3283],[2340,2386],"Array.from({length: typeof stub === 'number' ? stub : 6})","[typeof stub === 'number' ? stub : 6]",[2745,2749],[3564,3568],[1307,1311],"??",[1050,1098],"props.active ?? renderProps.active","||","props.active || renderProps.active",[3155,3159],[3599,3603],[1481,1485],[2137,2141],[3402,3406],[3844,3848],[4872,4876],[5255,5259],[1809,1813],[2712,2716],[3088,3091],[1731,1735],[2408,2412],[2853,2857],[3067,3071],[1375,1423],[3130,3134],[536,540],[600,604],[650,654],[532,536],[1551,1555],[1909,1965],"props.hint ?? null","props.hint || null",[1961,1965],[365,368],[371,374],[992,995],[998,1001],[1645,1648],[750,766],"Array.from({length: count})","[count]",[906,909],[912,915],[502,506],[576,580],[822,826],[931,935],[1005,1009],[5845,5849],[6708,6712],[7746,7750],[7872,7876],[8105,8108],[8113,8116],[389,392],[395,398],[1334,1337],[1340,1343],[1989,1992],[1410,1452],"Array.from({length: clamp === undefined ? 1 : clamp})","[clamp === undefined ? 1 : clamp]",[1689,1731],"Array.from({length: clamp === undefined ? 3 : clamp})","[clamp === undefined ? 3 : clamp]",[1833,1837],[1891,1933],[484,488],[606,610],[773,777],[356,357],"?"]
